[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About me",
    "section": "",
    "text": "Mi chiamo Massimiliano Moraca, sono un ingegnere per l’ambiente ed il territorio ed analizzo dati GIS. Altro su di me? Vai qui!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "PyGIS Blog",
    "section": "",
    "text": "Order By\n       Default\n         \n          Title\n        \n         \n          Date - Oldest\n        \n         \n          Date - Newest\n        \n     \n  \n    \n      \n      \n    \n\n\n\n\n\n\n\nTrovare la linea meno lunga in una lista di linee\n\n\n1 min\n\n\n\nline\n\n\n\nMettiamo il caso che abbiamo una lista di linee: come troviamo quella meno lunga?\n\n\n\nNov 20, 2022\n\n\n\n\n\n\n\n\n\n\n\nAnalisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover\n\n\n7 min\n\n\n\nvector\n\n\ngeoprocessing\n\n\n\nVediamo come è cambiata la copertura del suolo in Italia dal 1990 al 2018 usando i dati della CORINE Land Cover.\n\n\n\nAug 26, 2022\n\n\n\n\n\n\n\n\n\n\n\nVerificare il potenziale fotovoltaico di un tetto\n\n\n4 min\n\n\n\nline\n\n\n\nUsando un software GIS è possibile stimare se un tetto è o meno idoneo per un impianto fotovoltaico. E’ possibile fare la stessa cosa in Python? Te lo dico qui!\n\n\n\nMay 22, 2022\n\n\n\n\n\n\n\n\n\n\n\nTagliare una linea con un punto\n\n\n2 min\n\n\n\npoint\n\n\n\nTagliare una linea con un punto non è un’attività banalissima da fare in Python, in questo nuovo post mostrerò tre possibili strade per farlo.\n\n\n\nApr 18, 2022\n\n\n\n\n\n\n\n\n\n\n\nAnalisi di visibilità\n\n\n3 min\n\n\n\npoint\n\n\nraster\n\n\n\nUn’analisi di visibilità consente di stabilire quali sono le porzioni di paesaggio visibili da un osservatore posto in un determinato luogo ed ad una determinata quota.\n\n\n\nApr 7, 2022\n\n\n\n\n\n\n\n\n\n\n\nDa Point a PointZ\n\n\n1 min\n\n\n\npoint\n\n\n\nCon questo articolo ti spiegherò come convertire facilmente un vettore di punti 2D in uno 3D usando Python.\n\n\n\nMar 31, 2022\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html",
    "href": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html",
    "title": "Tagliare una linea con un punto",
    "section": "",
    "text": "Questa volta l’argomento trattato non nasce da una attività simile fatta con QGIS come per gli altri post precedenti ma dalla soluzione ad un problema in cui mi sono imbattuto e che mi ha portato via un po’ di tempo con non pochi grattacapi!\nLa richiesta era semplice, all’apparenza, ma non avevo fatto i conti con i Floating Point problems. In pratica, avendo una linea ed un punto lontano da essa dovevo trovare la distanza minima tra punto e lina e spezzare la linea sul punto di contatto tra la congiungente tra punto e linea."
  },
  {
    "objectID": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#newsletter",
    "href": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#newsletter",
    "title": "Tagliare una linea con un punto",
    "section": "Newsletter",
    "text": "Newsletter\nSe vuoi ricevere aggiornamenti sui prossimi articoli iscriviti alla newsletter!"
  },
  {
    "objectID": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#telegram",
    "href": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#telegram",
    "title": "Tagliare una linea con un punto",
    "section": "Telegram",
    "text": "Telegram\nSegui il canale Telegram CaffèGIS - I GIS a supporto dei processi evolutivi territoriali per ricevere aggiornamenti su iniziative ed informazioni a tema GIS."
  },
  {
    "objectID": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#offrimi-una-birra",
    "href": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#offrimi-una-birra",
    "title": "Tagliare una linea con un punto",
    "section": "Offrimi una birra!",
    "text": "Offrimi una birra!\nSe trovi interessanti i miei articoli offrimi una birra!\nAlla prossima!"
  },
  {
    "objectID": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#prima-di-iniziare",
    "href": "posts/tagliare-una-linea-con-un-punto/2022-04-18-tagliare-una-linea-con-un-punto.html#prima-di-iniziare",
    "title": "Tagliare una linea con un punto",
    "section": "Prima di iniziare",
    "text": "Prima di iniziare\n\nLibrerie\nPer raggiungere l’obiettivo userò le librerie che seguono:\n\n\nCode\nfrom matplotlib import pyplot as plt\nfrom shapely import wkt\nfrom shapely.ops import substring, nearest_points, snap, split\nfrom shapely.geometry import Point, LineString\n\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.simplefilter('ignore')\n\n\n\n\nFonti dati\n\n\nCode\npoint = wkt.loads('POINT (437845.7257845374 4529752.584581757)')\nline = wkt.loads('LINESTRING (438260.8093535866 4528121.6968436185, 442844.8639858717 4531930.850183684)')\n\nfig, ax = plt.subplots(figsize=(10, 10))\nax.set_xlabel('X coordinate', fontsize=15)\nax.set_ylabel('Y coordinate', fontsize=15)\n\nax.scatter(\n    *point.xy,\n    label='Point',\n    s=100,\n    facecolor='orange',\n    edgecolor='black'\n)\nplt.plot(*line.xy, label='Line', color='blue')\n\nplt.legend()\n\nplt.show()"
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html",
    "title": "Analisi di visibilità",
    "section": "",
    "text": "L’analisi di visibilità è un argomento molto interessante da trattare con Python. In un mio articolo l’ho affrontata usando QGIS, qui oggi vediamo come raggiungere lo stesso obiettivo con Python."
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#visualizzazione-dei-dati-grezzi",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#visualizzazione-dei-dati-grezzi",
    "title": "Analisi di visibilità",
    "section": "1.1 Visualizzazione dei dati grezzi",
    "text": "1.1 Visualizzazione dei dati grezzi\n\n\nCode\nraster_data = rio.open(dem)\n\nfig, ax = plt.subplots(figsize=(10, 10))\nshow(\n    source=raster_data,\n    cmap='tab20c_r',\n    contour=True,\n    ax=ax,\n    transform=raster_data.transform\n)\nshow(\n    source=raster_data,\n    cmap='terrain_r',\n    ax=ax,\n    transform=raster_data.transform\n)\nfor _index, row in points_data.iterrows():\n    coordinates = row.geometry.xy\n    ax.scatter(\n        *coordinates,\n        s=1000,\n        marker=\"*\",\n        facecolor='red',\n        edgecolor='black'\n    )\n    plt.text(\n        x=coordinates[0][0],\n        y=coordinates[1][0],\n        s=row.fid,\n        fontdict=dict(color='black', size=10),\n        bbox=dict(facecolor='white', alpha=0.75)\n    )\nplt.show()"
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#quota-dellosservatore",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#quota-dellosservatore",
    "title": "Analisi di visibilità",
    "section": "2.1 Quota dell’osservatore",
    "text": "2.1 Quota dell’osservatore\nLa quota dell’osservatore è un dato fondamentale per portare a termine una analisi di visibilità. Può essere la quota del punto in cui si trova l’osservatore o una quota fittizia compatibile con la topografia dell’area(l’osservatore fittizio non può essere a 100 metri di altezza se stiamo esaminando un’area in cui la quota minima è 500 metri). Quello che manca nei miei dati è proprio la quota!\nMa non è un problema perchè mi viene in soccorso un’esperianza già fatta di recente e che vado a riprodurre:\n\n\nCode\nx_coord = single_point.iloc[0].geometry.xy[0][0]\ny_coord = single_point.iloc[0].geometry.xy[1][0]\n\ndataarray_value = raster.sel(x=x_coord, y=y_coord, method=\"nearest\")\npixel_value = dataarray_value.data\n\npixel_value\n\n\narray(450, dtype=int16)\n\n\nOra che ho tutto quello che mi serve posso effettuare l’analisi di visibilità.\n\n\nCode\nview = viewshed(raster, x=x_coord, y=y_coord, observer_elev=pixel_value)\nview\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.DataArray (y: 1176, x: 1464)>\narray([[87.78651279, 87.78502168, 87.78352919, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.78533465, 87.78384115, 87.78234627, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.78415626, 87.78266038, 87.7811631 , ..., -1.        ,\n        -1.        , -1.        ],\n       ...,\n       [87.47039509, 87.46816885, 87.46593917, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.47149388, 87.46927054, 87.46704378, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.47259367, 87.47037324, 87.46814939, ..., -1.        ,\n        -1.        , -1.        ]])\nCoordinates:\n    band         int64 1\n  * x            (x) float64 4.386e+05 4.387e+05 ... 4.679e+05 4.679e+05\n  * y            (y) float64 4.513e+06 4.513e+06 ... 4.489e+06 4.489e+06\n    spatial_ref  int64 0\nAttributes:\n    _FillValue:    -32768.0\n    scale_factor:  1.0\n    add_offset:    0.0xarray.DataArrayy: 1176x: 146487.79 87.79 87.78 87.78 87.78 87.78 ... -1.0 -1.0 -1.0 -1.0 -1.0 -1.0array([[87.78651279, 87.78502168, 87.78352919, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.78533465, 87.78384115, 87.78234627, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.78415626, 87.78266038, 87.7811631 , ..., -1.        ,\n        -1.        , -1.        ],\n       ...,\n       [87.47039509, 87.46816885, 87.46593917, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.47149388, 87.46927054, 87.46704378, ..., -1.        ,\n        -1.        , -1.        ],\n       [87.47259367, 87.47037324, 87.46814939, ..., -1.        ,\n        -1.        , -1.        ]])Coordinates: (4)band()int641array(1)x(x)float644.386e+05 4.387e+05 ... 4.679e+05array([438642.315702, 438662.322106, 438682.328509, ..., 467871.671491,\n       467891.677894, 467911.684298])y(y)float644.513e+06 4.513e+06 ... 4.489e+06array([4512700.72858, 4512680.72734, 4512660.7261 , ..., 4489239.2739 ,\n       4489219.27266, 4489199.27142])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 33N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",15],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32633\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 33Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :15.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 33N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",15],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32633\"]]GeoTransform :438632.3125 20.00640368852459 0.0 4512710.7292 0.0 -20.001240136054324array(0)Attributes: (3)_FillValue :-32768.0scale_factor :1.0add_offset :0.0\n\n\n\n\nCode\nview_sel = view.where(view >= 0)\nview_sel\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n<xarray.DataArray (y: 1176, x: 1464)>\narray([[87.78651279, 87.78502168, 87.78352919, ...,         nan,\n                nan,         nan],\n       [87.78533465, 87.78384115, 87.78234627, ...,         nan,\n                nan,         nan],\n       [87.78415626, 87.78266038, 87.7811631 , ...,         nan,\n                nan,         nan],\n       ...,\n       [87.47039509, 87.46816885, 87.46593917, ...,         nan,\n                nan,         nan],\n       [87.47149388, 87.46927054, 87.46704378, ...,         nan,\n                nan,         nan],\n       [87.47259367, 87.47037324, 87.46814939, ...,         nan,\n                nan,         nan]])\nCoordinates:\n    band         int64 1\n  * x            (x) float64 4.386e+05 4.387e+05 ... 4.679e+05 4.679e+05\n  * y            (y) float64 4.513e+06 4.513e+06 ... 4.489e+06 4.489e+06\n    spatial_ref  int64 0\nAttributes:\n    _FillValue:    -32768.0\n    scale_factor:  1.0\n    add_offset:    0.0xarray.DataArrayy: 1176x: 146487.79 87.79 87.78 87.78 87.78 87.78 87.78 ... nan nan nan nan nan nanarray([[87.78651279, 87.78502168, 87.78352919, ...,         nan,\n                nan,         nan],\n       [87.78533465, 87.78384115, 87.78234627, ...,         nan,\n                nan,         nan],\n       [87.78415626, 87.78266038, 87.7811631 , ...,         nan,\n                nan,         nan],\n       ...,\n       [87.47039509, 87.46816885, 87.46593917, ...,         nan,\n                nan,         nan],\n       [87.47149388, 87.46927054, 87.46704378, ...,         nan,\n                nan,         nan],\n       [87.47259367, 87.47037324, 87.46814939, ...,         nan,\n                nan,         nan]])Coordinates: (4)band()int641array(1)x(x)float644.386e+05 4.387e+05 ... 4.679e+05array([438642.315702, 438662.322106, 438682.328509, ..., 467871.671491,\n       467891.677894, 467911.684298])y(y)float644.513e+06 4.513e+06 ... 4.489e+06array([4512700.72858, 4512680.72734, 4512660.7261 , ..., 4489239.2739 ,\n       4489219.27266, 4489199.27142])spatial_ref()int640crs_wkt :PROJCS[\"WGS 84 / UTM zone 33N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",15],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32633\"]]semi_major_axis :6378137.0semi_minor_axis :6356752.314245179inverse_flattening :298.257223563reference_ellipsoid_name :WGS 84longitude_of_prime_meridian :0.0prime_meridian_name :Greenwichgeographic_crs_name :WGS 84horizontal_datum_name :World Geodetic System 1984projected_crs_name :WGS 84 / UTM zone 33Ngrid_mapping_name :transverse_mercatorlatitude_of_projection_origin :0.0longitude_of_central_meridian :15.0false_easting :500000.0false_northing :0.0scale_factor_at_central_meridian :0.9996spatial_ref :PROJCS[\"WGS 84 / UTM zone 33N\",GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563,AUTHORITY[\"EPSG\",\"7030\"]],AUTHORITY[\"EPSG\",\"6326\"]],PRIMEM[\"Greenwich\",0,AUTHORITY[\"EPSG\",\"8901\"]],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AUTHORITY[\"EPSG\",\"4326\"]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"latitude_of_origin\",0],PARAMETER[\"central_meridian\",15],PARAMETER[\"scale_factor\",0.9996],PARAMETER[\"false_easting\",500000],PARAMETER[\"false_northing\",0],UNIT[\"metre\",1,AUTHORITY[\"EPSG\",\"9001\"]],AXIS[\"Easting\",EAST],AXIS[\"Northing\",NORTH],AUTHORITY[\"EPSG\",\"32633\"]]GeoTransform :438632.3125 20.00640368852459 0.0 4512710.7292 0.0 -20.001240136054324array(0)Attributes: (3)_FillValue :-32768.0scale_factor :1.0add_offset :0.0\n\n\n\n\nCode\nfig, ax = plt.subplots(figsize=(20, 10))\nimshow(view_sel, ax=ax)\nplt.show()\n\n\n\n\n\nAnalisi effettuata, ora sono curioso di vedere quali aree ricadono nel campo visivo dell’osservatore.\n\n\nCode\nfig, ax = plt.subplots(figsize=(20, 10))\nimshow(\n    make_hillshade,\n    ax=ax,\n    cmap='gist_gray',\n)\nimshow(\n    raster,\n    ax=ax,\n    cmap='terrain',\n    vmin=1,\n    vmax=max_h,\n    levels=100,\n    alpha=0.75\n)\nimshow(view_sel, ax=ax, cmap='Wistia')\n\n\nax.scatter(\n    *single_point.iloc[0].geometry.xy,\n    s=1000,\n    marker=\"*\",\n    facecolor='red',\n    edgecolor='black'\n)\nplt.text(\n    x=coordinates[0][0],\n    y=coordinates[1][0],\n    s=row.fid,\n    fontdict=dict(color='black', size=10),\n    bbox=dict(facecolor='white', alpha=0.75)\n)\n\nplt.show()\n\n\n\n\n\nLe aree in tonalità di giallo sono quelle che vede l’osservatore, in questo caso vede benissimo Positano, gli isolotti del Gallo e di Vetara ma anche parte del Golfo di Napoli, forse anche il Vesuvio."
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#newsletter",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#newsletter",
    "title": "Analisi di visibilità",
    "section": "Newsletter",
    "text": "Newsletter\nSe vuoi ricevere aggiornamenti sui prossimi articoli iscriviti alla newsletter!"
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#telegram",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#telegram",
    "title": "Analisi di visibilità",
    "section": "Telegram",
    "text": "Telegram\nSegui il canale Telegram CaffèGIS - I GIS a supporto dei processi evolutivi territoriali per ricevere aggiornamenti su iniziative ed informazioni a tema GIS."
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#offrimi-una-birra",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#offrimi-una-birra",
    "title": "Analisi di visibilità",
    "section": "Offrimi una birra!",
    "text": "Offrimi una birra!\nSe trovi interessanti i miei articoli offrimi una birra!\nAlla prossima!"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "",
    "text": "Un po’ di tempo fa ho effettuato un’analisi finalizzata a stimare il potenziale fotovoltaico di un tetto usando QGIS. Con questo articolo voglio ripercorrere lo stesso flusso di lavoro usando però Python!"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#visualizzazione-dei-dati-grezzi",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#visualizzazione-dei-dati-grezzi",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "1.1 Visualizzazione dei dati grezzi",
    "text": "1.1 Visualizzazione dei dati grezzi\n\n\nCode\nfig, ax = plt.subplots(figsize=(10, 10))\nraster.plot.imshow(\n    cmap='Blues',\n)\nplt.title(\"DSM\")\nplt.ylabel(\"Y coordinates (meters)\")\nplt.xlabel(\"X coordinates (meters)\")\n\n\nText(0.5, 0, 'X coordinates (meters)')\n\n\n\n\n\n\n\nCode\naoi = vector.plot(alpha=0.75, color=\"blue\", figsize=(10, 10))\ncx.add_basemap(aoi, crs=vector.crs.to_string(), source=cx.providers.OpenStreetMap.Mapnik)\naoi.set_title(\"Area of Interest\")\n\n\nText(0.5, 1.0, 'Area of Interest')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-piani",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-piani",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "2.1 Tetti piani",
    "text": "2.1 Tetti piani\n\n\nCode\nplane_rooftop = rooftop_slope.where(rooftop_slope <= 3)\n\nfig, ax = plt.subplots(figsize=(10, 10))\ncolormap = plt.cm.get_cmap('RdYlGn')\n\nplane_rooftop.plot.imshow(\n    cmap=colormap.reversed(),\n)\nplt.title(\"Plane rooftops\")\nplt.ylabel(\"Y coordinates (meters)\")\nplt.xlabel(\"X coordinates (meters)\")\n\n\nText(0.5, 0, 'X coordinates (meters)')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-con-inclinazione-ottimale",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-con-inclinazione-ottimale",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "2.2 Tetti con inclinazione ottimale",
    "text": "2.2 Tetti con inclinazione ottimale\n\n\nCode\noptimum_rooftop_inclination = rooftop_slope.where((rooftop_slope > 3) & (rooftop_slope <= 40))\n\nfig, ax = plt.subplots(figsize=(10, 10))\ncolormap = plt.cm.get_cmap('RdYlGn')\n\noptimum_rooftop_inclination.plot.imshow(\n    cmap=colormap.reversed(),\n)\nplt.title(\"Rooftops with slope between 3° and 40°\")\nplt.ylabel(\"Y coordinates (meters)\")\nplt.xlabel(\"X coordinates (meters)\")\n\n\nText(0.5, 0, 'X coordinates (meters)')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-esposti-a-sud",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-esposti-a-sud",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "3.1 Tetti esposti a SUD",
    "text": "3.1 Tetti esposti a SUD\n\n\nCode\nsud_rooftop_aspect = rooftop_aspect.where((rooftop_aspect >= 135) & (rooftop_aspect <= 225))\n\nfig, ax = plt.subplots(figsize=(10, 10))\n\nsud_rooftop_aspect.plot.imshow(\n    cmap='Set2',\n)\nplt.title(\"Rooftops facing to SUD\")\nplt.ylabel(\"Y coordinates (meters)\")\nplt.xlabel(\"X coordinates (meters)\")\n\n\nText(0.5, 0, 'X coordinates (meters)')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-esposti-ad-est",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-esposti-ad-est",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "3.2 Tetti esposti ad EST",
    "text": "3.2 Tetti esposti ad EST\n\n\nCode\nest_rooftop_aspect = rooftop_aspect.where((rooftop_aspect >= 90) & (rooftop_aspect < 135))\n\nfig, ax = plt.subplots(figsize=(10, 10))\n\nest_rooftop_aspect.plot.imshow(\n    cmap='Set2',\n)\nplt.title(\"Rooftops facing to EST\")\nplt.ylabel(\"Y coordinates (meters)\")\nplt.xlabel(\"X coordinates (meters)\")\n\n\nText(0.5, 0, 'X coordinates (meters)')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-esposti-ad-ovest",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#tetti-esposti-ad-ovest",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "3.2 Tetti esposti ad OVEST",
    "text": "3.2 Tetti esposti ad OVEST\n\n\nCode\novest_rooftop_aspect = rooftop_aspect.where((rooftop_aspect > 225) & (rooftop_aspect <= 270))\n\nfig, ax = plt.subplots(figsize=(10, 10))\n\novest_rooftop_aspect.plot.imshow(\n    cmap='Set2',\n)\nplt.title(\"Rooftops facing to OVEST\")\nplt.ylabel(\"Y coordinates (meters)\")\nplt.xlabel(\"X coordinates (meters)\")\n\n\nText(0.5, 0, 'X coordinates (meters)')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#put-them-all-togheter",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#put-them-all-togheter",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "4.1 Put them all togheter",
    "text": "4.1 Put them all togheter\n\n\nCode\ntarget_slope_rooftop = rooftop_slope.where(rooftop_slope <= 40)\n\nfig, axs = plt.subplots(1, 2, figsize=(20, 10))\ncolormap = plt.cm.get_cmap('RdYlGn')\n\ntarget_slope_rooftop.plot.imshow(\n    cmap=colormap.reversed(),\n    ax=axs[0],\n)\naxs[0].set_title(\"Target rooftops based on slope\")\n\nrooftop_slope.plot.imshow(\n    cmap=colormap.reversed(),\n    ax=axs[1]\n)\naxs[1].set_title(\"Rooftop's slope\")\n\n\nText(0.5, 1.0, \"Rooftop's slope\")\n\n\n\n\n\n\n\nCode\ntarget_aspect_rooftop = rooftop_aspect.where((rooftop_aspect >= 90) & (rooftop_aspect <= 270))\n\nfig, axs = plt.subplots(1, 2, figsize=(20, 10))\n\ntarget_aspect_rooftop.plot.imshow(\n    cmap='Set2',\n    ax=axs[0]\n)\naxs[0].set_title(\"Target rooftops based on aspect\")\n\nrooftop_aspect.plot.imshow(\n    cmap='Set2',\n    ax=axs[1]\n)\naxs[1].set_title(\"Rooftop's aspect\")\n\n\nText(0.5, 1.0, \"Rooftop's aspect\")"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#individuazione-dei-tetti-con-pendenza-ed-esposizione-ottimali",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#individuazione-dei-tetti-con-pendenza-ed-esposizione-ottimali",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "4.2 Individuazione dei tetti con pendenza ed esposizione ottimali",
    "text": "4.2 Individuazione dei tetti con pendenza ed esposizione ottimali\n\n\nCode\ntarget_slope_rooftop_mask = ((target_slope_rooftop / target_slope_rooftop) >= 1).astype('uint8')\ntarget_aspect_rooftop_mask = ((target_aspect_rooftop / target_aspect_rooftop) >= 1).astype('uint8')\n\nfig, axs = plt.subplots(1, 2, figsize=(20, 10))\n\ntarget_slope_rooftop_mask.plot.imshow(\n    cmap=\"gray\",\n    ax=axs[0],\n\n)\naxs[0].set_title(\"Target rooftops based on slope\")\n\ntarget_aspect_rooftop_mask.plot.imshow(\n    cmap=\"gray\",\n    ax=axs[1]\n)\naxs[1].set_title(\"Target rooftops based on aspect\")\n\n\nText(0.5, 1.0, 'Target rooftops based on aspect')\n\n\n\n\n\n\n\nCode\ntarget_rooftop = target_slope_rooftop_mask * target_aspect_rooftop_mask\n\nfig, ax = plt.subplots(figsize=(10, 10))\n\ntarget_rooftop.plot.imshow(\n    cmap='gray',\n)\nplt.title(\"Target rooftops\")\n\n\nText(0.5, 1.0, 'Target rooftops')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#stima-del-potenziale-produttivo",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#stima-del-potenziale-produttivo",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "4.3 Stima del potenziale produttivo",
    "text": "4.3 Stima del potenziale produttivo\nOra che è chiaro quali sono i tetti potenzialmente utilizzabili è possibile calcolarne la produzione.\nIl primo passo da seguire è convertire il DataArray creato in precedenza in un DataFrame.\n\n\nCode\ntarget_rooftop_df = target_rooftop.to_dataframe(name=\"value\").reset_index()\ntarget_rooftop_df = target_rooftop_df[target_rooftop_df['value'] == 1]\ntarget_rooftop_df = target_rooftop_df[['x', 'y', 'value']]\ntarget_rooftop_df\n\n\n\n\n\n\n  \n    \n      \n      x\n      y\n      value\n    \n  \n  \n    \n      1951\n      444946.808\n      4529404.911\n      1\n    \n    \n      1952\n      444947.808\n      4529404.911\n      1\n    \n    \n      1953\n      444948.808\n      4529404.911\n      1\n    \n    \n      1954\n      444949.808\n      4529404.911\n      1\n    \n    \n      2455\n      444950.808\n      4529403.911\n      1\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      248266\n      444761.808\n      4528911.911\n      1\n    \n    \n      248267\n      444762.808\n      4528911.911\n      1\n    \n    \n      248268\n      444763.808\n      4528911.911\n      1\n    \n    \n      248269\n      444764.808\n      4528911.911\n      1\n    \n    \n      248767\n      444762.808\n      4528910.911\n      1\n    \n  \n\n25141 rows × 3 columns\n\n\n\nIn questo modo si è ottenuto un oggetto che contiene i centroidi dei pixel del raster precedente, con i soli valori di interesse. Il passo successivo è convertire in GeoDataFrame il dataset ottenuto in precedenza.\n\n\nCode\ngdf_point = gpd.GeoDataFrame(\n    target_rooftop_df.value,\n    geometry=gpd.points_from_xy(target_rooftop_df.x,target_rooftop_df.y),\n    crs=raster.rio.crs.to_string()\n)\ngdf_point\n\n\n\n\n\n\n  \n    \n      \n      value\n      geometry\n    \n  \n  \n    \n      1951\n      1\n      POINT (444946.808 4529404.911)\n    \n    \n      1952\n      1\n      POINT (444947.808 4529404.911)\n    \n    \n      1953\n      1\n      POINT (444948.808 4529404.911)\n    \n    \n      1954\n      1\n      POINT (444949.808 4529404.911)\n    \n    \n      2455\n      1\n      POINT (444950.808 4529403.911)\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      248266\n      1\n      POINT (444761.808 4528911.911)\n    \n    \n      248267\n      1\n      POINT (444762.808 4528911.911)\n    \n    \n      248268\n      1\n      POINT (444763.808 4528911.911)\n    \n    \n      248269\n      1\n      POINT (444764.808 4528911.911)\n    \n    \n      248767\n      1\n      POINT (444762.808 4528910.911)\n    \n  \n\n25141 rows × 2 columns\n\n\n\nSi è ottenuto un GeoDataFrame di punti, ma a me interessano i poligoni, quindi creo un buffer intorno ai punti in modo da riprodurre i pixel del raster con cui ho iniziato l’analisi. Quindi devo andare ad individuare la risoluzione del mio raster di partenza:\n\n\nCode\nx, y = raster.rio.resolution()\nprint(f\"Il raster di partenza ha una risoluzione di {x} x {y*-1} metri\")\n\n\nIl raster di partenza ha una risoluzione di 1.0 x 1.0 metri\n\n\nOra posso creare i miei poligoni.\n\n\nCode\ngdf_polygon = gdf_point.buffer(distance=0.5, cap_style=3)\npolygons = gdf_polygon.unary_union\n\ngdf = gpd.GeoDataFrame(geometry=gpd.GeoSeries(polygons), crs=gdf_polygon.crs).explode(index_parts=True)\ngdf.insert(loc=1, column=\"superficie_mq\", value=gdf.geometry.area)\ngdf\n\n\n\n\n\n\n  \n    \n      \n      \n      geometry\n      superficie_mq\n    \n  \n  \n    \n      0\n      0\n      POLYGON ((444503.308 4528932.411, 444503.308 4...\n      1.0\n    \n    \n      1\n      POLYGON ((444505.308 4528934.411, 444506.308 4...\n      1.0\n    \n    \n      2\n      POLYGON ((444501.308 4528936.411, 444501.308 4...\n      2.0\n    \n    \n      3\n      POLYGON ((444504.308 4528937.411, 444504.308 4...\n      5.0\n    \n    \n      4\n      POLYGON ((444500.308 4528947.411, 444500.308 4...\n      8.0\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      2284\n      POLYGON ((444989.308 4529288.411, 444989.308 4...\n      1.0\n    \n    \n      2285\n      POLYGON ((444980.308 4529322.411, 444980.308 4...\n      1.0\n    \n    \n      2286\n      POLYGON ((444980.308 4529325.411, 444981.308 4...\n      1.0\n    \n    \n      2287\n      POLYGON ((444992.308 4529354.411, 444992.308 4...\n      1.0\n    \n    \n      2288\n      POLYGON ((444985.308 4529360.411, 444984.308 4...\n      18.0\n    \n  \n\n2289 rows × 2 columns\n\n\n\nHo ottenuto un GeoDataFrame con i dati di mio interesse. Quando scrissi l’articolo del blog, oramai 6 annifa, 1 kwp occupava 7 metri quadri; non conosco i risvolti del mercato attuale ma ricordo che con la minuaturizzazione si andava verso la riduzione della superficie utile per produrre 1 kwp. Anche per questo articolo mi atterrò al dato del 2018 ma, prima di calcolare la produzione potenziale di energia dell’are in esame, andrò a filtrare tutto ciò che è inferiore a 7 metri quadri.\n\n\nCode\nfinal_analysis = gdf[gdf.superficie_mq >= 7].reset_index()\nfinal_analysis = final_analysis[['geometry', 'superficie_mq']]\nfinal_analysis.insert(loc=2, column=\"potential_production_kw\", value=final_analysis.superficie_mq*7)\nfinal_analysis\n\n\n\n\n\n\n  \n    \n      \n      geometry\n      superficie_mq\n      potential_production_kw\n    \n  \n  \n    \n      0\n      POLYGON ((444500.308 4528947.411, 444500.308 4...\n      8.0\n      56.0\n    \n    \n      1\n      POLYGON ((444506.308 4528961.411, 444507.308 4...\n      8.0\n      56.0\n    \n    \n      2\n      POLYGON ((444518.308 4528970.411, 444519.308 4...\n      35.0\n      245.0\n    \n    \n      3\n      POLYGON ((444518.308 4528967.411, 444519.308 4...\n      9.0\n      63.0\n    \n    \n      4\n      POLYGON ((444524.308 4529036.411, 444525.308 4...\n      24.0\n      168.0\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      641\n      POLYGON ((444988.308 4529225.411, 444989.308 4...\n      12.0\n      84.0\n    \n    \n      642\n      POLYGON ((444985.308 4529260.411, 444986.308 4...\n      16.0\n      112.0\n    \n    \n      643\n      POLYGON ((444985.308 4529279.411, 444986.308 4...\n      9.0\n      63.0\n    \n    \n      644\n      POLYGON ((444987.308 4529283.411, 444987.308 4...\n      22.0\n      154.0\n    \n    \n      645\n      POLYGON ((444985.308 4529360.411, 444984.308 4...\n      18.0\n      126.0\n    \n  \n\n646 rows × 3 columns\n\n\n\n\n\nCode\nfig, ax = plt.subplots(figsize=(10, 10))\n\nfinal_view = final_analysis.plot(column=\"potential_production_kw\", cmap=\"gnuplot\", ax=ax, legend=True)\ncx.add_basemap(final_view, crs=final_analysis.crs.to_string(), source=cx.providers.OpenStreetMap.Mapnik)\nfinal_view.set_title(\"Energy production map KWP\")\n\n\nText(0.5, 1.0, 'Energy production map KWP')"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#newsletter",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#newsletter",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "Newsletter",
    "text": "Newsletter\nSe vuoi ricevere aggiornamenti sui prossimi articoli iscriviti alla newsletter!"
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#telegram",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#telegram",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "Telegram",
    "text": "Telegram\nSegui il canale Telegram CaffèGIS - I GIS a supporto dei processi evolutivi territoriali per ricevere aggiornamenti su iniziative ed informazioni a tema GIS."
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#offrimi-una-birra",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#offrimi-una-birra",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "Offrimi una birra!",
    "text": "Offrimi una birra!\nSe trovi interessanti i miei articoli offrimi una birra!\nAlla prossima!"
  },
  {
    "objectID": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html",
    "href": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html",
    "title": "Da Point a PointZ",
    "section": "",
    "text": "Un po’ di tempo fa ho affrontato in un mio articolo il problema dell’aggiunta della coordinata altimetrica ad un dataset di punti usando QGIS. In questo JupyterNotebook affronterò il problema usando Python."
  },
  {
    "objectID": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#newsletter",
    "href": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#newsletter",
    "title": "Da Point a PointZ",
    "section": "Newsletter",
    "text": "Newsletter\nSe vuoi ricevere aggiornamenti sui prossimi articoli iscriviti alla newsletter!"
  },
  {
    "objectID": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#telegram",
    "href": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#telegram",
    "title": "Da Point a PointZ",
    "section": "Telegram",
    "text": "Telegram\nSegui il canale Telegram CaffèGIS - I GIS a supporto dei processi evolutivi territoriali per ricevere aggiornamenti su iniziative ed informazioni a tema GIS."
  },
  {
    "objectID": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#offrimi-una-birra",
    "href": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#offrimi-una-birra",
    "title": "Da Point a PointZ",
    "section": "Offrimi una birra!",
    "text": "Offrimi una birra!\nSe trovi interessanti i miei articoli offrimi una birra!\nAlla prossima!"
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "",
    "text": "Qualche anno fa analizzai i dati del progetto CORINE Land Cover relativi alla Campania, focalizzandomi sui tre censimenti tra il 2000 ed il 2012. Oggi invece estenderò quell’analisi inserendo sia i dati del 1990 che gli ultimi disponibili attualmente, cioè quelli del 2018.\nL’analisi questa volta la farò usando Python e la estenderò al resto dell’Italia verso la fine."
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#grafici",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#grafici",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "2.2 Grafici",
    "text": "2.2 Grafici\nE’ il momento di approfondire questi dati! Ho estratto grafici per tutte e tre le classi ed ho cercato di dare una interpretazione del perchè di alcuni fenomeni.\n\n2.2.1 Grafici per il livello 1\n\n\nCode\nlvl1 = [campania_clc1990_label1, campania_clc2000_label1, campania_clc2006_label1, campania_clc2012_label1, campania_clc2018_label1]\nlvl1_df = reduce(lambda  left,right: pd.merge(left,right,on=['CORINE Land Cover - level 1'], how='outer'), lvl1)\nlvl1_df.fillna(0, inplace=True)\nlvl1_df.insert(loc=6, column='Surf.Diff. | 2018-1990', value=(lvl1_df.surface_ha_2018 - lvl1_df.surface_ha_1990))\nlvl1_df.set_index('CORINE Land Cover - level 1', inplace=True)\nlvl1_df.rename(columns={'surface_ha_1990': '1990', 'surface_ha_2000': '2000', 'surface_ha_2006': '2006', 'surface_ha_2012': '2012', 'surface_ha_2018': '2018'}, inplace=True)\nlvl1_df.sort_index(ascending=True, inplace=True)\nlvl1_df\n\n\n\n\n\n\n  \n    \n      \n      1990\n      2000\n      2006\n      2012\n      2018\n      Surf.Diff. | 2018-1990\n    \n    \n      CORINE Land Cover - level 1\n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Agricultural areas\n      761041.0303\n      753145.2349\n      755438.9748\n      752611.5454\n      752077.3861\n      -8963.6442\n    \n    \n      Artificial surfaces\n      80649.9550\n      89935.2388\n      97747.4059\n      101771.7643\n      102304.6984\n      21654.7434\n    \n    \n      Forest and semi natural areas\n      522870.7142\n      521005.1536\n      510731.5181\n      509096.9289\n      508050.0206\n      -14820.6936\n    \n    \n      Water bodies\n      1593.6569\n      2195.8983\n      2463.1760\n      2948.2571\n      2948.2571\n      1354.6002\n    \n    \n      Wetlands\n      608.8997\n      482.9084\n      386.6832\n      339.2620\n      339.2620\n      -269.6377\n    \n  \n\n\n\n\n\n\nCode\nfig1 = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig = GridSpec(nrows=1, ncols=1, figure=fig1, hspace=0.35)\nax = fig1.add_subplot(sub_fig[0, 0])\nlvl1_df.plot.bar(ax=ax, rot=0)\n\nax.yaxis.set_label_text('ha')\nax.set_xlabel('')\nax.grid(color='lightgrey', linestyle='dashdot')\n\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2cfea3760>\n\n\n\n\n\nE’ visibile abbastanza chiaramente un netto aumento delle superfici artificiali con un conseguente arretramento di quelle forestate e di quelle agricole. Le aree forestate tra il 1990 ed il 2018 hanno subito un arretramento quasi doppio rispetto a quelle agricole e le superfici artificiali sono quelle che hanno maggiormente “beneficiato” di questo arretramento complessivo delle due classi di CLC. Si potrebbe dire che l’urbanizzato ha eroso foreste ed aree agricole in quasi 30 anni.\n\n\n2.2.2 Grafici per il livello 2\n\n\nCode\nlvl2 = [campania_clc1990_label2, campania_clc2000_label2, campania_clc2006_label2, campania_clc2012_label2, campania_clc2018_label2]\nlvl2_df = reduce(lambda  left,right: pd.merge(left,right,on=['CORINE Land Cover - level 2'], how='outer'), lvl2)\nlvl2_df.fillna(0, inplace=True)\nlvl2_df.insert(loc=6, column='Surf.Diff. | 2000-1990', value=(lvl2_df.surface_ha_2000 - lvl2_df.surface_ha_1990))\nlvl2_df.insert(loc=7, column='Surf.Diff. | 2006-2000', value=(lvl2_df.surface_ha_2006 - lvl2_df.surface_ha_2000))\nlvl2_df.insert(loc=8, column='Surf.Diff. | 2012-2006', value=(lvl2_df.surface_ha_2012 - lvl2_df.surface_ha_2006))\nlvl2_df.insert(loc=9, column='Surf.Diff. | 2018-2012', value=(lvl2_df.surface_ha_2018 - lvl2_df.surface_ha_2012))\nlvl2_df.insert(loc=9, column='Surf.Diff. | 2018-1990', value=(lvl2_df.surface_ha_2018 - lvl2_df.surface_ha_1990))\nlvl2_df.set_index('CORINE Land Cover - level 2', inplace=True)\nlvl2_df = lvl2_df[['Surf.Diff. | 2000-1990', 'Surf.Diff. | 2006-2000', 'Surf.Diff. | 2012-2006', 'Surf.Diff. | 2018-2012', 'Surf.Diff. | 2018-1990']]\nlvl2_df.sort_index(ascending=True, inplace=True)\nlvl2_df\n\n\n\n\n\n\n  \n    \n      \n      Surf.Diff. | 2000-1990\n      Surf.Diff. | 2006-2000\n      Surf.Diff. | 2012-2006\n      Surf.Diff. | 2018-2012\n      Surf.Diff. | 2018-1990\n    \n    \n      CORINE Land Cover - level 2\n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Arable land\n      -6226.9986\n      -15007.4805\n      1362.7374\n      26.9417\n      -19844.8000\n    \n    \n      Artificial, non-agricultural vegetated areas\n      330.5367\n      -4.4113\n      58.5588\n      396.9458\n      781.6300\n    \n    \n      Forests\n      2963.0601\n      -4293.0050\n      1859.3801\n      -1391.9151\n      -862.4799\n    \n    \n      Heterogeneous agricultural areas\n      -947.6309\n      4546.7408\n      9331.1283\n      -448.2578\n      12481.9804\n    \n    \n      Industrial, commercial and transport units\n      1550.4505\n      3173.2827\n      2094.7855\n      154.4961\n      6973.0148\n    \n    \n      Inland waters\n      602.2416\n      267.2776\n      398.3284\n      0.0000\n      1267.8476\n    \n    \n      Inland wetlands\n      -125.9913\n      -96.2252\n      -73.2778\n      0.0000\n      -295.4943\n    \n    \n      Marine waters\n      -0.0002\n      0.0001\n      86.7527\n      0.0000\n      86.7526\n    \n    \n      Maritime wetlands\n      0.0000\n      0.0000\n      25.8566\n      0.0000\n      25.8566\n    \n    \n      Mine, dump and construction sites\n      -31.1788\n      474.9460\n      112.8079\n      -23.5198\n      533.0553\n    \n    \n      Open spaces with little or no vegetation\n      1019.9233\n      -287.3449\n      20220.0532\n      3005.5295\n      23958.1611\n    \n    \n      Pastures\n      -1351.7336\n      -788.2046\n      -997.1098\n      -110.4579\n      -3247.5059\n    \n    \n      Permanent crops\n      630.5677\n      13542.6842\n      -12524.1853\n      -2.3853\n      1646.6813\n    \n    \n      Scrub and/or herbaceous vegetation associations\n      -5848.5440\n      -5693.2856\n      -23714.0225\n      -2660.5227\n      -37916.3748\n    \n    \n      Urban fabric\n      7435.4754\n      4168.3497\n      1758.2062\n      5.0120\n      13367.0433\n    \n  \n\n\n\n\n\n\nCode\nfig2 = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig = GridSpec(nrows=1, ncols=1, figure=fig2, hspace=0.35)\nax = fig2.add_subplot(sub_fig[0, 0])\nlvl2_df.plot.bar(ax=ax, rot=0)\n\nax.yaxis.set_label_text('ha')\nax.set_xlabel('')\nax.grid(color='lightgrey', linestyle='dashdot')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2eb2bc4f0>\n\n\n\n\n\nScendendo di un livello, quindi andando ad approfondire di più il dato passando al secondo livello CLC, possiamo verificare i trend negativi a quali specifiche superfici fanno riferimento.\nLe aree arbustive e con alberi radi hanno avuto la peggio, a seguire i terreni arabili, pascoli e foreste. Netto è invece l’aumento delle aree aperte, classe in cui nel terzo livello CLC ci sono le aree percorse dal fuoco(da tenere in mente per richiami successivi!). Seguono, nell’incremento, le aree urbanizzate, le aree per colture eterogenee e quelle per lo sviluppo di siti industriali e commerciali.\n\n\n2.2.3 Grafici per il livello 3\n\n\nCode\nlvl3 = [campania_clc1990_label3, campania_clc2000_label3, campania_clc2006_label3, campania_clc2012_label3, campania_clc2018_label3]\nlvl3_df = reduce(lambda  left,right: pd.merge(left,right,on=['CORINE Land Cover - level 3'], how='outer'), lvl3)\nlvl3_df.fillna(0, inplace=True)\nlvl3_df.insert(loc=6, column='Surf.Diff. | 2000-1990', value=(lvl3_df.surface_ha_2000 - lvl3_df.surface_ha_1990))\nlvl3_df.insert(loc=7, column='Surf.Diff. | 2006-2000', value=(lvl3_df.surface_ha_2006 - lvl3_df.surface_ha_2000))\nlvl3_df.insert(loc=8, column='Surf.Diff. | 2012-2006', value=(lvl3_df.surface_ha_2012 - lvl3_df.surface_ha_2006))\nlvl3_df.insert(loc=9, column='Surf.Diff. | 2018-2012', value=(lvl3_df.surface_ha_2018 - lvl3_df.surface_ha_2012))\nlvl3_df.insert(loc=10, column='Surf.Diff. | 2018-1990', value=(lvl3_df.surface_ha_2018 - lvl3_df.surface_ha_1990))\nlvl3_df.set_index('CORINE Land Cover - level 3', inplace=True)\n\nlvl3_df.sort_index(ascending=True, inplace=True)\nlvl3_df\n\n\n\n\n\n\n  \n    \n      \n      surface_ha_1990\n      surface_ha_2000\n      surface_ha_2006\n      surface_ha_2012\n      surface_ha_2018\n      Surf.Diff. | 2000-1990\n      Surf.Diff. | 2006-2000\n      Surf.Diff. | 2012-2006\n      Surf.Diff. | 2018-2012\n      Surf.Diff. | 2018-1990\n    \n    \n      CORINE Land Cover - level 3\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Agro-forestry areas\n      420.5049\n      420.5224\n      140.9079\n      79.0823\n      79.0823\n      0.0175\n      -279.6145\n      -61.8256\n      0.000000e+00\n      -341.4226\n    \n    \n      Airports\n      383.8998\n      556.4307\n      556.4308\n      556.4308\n      556.4308\n      172.5309\n      0.0001\n      0.0000\n      0.000000e+00\n      172.5310\n    \n    \n      Annual crops associated with permanent crops\n      42881.8119\n      44016.3987\n      23501.2894\n      24459.1737\n      24062.2280\n      1134.5868\n      -20515.1093\n      957.8843\n      -3.969457e+02\n      -18819.5839\n    \n    \n      Bare rocks\n      1122.7257\n      1006.1738\n      979.8852\n      1274.5252\n      1274.5252\n      -116.5519\n      -26.2886\n      294.6400\n      0.000000e+00\n      151.7995\n    \n    \n      Beaches, dunes, sands\n      2282.0112\n      1852.6891\n      1835.3037\n      1904.4059\n      1904.4059\n      -429.3221\n      -17.3854\n      69.1022\n      0.000000e+00\n      -377.6053\n    \n    \n      Broad-leaved forest\n      367521.2801\n      369187.8047\n      365453.4552\n      367034.3194\n      366436.4566\n      1666.5246\n      -3734.3495\n      1580.8642\n      -5.978628e+02\n      -1084.8235\n    \n    \n      Burnt areas\n      0.0000\n      354.7607\n      438.4148\n      770.8451\n      3802.9844\n      354.7607\n      83.6541\n      332.4303\n      3.032139e+03\n      3802.9844\n    \n    \n      Coastal lagoons\n      25.8567\n      25.8565\n      25.8566\n      112.6093\n      112.6093\n      -0.0002\n      0.0001\n      86.7527\n      0.000000e+00\n      86.7526\n    \n    \n      Complex cultivation patterns\n      165047.1097\n      162777.2069\n      181971.5611\n      185634.2569\n      185582.9448\n      -2269.9028\n      19194.3542\n      3662.6958\n      -5.131210e+01\n      20535.8351\n    \n    \n      Coniferous forest\n      7457.8770\n      8154.5708\n      7620.7143\n      8876.9029\n      8373.6888\n      696.6938\n      -533.8565\n      1256.1886\n      -5.032141e+02\n      915.8118\n    \n    \n      Construction sites\n      25.4060\n      70.0172\n      246.1018\n      58.2792\n      58.2792\n      44.6112\n      176.0846\n      -187.8226\n      0.000000e+00\n      32.8732\n    \n    \n      Continuous urban fabric\n      32608.0637\n      33436.5752\n      29309.2673\n      33833.4142\n      33833.4142\n      828.5115\n      -4127.3079\n      4524.1469\n      0.000000e+00\n      1225.3505\n    \n    \n      Discontinuous urban fabric\n      37281.0655\n      43888.0294\n      52183.6870\n      49417.7463\n      49422.7583\n      6606.9639\n      8295.6576\n      -2765.9407\n      5.012000e+00\n      12141.6928\n    \n    \n      Dump sites\n      207.8811\n      27.2633\n      174.0802\n      438.6634\n      406.9530\n      -180.6178\n      146.8169\n      264.5832\n      -3.171040e+01\n      199.0719\n    \n    \n      Fruit trees and berry plantations\n      56044.2433\n      54999.5524\n      61954.0631\n      56585.3863\n      56585.3142\n      -1044.6909\n      6954.5107\n      -5368.6768\n      -7.210000e-02\n      541.0709\n    \n    \n      Green urban areas\n      731.9919\n      758.4238\n      805.2857\n      780.1128\n      1177.0586\n      26.4319\n      46.8619\n      -25.1729\n      3.969458e+02\n      445.0667\n    \n    \n      Industrial or commercial units\n      6590.0765\n      8168.7442\n      11005.1236\n      12643.3548\n      12797.8509\n      1578.6677\n      2836.3794\n      1638.2312\n      1.544961e+02\n      6207.7744\n    \n    \n      Inland marshes\n      608.8997\n      482.9084\n      386.6832\n      313.4054\n      313.4054\n      -125.9913\n      -96.2252\n      -73.2778\n      0.000000e+00\n      -295.4943\n    \n    \n      Land principally occupied by agriculture, with significant areas of natural vegetation\n      89154.5654\n      89342.2330\n      95489.3434\n      100261.7172\n      100261.7172\n      187.6676\n      6147.1104\n      4772.3738\n      0.000000e+00\n      11107.1518\n    \n    \n      Mineral extraction sites\n      1398.3376\n      1503.1654\n      1655.2099\n      1691.2572\n      1699.4478\n      104.8278\n      152.0445\n      36.0473\n      8.190600e+00\n      301.1102\n    \n    \n      Mixed forest\n      8847.1411\n      9446.9828\n      9422.1838\n      8444.5111\n      8153.6729\n      599.8417\n      -24.7990\n      -977.6727\n      -2.908382e+02\n      -693.4682\n    \n    \n      Moors and heathland\n      16.7825\n      0.0000\n      0.0000\n      0.0000\n      0.0000\n      -16.7825\n      0.0000\n      0.0000\n      0.000000e+00\n      -16.7825\n    \n    \n      Natural grasslands\n      57150.7848\n      53354.5398\n      48427.4297\n      30587.1997\n      29539.0655\n      -3796.2450\n      -4927.1101\n      -17840.2300\n      -1.048134e+03\n      -27611.7193\n    \n    \n      Non-irrigated arable land\n      304750.4005\n      298328.2037\n      283148.7731\n      284508.0453\n      284503.2765\n      -6422.1968\n      -15179.4306\n      1359.2722\n      -4.768800e+00\n      -20247.1240\n    \n    \n      Olive groves\n      58951.7577\n      60805.0013\n      66147.7874\n      61604.3214\n      61632.6846\n      1853.2436\n      5342.7861\n      -4543.4660\n      2.836320e+01\n      2680.9269\n    \n    \n      Pastures\n      15620.1214\n      14268.3878\n      13480.1832\n      12483.0734\n      12372.6155\n      -1351.7336\n      -788.2046\n      -997.1098\n      -1.104579e+02\n      -3247.5059\n    \n    \n      Permanently irrigated land\n      25316.0313\n      25511.2295\n      25683.1796\n      25686.6448\n      25718.3553\n      195.1982\n      171.9501\n      3.4652\n      3.171050e+01\n      402.3240\n    \n    \n      Port areas\n      458.6026\n      469.9879\n      481.6963\n      459.2550\n      459.2550\n      11.3853\n      11.7084\n      -22.4413\n      0.000000e+00\n      0.6524\n    \n    \n      Road and rail networks and associated land\n      650.5552\n      438.4218\n      763.6166\n      1242.6122\n      1242.6122\n      -212.1334\n      325.1948\n      478.9956\n      0.000000e+00\n      592.0570\n    \n    \n      Salt marshes\n      0.0000\n      0.0000\n      0.0000\n      25.8566\n      25.8566\n      0.0000\n      0.0000\n      25.8566\n      0.000000e+00\n      25.8566\n    \n    \n      Sclerophyllous vegetation\n      19255.7695\n      18537.4944\n      17072.9128\n      15623.7660\n      15530.6877\n      -718.2751\n      -1464.5816\n      -1449.1468\n      -9.307830e+01\n      -3725.0818\n    \n    \n      Sparsely vegetated areas\n      5561.6437\n      6772.6803\n      6445.3553\n      25969.2360\n      25942.6262\n      1211.0366\n      -327.3250\n      19523.8807\n      -2.660980e+01\n      20380.9825\n    \n    \n      Sport and leisure facilities\n      314.0751\n      618.1799\n      566.9067\n      650.6384\n      650.6384\n      304.1048\n      -51.2732\n      83.7317\n      0.000000e+00\n      336.5633\n    \n    \n      Transitional woodland-shrub\n      53654.6986\n      52337.4572\n      53035.8633\n      48611.2176\n      47091.9074\n      -1317.2414\n      698.4061\n      -4424.6457\n      -1.519310e+03\n      -6562.7912\n    \n    \n      Vineyards\n      2854.4842\n      2676.4992\n      3921.8866\n      1309.8441\n      1279.1677\n      -177.9850\n      1245.3874\n      -2612.0425\n      -3.067640e+01\n      -1575.3165\n    \n    \n      Water bodies\n      1095.5920\n      1373.7744\n      1687.8687\n      1981.1362\n      1981.1362\n      278.1824\n      314.0943\n      293.2675\n      2.273737e-13\n      885.5442\n    \n    \n      Water courses\n      472.2082\n      796.2674\n      749.4507\n      854.5116\n      854.5116\n      324.0592\n      -46.8167\n      105.0609\n      0.000000e+00\n      382.3034\n    \n  \n\n\n\n\n\n\nCode\nfig3 = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig = GridSpec(nrows=1, ncols=1, figure=fig3, hspace=0.35)\nax = fig3.add_subplot(sub_fig[0, 0])\nlvl3_df['Surf.Diff. | 2018-1990'].plot.bar(ax=ax, rot=0)\n\nax.yaxis.set_label_text('ha')\nax.set_xlabel('')\nax.grid(color='lightgrey', linestyle='dashdot')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2df35bd90>\n\n\n\n\n\nPassando al livello tre della CLC, ho voluto graficare la sola differenza tra 1990 e 2018 per motivi di leggibilità del grafico. In termini di aumento di copertura del suolo c’è l’avanzamento, quasi identico, delle piccole aree destinate a colture annuali e delle aree con vegetazione frammentata. A seguire ci sono le aree urbane discontinue e quelle occupate da orti, vigneti e alberi da frutto.\nUna riflessione che mi sento di fare è che l’avanzamento del tessuto urbano discontinuo ha frazionato il territorio agricolo, generando aree a piccole colture agricole.\nSignificativo anche l’aumento di estensione delle aree percorse dal fuoco.\nI decrementi sono la cartina di tornasole degli incrementi che ho descritto poco fa e che potrebbero confermare la mia riflessione sul frazionamento del territorio naturale ed agricolo, portato avanti dall’avanzamento delle classi legati ai suoli artificiali."
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#focus-sui-comuni",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#focus-sui-comuni",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "2.3 Focus sui Comuni",
    "text": "2.3 Focus sui Comuni\nL’analisi che segue tenta di rispondere alla domanda: “quali sono i Comuni campani in cui i fenomeni esposti poco fa hanno avuto un maggior impatto?”\nMi concentrerò sul terzo livello della CLC, in particolare sulle aree artificiali, aree agricole e foreste ma anche sulle discariche, le aree percorse dal fuoco ed il verde urbano.\nVisto che dal 2000 in poi l’accuratezza geometrica del dato CLC è aumentata considerevolmente, le analisi di dettaglio che seguono si concentreranno sulla differenza tra 2000 e 2018.\n\n\nCode\n\n# Dati 1990\nfocus_1990 = clc1990_campania[['pro_com', 'comune', 'provincia', 'sup_com_ha', 'label3', 'surface_ha_1990']]\nfocus_1990.set_index('label3', inplace=True)\nfocus_1990_group = pd.DataFrame(focus_1990.groupby(['pro_com', 'comune', 'sup_com_ha', 'label3'])['surface_ha_1990'].sum())\nfocus_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nfocus_2000 = clc2000_campania[['pro_com', 'comune', 'provincia', 'sup_com_ha', 'label3', 'surface_ha_2000']]\nfocus_2000.set_index('label3', inplace=True)\nfocus_2000_group = pd.DataFrame(focus_2000.groupby(['pro_com', 'comune', 'sup_com_ha', 'label3'])['surface_ha_2000'].sum())\nfocus_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nfocus_2006 = clc2006_campania[['pro_com', 'comune', 'provincia', 'sup_com_ha', 'label3', 'surface_ha_2006']]\nfocus_2006.set_index('label3', inplace=True)\nfocus_2006_group = pd.DataFrame(focus_2006.groupby(['pro_com', 'comune', 'sup_com_ha', 'label3'])['surface_ha_2006'].sum())\nfocus_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nfocus_2012 = clc2012_campania[['pro_com', 'comune', 'provincia', 'sup_com_ha', 'label3', 'surface_ha_2012']]\nfocus_2012.set_index('label3', inplace=True)\nfocus_2012_group = pd.DataFrame(focus_2012.groupby(['pro_com', 'comune', 'sup_com_ha', 'label3'])['surface_ha_2012'].sum())\nfocus_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nfocus_2018 = clc2018_campania[['pro_com', 'comune', 'provincia', 'sup_com_ha', 'label3', 'surface_ha_2018']]\nfocus_2018.set_index('label3', inplace=True)\nfocus_2018_group = pd.DataFrame(focus_2018.groupby(['pro_com', 'comune', 'sup_com_ha', 'label3'])['surface_ha_2018'].sum())\nfocus_2018_group.reset_index(inplace=True)\n\n\n\n\nCode\nfocus_1990_group\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      label3\n      surface_ha_1990\n    \n  \n  \n    \n      0\n      61001.0\n      Ailano\n      1605.560469\n      Broad-leaved forest\n      472.5747\n    \n    \n      1\n      61001.0\n      Ailano\n      1605.560469\n      Complex cultivation patterns\n      93.2780\n    \n    \n      2\n      61001.0\n      Ailano\n      1605.560469\n      Continuous urban fabric\n      31.0972\n    \n    \n      3\n      61001.0\n      Ailano\n      1605.560469\n      Land principally occupied by agriculture, with...\n      188.9317\n    \n    \n      4\n      61001.0\n      Ailano\n      1605.560469\n      Non-irrigated arable land\n      752.7540\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      4543\n      65158.0\n      Bellizzi\n      802.200746\n      Continuous urban fabric\n      93.9079\n    \n    \n      4544\n      65158.0\n      Bellizzi\n      802.200746\n      Discontinuous urban fabric\n      40.9309\n    \n    \n      4545\n      65158.0\n      Bellizzi\n      802.200746\n      Fruit trees and berry plantations\n      24.3220\n    \n    \n      4546\n      65158.0\n      Bellizzi\n      802.200746\n      Non-irrigated arable land\n      426.7024\n    \n    \n      4547\n      65158.0\n      Bellizzi\n      802.200746\n      Vineyards\n      33.8787\n    \n  \n\n4548 rows × 5 columns\n\n\n\n\n2.3.1 Aree artificiali\nI gruppi 1.1 ed 1.2 della CLC\n\n\nCode\n\n# Dati 1990\nartificial_surface_1990 = focus_1990_group[focus_1990_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_1990_group = pd.DataFrame(artificial_surface_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\nartificial_surface_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nartificial_surface_2000 = focus_2000_group[focus_2000_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_2000_group = pd.DataFrame(artificial_surface_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\nartificial_surface_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nartificial_surface_2006 = focus_2006_group[focus_2006_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_2006_group = pd.DataFrame(artificial_surface_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\nartificial_surface_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nartificial_surface_2012 = focus_2012_group[focus_2012_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_2012_group = pd.DataFrame(artificial_surface_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\nartificial_surface_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nartificial_surface_2018 = focus_2018_group[focus_2018_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_2018_group = pd.DataFrame(artificial_surface_2018.groupby(['pro_com', 'comune', 'sup_com_ha'])['surface_ha_2018'].sum())\nartificial_surface_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_artificial = [artificial_surface_2018_group, artificial_surface_2012_group, artificial_surface_2006_group, artificial_surface_2000_group, artificial_surface_1990_group]\nfocus_artificial_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_artificial)\nfocus_artificial_df = focus_artificial_df[focus_artificial_df['sup_com_ha'] > 0]\nfocus_artificial_df.fillna(0, inplace=True)\nfocus_artificial_df.insert(loc=3, column='perc_1990', value=round(focus_artificial_df.surface_ha_1990 / focus_artificial_df.sup_com_ha, 4) * 100)\nfocus_artificial_df.insert(loc=4, column='perc_2000', value=round(focus_artificial_df.surface_ha_2000 / focus_artificial_df.sup_com_ha, 4) * 100)\nfocus_artificial_df.insert(loc=5, column='perc_2006', value=round(focus_artificial_df.surface_ha_2006 / focus_artificial_df.sup_com_ha, 4) * 100)\nfocus_artificial_df.insert(loc=6, column='perc_2012', value=round(focus_artificial_df.surface_ha_2012 / focus_artificial_df.sup_com_ha, 4) * 100)\nfocus_artificial_df.insert(loc=7, column='perc_2018', value=round(focus_artificial_df.surface_ha_2018 / focus_artificial_df.sup_com_ha, 4) * 100)\nfocus_artificial_df.insert(loc=8, column='Perc.Diff. | 2018-2000', value=(focus_artificial_df.perc_2018 - focus_artificial_df.perc_2000))\nfocus_artificial_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nfocus_artificial_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      201\n      63036.0\n      Grumo Nevano\n      287.688759\n      47.45\n      64.93\n      64.93\n      51.31\n      51.31\n      -13.62\n      147.6065\n      147.6065\n      186.8019\n      186.8019\n      136.5066\n    \n    \n      232\n      63067.0\n      San Giorgio a Cremano\n      415.383936\n      60.96\n      76.57\n      68.51\n      68.51\n      68.51\n      -8.06\n      284.5767\n      284.5767\n      284.5768\n      318.0615\n      253.2174\n    \n    \n      197\n      63032.0\n      Frattamaggiore\n      538.816178\n      58.54\n      71.14\n      72.46\n      63.97\n      63.97\n      -7.17\n      344.6705\n      344.6705\n      390.4469\n      383.2980\n      315.4185\n    \n    \n      476\n      65121.0\n      San Mango Piemonte\n      602.370147\n      7.81\n      7.81\n      3.14\n      3.14\n      3.14\n      -4.67\n      18.8890\n      18.8890\n      18.8890\n      47.0198\n      47.0222\n    \n    \n      137\n      62046.0\n      Pago Veiano\n      2374.895020\n      1.83\n      5.24\n      2.13\n      2.13\n      2.13\n      -3.11\n      50.6037\n      50.6037\n      50.6037\n      124.5097\n      43.5550\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      228\n      63063.0\n      Quarto\n      1415.896056\n      24.40\n      24.95\n      26.90\n      39.26\n      39.26\n      14.31\n      555.9065\n      555.9065\n      380.8373\n      353.2075\n      345.4612\n    \n    \n      254\n      63089.0\n      Volla\n      620.630205\n      45.68\n      49.86\n      49.94\n      64.34\n      64.34\n      14.48\n      399.3008\n      399.3008\n      309.9351\n      309.4482\n      283.5034\n    \n    \n      212\n      63047.0\n      Monte di Procida\n      370.428037\n      31.25\n      31.25\n      31.25\n      48.28\n      48.28\n      17.03\n      178.8412\n      178.8412\n      115.7459\n      115.7458\n      115.7439\n    \n    \n      190\n      63025.0\n      Castello di Cisterna\n      392.135970\n      21.89\n      46.04\n      68.31\n      68.31\n      68.31\n      22.27\n      267.8514\n      267.8514\n      267.8514\n      180.5292\n      85.8311\n    \n    \n      380\n      65011.0\n      Atrani\n      12.061182\n      0.00\n      0.00\n      52.01\n      52.01\n      52.01\n      52.01\n      6.2730\n      6.2730\n      6.2730\n      0.0000\n      0.0000\n    \n  \n\n507 rows × 14 columns\n\n\n\n\n\nCode\n# Superfici in arretramento\nreduction_artificial_area = focus_artificial_df.iloc[0:10]\nreduction_artificial_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      201\n      63036.0\n      Grumo Nevano\n      287.688759\n      47.45\n      64.93\n      64.93\n      51.31\n      51.31\n      -13.62\n      147.6065\n      147.6065\n      186.8019\n      186.8019\n      136.5066\n    \n    \n      232\n      63067.0\n      San Giorgio a Cremano\n      415.383936\n      60.96\n      76.57\n      68.51\n      68.51\n      68.51\n      -8.06\n      284.5767\n      284.5767\n      284.5768\n      318.0615\n      253.2174\n    \n    \n      197\n      63032.0\n      Frattamaggiore\n      538.816178\n      58.54\n      71.14\n      72.46\n      63.97\n      63.97\n      -7.17\n      344.6705\n      344.6705\n      390.4469\n      383.2980\n      315.4185\n    \n    \n      476\n      65121.0\n      San Mango Piemonte\n      602.370147\n      7.81\n      7.81\n      3.14\n      3.14\n      3.14\n      -4.67\n      18.8890\n      18.8890\n      18.8890\n      47.0198\n      47.0222\n    \n    \n      137\n      62046.0\n      Pago Veiano\n      2374.895020\n      1.83\n      5.24\n      2.13\n      2.13\n      2.13\n      -3.11\n      50.6037\n      50.6037\n      50.6037\n      124.5097\n      43.5550\n    \n    \n      485\n      65132.0\n      San Valentino Torio\n      915.632363\n      15.51\n      15.56\n      13.27\n      13.27\n      13.27\n      -2.29\n      121.4587\n      121.4587\n      121.4588\n      142.4372\n      141.9949\n    \n    \n      4\n      61005.0\n      Aversa\n      885.176217\n      59.33\n      67.87\n      67.96\n      66.24\n      66.24\n      -1.63\n      586.3294\n      586.3294\n      601.5394\n      600.7846\n      525.1697\n    \n    \n      170\n      63005.0\n      Arzano\n      473.103075\n      83.22\n      86.97\n      87.40\n      85.42\n      85.42\n      -1.55\n      404.1348\n      404.1348\n      413.4904\n      411.4785\n      393.7116\n    \n    \n      474\n      65119.0\n      San Giovanni a Piro\n      3790.148485\n      2.12\n      4.21\n      2.72\n      2.72\n      2.72\n      -1.49\n      103.0783\n      103.0783\n      103.0783\n      159.6782\n      80.3555\n    \n    \n      57\n      61067.0\n      Recale\n      321.954739\n      32.81\n      32.81\n      31.54\n      31.54\n      31.54\n      -1.27\n      101.5467\n      101.5467\n      101.5467\n      105.6199\n      105.6193\n    \n  \n\n\n\n\n\n\nCode\n# Superfici in avanzamento\nincrease_artificial_area = focus_artificial_df.iloc[-10:]\nincrease_artificial_area.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nincrease_artificial_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      380\n      65011.0\n      Atrani\n      12.061182\n      0.00\n      0.00\n      52.01\n      52.01\n      52.01\n      52.01\n      6.2730\n      6.2730\n      6.2730\n      0.0000\n      0.0000\n    \n    \n      190\n      63025.0\n      Castello di Cisterna\n      392.135970\n      21.89\n      46.04\n      68.31\n      68.31\n      68.31\n      22.27\n      267.8514\n      267.8514\n      267.8514\n      180.5292\n      85.8311\n    \n    \n      212\n      63047.0\n      Monte di Procida\n      370.428037\n      31.25\n      31.25\n      31.25\n      48.28\n      48.28\n      17.03\n      178.8412\n      178.8412\n      115.7459\n      115.7458\n      115.7439\n    \n    \n      254\n      63089.0\n      Volla\n      620.630205\n      45.68\n      49.86\n      49.94\n      64.34\n      64.34\n      14.48\n      399.3008\n      399.3008\n      309.9351\n      309.4482\n      283.5034\n    \n    \n      228\n      63063.0\n      Quarto\n      1415.896056\n      24.40\n      24.95\n      26.90\n      39.26\n      39.26\n      14.31\n      555.9065\n      555.9065\n      380.8373\n      353.2075\n      345.4612\n    \n    \n      82\n      61094.0\n      Trentola Ducenta\n      665.513019\n      30.18\n      30.19\n      31.44\n      44.05\n      44.05\n      13.86\n      293.1760\n      293.1760\n      209.2403\n      200.8859\n      200.8848\n    \n    \n      15\n      61016.0\n      Carinaro\n      631.593670\n      28.55\n      34.93\n      44.25\n      47.41\n      47.41\n      12.48\n      299.4077\n      299.4077\n      279.4878\n      220.6269\n      180.3185\n    \n    \n      80\n      61092.0\n      Teverola\n      669.906081\n      31.59\n      37.22\n      50.70\n      48.78\n      48.78\n      11.56\n      326.7535\n      326.7535\n      339.6324\n      249.3457\n      211.6063\n    \n    \n      188\n      63023.0\n      Casoria\n      1213.840286\n      57.66\n      72.14\n      72.14\n      83.48\n      83.48\n      11.34\n      1013.2593\n      1013.2593\n      875.7210\n      875.7214\n      699.8511\n    \n    \n      123\n      62032.0\n      Forchia\n      545.454120\n      0.00\n      0.00\n      0.00\n      11.00\n      11.00\n      11.00\n      59.9761\n      59.9761\n      0.0000\n      0.0000\n      0.0000\n    \n  \n\n\n\n\n\n\nCode\nartificial_df = pd.concat([reduction_artificial_area, increase_artificial_area])\nartificial_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nartificial_df = artificial_df[['comune', 'Perc.Diff. | 2018-2000']]\nartificial_df['Perc.Diff. | 2018-2000'] = artificial_df['Perc.Diff. | 2018-2000']\nartificial_df.set_index('comune', inplace=True)\n\nfig_artificial = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig_artificial = GridSpec(nrows=1, ncols=1, figure=fig_artificial, hspace=0.35)\nax_artificial = fig_artificial.add_subplot(sub_fig_artificial[0, 0])\nartificial_df.plot.bar(ax=ax_artificial, rot=0)\n\nax_artificial.yaxis.set_label_text('%')\nax_artificial.set_xlabel('')\nax_artificial.grid(color='lightgrey', linestyle='dashdot')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2d646e0d0>\n\n\n\n\n\nOnestamente non so come interpretare l’arretramento delle aree artificiali, andrebbe fatta una ulteriore analisi per valutare se sono Comuni che si sono spopolati in quasi trenta anni.\nL’aumento è abbastanza facile da indagare per me che sono del posto. Napoli ha una popolazione di quasi un milione di abitanti che triplica nei giorni feriali, per non parlare poi dei turisti. E’ un’area molto congestionata con possibilità di nuova edilizia prossime allo zero; risulta normale quindi che Comuni più prossimi al Capoluogo di Regione stiano accogliendo “l’esubero” di popolazione. Faccio riferimento a Castello di Cisterna, Volla e Quarto.\nIl caso di Atrani è particolare perchè è il Comune più piccolo d’Italia ed è posto in una zona abbastanza impervia della costiera amalfitana; è probabile che nel 2000 non si sia data molta importanza all’area.\n\n\n2.3.2 Aree forestate\nIl gruppo 3.1 della CLC\n\n\nCode\n\n# Dati 1990\nforest_surface_1990 = focus_1990_group[focus_1990_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_1990_group = pd.DataFrame(forest_surface_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\nforest_surface_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nforest_surface_2000 = focus_2000_group[focus_2000_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_2000_group = pd.DataFrame(forest_surface_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\nforest_surface_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nforest_surface_2006 = focus_2006_group[focus_2006_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_2006_group = pd.DataFrame(forest_surface_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\nforest_surface_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nforest_surface_2012 = focus_2012_group[focus_2012_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_2012_group = pd.DataFrame(forest_surface_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\nforest_surface_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nforest_surface_2018 = focus_2018_group[focus_2018_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_2018_group = pd.DataFrame(forest_surface_2018.groupby(['pro_com', 'comune', 'sup_com_ha'])['surface_ha_2018'].sum())\nforest_surface_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_forest = [forest_surface_2018_group, forest_surface_2012_group, forest_surface_2006_group, forest_surface_2000_group, forest_surface_1990_group]\nfocus_forest_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_forest)\nfocus_forest_df = focus_forest_df[focus_forest_df['sup_com_ha'] > 0]\nfocus_forest_df.fillna(0, inplace=True)\nfocus_forest_df.insert(loc=3, column='perc_1990', value=round(focus_forest_df.surface_ha_1990 / focus_forest_df.sup_com_ha, 4) * 100)\nfocus_forest_df.insert(loc=4, column='perc_2000', value=round(focus_forest_df.surface_ha_2000 / focus_forest_df.sup_com_ha, 4) * 100)\nfocus_forest_df.insert(loc=5, column='perc_2006', value=round(focus_forest_df.surface_ha_2006 / focus_forest_df.sup_com_ha, 4) * 100)\nfocus_forest_df.insert(loc=6, column='perc_2012', value=round(focus_forest_df.surface_ha_2012 / focus_forest_df.sup_com_ha, 4) * 100)\nfocus_forest_df.insert(loc=7, column='perc_2018', value=round(focus_forest_df.surface_ha_2018 / focus_forest_df.sup_com_ha, 4) * 100)\nfocus_forest_df.insert(loc=8, column='Perc.Diff. | 2018-2000', value=(focus_forest_df.perc_2018 - focus_forest_df.perc_2000))\nfocus_forest_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nfocus_forest_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      139\n      62073.0\n      Solopaca\n      3112.664003\n      43.63\n      43.63\n      43.46\n      11.69\n      11.69\n      -31.94\n      363.9901\n      363.9901\n      1352.7210\n      1358.0359\n      1358.0275\n    \n    \n      143\n      62077.0\n      Vitulano\n      3599.050416\n      50.86\n      50.81\n      50.81\n      26.82\n      26.82\n      -23.99\n      965.1276\n      965.1276\n      1828.5273\n      1828.5272\n      1830.3353\n    \n    \n      410\n      65115.0\n      Salento\n      2378.507005\n      51.73\n      50.93\n      37.94\n      37.93\n      37.93\n      -13.00\n      902.2741\n      902.2741\n      902.4736\n      1211.3768\n      1230.4272\n    \n    \n      179\n      63082.0\n      Terzigno\n      2346.480829\n      20.68\n      20.68\n      20.68\n      20.68\n      8.01\n      -12.67\n      187.8420\n      485.2334\n      485.2333\n      485.2338\n      485.2356\n    \n    \n      147\n      63007.0\n      Barano d'Ischia\n      1096.089426\n      49.21\n      49.21\n      49.21\n      38.59\n      38.59\n      -10.62\n      422.9915\n      422.9915\n      539.3662\n      539.3660\n      539.3685\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      439\n      65147.0\n      Torchiara\n      846.167482\n      20.76\n      20.76\n      20.86\n      29.14\n      29.14\n      8.38\n      246.5860\n      246.5860\n      176.5072\n      175.6504\n      175.6495\n    \n    \n      436\n      65144.0\n      Stella Cilento\n      1451.726154\n      39.51\n      43.25\n      43.25\n      52.64\n      52.64\n      9.39\n      764.2043\n      764.2043\n      627.8681\n      627.8690\n      573.5525\n    \n    \n      393\n      65098.0\n      Pollica\n      2816.525386\n      11.44\n      17.14\n      17.15\n      27.01\n      27.01\n      9.87\n      760.6785\n      760.6785\n      482.9555\n      482.8660\n      322.2088\n    \n    \n      359\n      65064.0\n      Lustra\n      1524.153297\n      34.01\n      34.02\n      34.02\n      44.61\n      44.61\n      10.59\n      679.9189\n      679.9189\n      518.4959\n      518.4971\n      518.4368\n    \n    \n      408\n      65113.0\n      Sacco\n      2365.702940\n      42.11\n      42.02\n      42.02\n      63.01\n      63.01\n      20.99\n      1490.6391\n      1490.6391\n      994.0414\n      994.0408\n      996.2456\n    \n  \n\n450 rows × 14 columns\n\n\n\n\n\nCode\n# Superfici in arretramento\nreduction_forest_area = focus_forest_df.iloc[0:10]\nreduction_forest_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      139\n      62073.0\n      Solopaca\n      3112.664003\n      43.63\n      43.63\n      43.46\n      11.69\n      11.69\n      -31.94\n      363.9901\n      363.9901\n      1352.7210\n      1358.0359\n      1358.0275\n    \n    \n      143\n      62077.0\n      Vitulano\n      3599.050416\n      50.86\n      50.81\n      50.81\n      26.82\n      26.82\n      -23.99\n      965.1276\n      965.1276\n      1828.5273\n      1828.5272\n      1830.3353\n    \n    \n      410\n      65115.0\n      Salento\n      2378.507005\n      51.73\n      50.93\n      37.94\n      37.93\n      37.93\n      -13.00\n      902.2741\n      902.2741\n      902.4736\n      1211.3768\n      1230.4272\n    \n    \n      179\n      63082.0\n      Terzigno\n      2346.480829\n      20.68\n      20.68\n      20.68\n      20.68\n      8.01\n      -12.67\n      187.8420\n      485.2334\n      485.2333\n      485.2338\n      485.2356\n    \n    \n      147\n      63007.0\n      Barano d'Ischia\n      1096.089426\n      49.21\n      49.21\n      49.21\n      38.59\n      38.59\n      -10.62\n      422.9915\n      422.9915\n      539.3662\n      539.3660\n      539.3685\n    \n    \n      304\n      65006.0\n      Amalfi\n      570.014402\n      48.51\n      48.51\n      38.86\n      38.86\n      38.86\n      -9.65\n      221.4838\n      221.4838\n      221.4838\n      276.5111\n      276.5144\n    \n    \n      170\n      63064.0\n      Ercolano\n      1989.359843\n      21.47\n      21.26\n      21.26\n      17.39\n      11.75\n      -9.51\n      233.6730\n      345.9226\n      422.9398\n      422.9397\n      427.1795\n    \n    \n      155\n      63035.0\n      Gragnano\n      1464.244074\n      53.35\n      53.35\n      52.42\n      44.07\n      44.07\n      -9.28\n      645.3063\n      645.3063\n      767.6083\n      781.1773\n      781.1751\n    \n    \n      159\n      63041.0\n      Marano di Napoli\n      1565.253641\n      13.09\n      13.09\n      13.09\n      3.98\n      3.98\n      -9.11\n      62.3734\n      62.3734\n      204.9146\n      204.9145\n      204.9150\n    \n    \n      183\n      63091.0\n      Trecase\n      621.312671\n      8.86\n      8.86\n      8.86\n      8.86\n      0.08\n      -8.78\n      0.4777\n      55.0368\n      55.0368\n      55.0368\n      55.0371\n    \n  \n\n\n\n\n\n\nCode\n# Superfici in avanzamento\nincrease_forest_area = focus_forest_df.iloc[-10:]\nincrease_forest_area.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nincrease_forest_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      408\n      65113.0\n      Sacco\n      2365.702940\n      42.11\n      42.02\n      42.02\n      63.01\n      63.01\n      20.99\n      1490.6391\n      1490.6391\n      994.0414\n      994.0408\n      996.2456\n    \n    \n      359\n      65064.0\n      Lustra\n      1524.153297\n      34.01\n      34.02\n      34.02\n      44.61\n      44.61\n      10.59\n      679.9189\n      679.9189\n      518.4959\n      518.4971\n      518.4368\n    \n    \n      393\n      65098.0\n      Pollica\n      2816.525386\n      11.44\n      17.14\n      17.15\n      27.01\n      27.01\n      9.87\n      760.6785\n      760.6785\n      482.9555\n      482.8660\n      322.2088\n    \n    \n      436\n      65144.0\n      Stella Cilento\n      1451.726154\n      39.51\n      43.25\n      43.25\n      52.64\n      52.64\n      9.39\n      764.2043\n      764.2043\n      627.8681\n      627.8690\n      573.5525\n    \n    \n      439\n      65147.0\n      Torchiara\n      846.167482\n      20.76\n      20.76\n      20.86\n      29.14\n      29.14\n      8.38\n      246.5860\n      246.5860\n      176.5072\n      175.6504\n      175.6495\n    \n    \n      405\n      65110.0\n      Romagnano al Monte\n      966.995480\n      18.35\n      18.35\n      18.35\n      26.64\n      26.64\n      8.29\n      257.5984\n      257.5984\n      177.4251\n      177.4254\n      177.4249\n    \n    \n      151\n      63022.0\n      Casola di Napoli\n      259.318212\n      34.28\n      34.28\n      42.15\n      42.15\n      42.15\n      7.87\n      109.3078\n      109.3078\n      109.3078\n      88.8917\n      88.8916\n    \n    \n      102\n      62036.0\n      Ginestra degli Schiavoni\n      1478.706162\n      22.20\n      22.20\n      22.20\n      29.90\n      29.90\n      7.70\n      442.1457\n      442.1457\n      328.2494\n      328.2500\n      328.2562\n    \n    \n      229\n      64045.0\n      Luogosano\n      606.809422\n      10.43\n      12.63\n      12.63\n      18.42\n      18.42\n      5.79\n      111.7932\n      111.7932\n      76.6287\n      76.6287\n      63.2980\n    \n    \n      355\n      65060.0\n      Laureana Cilento\n      1374.420460\n      25.62\n      25.64\n      25.64\n      30.10\n      31.15\n      5.51\n      428.1047\n      413.7489\n      352.3810\n      352.3819\n      352.1644\n    \n  \n\n\n\n\n\n\nCode\nforest_df = pd.concat([reduction_forest_area, increase_forest_area])\nforest_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nforest_df = forest_df[['comune', 'Perc.Diff. | 2018-2000']]\nforest_df['Perc.Diff. | 2018-2000'] = forest_df['Perc.Diff. | 2018-2000']\nforest_df.set_index('comune', inplace=True)\n\nfig_forest = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig_forest = GridSpec(nrows=1, ncols=1, figure=fig_forest, hspace=0.35)\nax_forest = fig_forest.add_subplot(sub_fig_forest[0, 0])\nforest_df.plot.bar(ax=ax_forest, rot=0)\n\nax_forest.yaxis.set_label_text('%')\nax_forest.set_xlabel('')\nax_forest.grid(color='lightgrey', linestyle='dashdot')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2d401af40>\n\n\n\n\n\nE’ significativo per me che nella top 10 del decremento di aree forestate ci siano Terzigno, Ercolano e Trecase. Lo è perchè sono tra i Comuni ricadenti nell’area del Parco Nazionale del Vesuvio che hanno subito danni al patrimonio boschivo a causa dell’incendio che ci fu nel 2017.\nLe aree in cui i boschi avanzano sono perlopiu aree rurali, a vocazione agricola, che pian piano si stanno spopolando.\n\n\n2.3.3 Aree agricole\nIl gruppo 2.1 della CLC\n\n\nCode\n\n# Dati 1990\narable_lands_surface_1990 = focus_1990_group[focus_1990_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_1990_group = pd.DataFrame(arable_lands_surface_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\narable_lands_surface_1990_group.reset_index(inplace=True)\n\n# Dati 2000\narable_lands_surface_2000 = focus_2000_group[focus_2000_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_2000_group = pd.DataFrame(arable_lands_surface_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\narable_lands_surface_2000_group.reset_index(inplace=True)\n\n# Dati 2006\narable_lands_surface_2006 = focus_2006_group[focus_2006_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_2006_group = pd.DataFrame(arable_lands_surface_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\narable_lands_surface_2006_group.reset_index(inplace=True)\n\n# Dati 2012\narable_lands_surface_2012 = focus_2012_group[focus_2012_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_2012_group = pd.DataFrame(arable_lands_surface_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\narable_lands_surface_2012_group.reset_index(inplace=True)\n\n# Dati 2018\narable_lands_surface_2018 = focus_2018_group[focus_2018_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_2018_group = pd.DataFrame(arable_lands_surface_2018.groupby(['pro_com', 'comune', 'sup_com_ha'])['surface_ha_2018'].sum())\narable_lands_surface_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_arable_lands = [arable_lands_surface_2018_group, arable_lands_surface_2012_group, arable_lands_surface_2006_group, arable_lands_surface_2000_group, arable_lands_surface_1990_group]\nfocus_arable_lands_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_arable_lands)\nfocus_arable_lands_df = focus_arable_lands_df[focus_arable_lands_df['sup_com_ha'] > 0]\nfocus_arable_lands_df.fillna(0, inplace=True)\nfocus_arable_lands_df.insert(loc=3, column='perc_1990', value=round(focus_arable_lands_df.surface_ha_1990 / focus_arable_lands_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_df.insert(loc=4, column='perc_2000', value=round(focus_arable_lands_df.surface_ha_2000 / focus_arable_lands_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_df.insert(loc=5, column='perc_2006', value=round(focus_arable_lands_df.surface_ha_2006 / focus_arable_lands_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_df.insert(loc=6, column='perc_2012', value=round(focus_arable_lands_df.surface_ha_2012 / focus_arable_lands_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_df.insert(loc=7, column='perc_2018', value=round(focus_arable_lands_df.surface_ha_2018 / focus_arable_lands_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_df.insert(loc=8, column='Perc.Diff. | 2018-2000', value=(focus_arable_lands_df.perc_2018 - focus_arable_lands_df.perc_2000))\nfocus_arable_lands_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nfocus_arable_lands_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      238\n      64072.0\n      Pietradefusi\n      924.149874\n      77.90\n      77.90\n      20.16\n      20.16\n      20.16\n      -57.74\n      186.3344\n      186.3344\n      186.3345\n      719.9375\n      719.9308\n    \n    \n      229\n      64056.0\n      Montefusco\n      823.823558\n      59.13\n      59.13\n      2.01\n      2.01\n      2.01\n      -57.12\n      16.5238\n      16.5238\n      16.5238\n      487.1327\n      487.1269\n    \n    \n      250\n      64093.0\n      Santa Paolina\n      843.429641\n      29.95\n      29.95\n      0.25\n      0.25\n      0.25\n      -29.70\n      2.0832\n      2.0832\n      2.0832\n      252.5909\n      252.5864\n    \n    \n      189\n      63089.0\n      Volla\n      620.630205\n      33.87\n      29.74\n      29.74\n      1.05\n      1.05\n      -28.69\n      6.5071\n      6.5071\n      184.6057\n      184.6056\n      210.2015\n    \n    \n      260\n      64110.0\n      Torre Le Nocelle\n      1004.158412\n      43.42\n      43.42\n      17.52\n      17.52\n      17.52\n      -25.90\n      175.8839\n      175.8839\n      175.8840\n      436.0116\n      436.0185\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      130\n      62049.0\n      Paupisi\n      683.272709\n      0.00\n      0.00\n      0.00\n      23.31\n      23.31\n      23.31\n      159.2668\n      159.2668\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      13\n      61016.0\n      Carinaro\n      631.593670\n      13.06\n      9.15\n      9.15\n      41.13\n      41.13\n      31.98\n      259.7728\n      259.7728\n      57.8113\n      57.8112\n      82.5094\n    \n    \n      17\n      61020.0\n      Casaluce\n      955.842829\n      0.70\n      0.70\n      0.70\n      60.53\n      60.53\n      59.83\n      578.6141\n      578.6141\n      6.7225\n      6.7226\n      6.7222\n    \n    \n      32\n      61037.0\n      Frignano\n      985.795577\n      0.00\n      0.00\n      0.00\n      69.03\n      69.03\n      69.03\n      680.5149\n      680.5149\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      84\n      61098.0\n      Villa di Briano\n      854.692612\n      3.91\n      3.91\n      3.91\n      74.03\n      74.03\n      70.12\n      632.7436\n      632.7436\n      33.4422\n      33.4424\n      33.4453\n    \n  \n\n363 rows × 14 columns\n\n\n\n\n\nCode\n\n# Superfici in arretramento\nreduction_arable_lands_area = focus_arable_lands_df.iloc[0:10]\nreduction_arable_lands_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      238\n      64072.0\n      Pietradefusi\n      924.149874\n      77.90\n      77.90\n      20.16\n      20.16\n      20.16\n      -57.74\n      186.3344\n      186.3344\n      186.3345\n      719.9375\n      719.9308\n    \n    \n      229\n      64056.0\n      Montefusco\n      823.823558\n      59.13\n      59.13\n      2.01\n      2.01\n      2.01\n      -57.12\n      16.5238\n      16.5238\n      16.5238\n      487.1327\n      487.1269\n    \n    \n      250\n      64093.0\n      Santa Paolina\n      843.429641\n      29.95\n      29.95\n      0.25\n      0.25\n      0.25\n      -29.70\n      2.0832\n      2.0832\n      2.0832\n      252.5909\n      252.5864\n    \n    \n      189\n      63089.0\n      Volla\n      620.630205\n      33.87\n      29.74\n      29.74\n      1.05\n      1.05\n      -28.69\n      6.5071\n      6.5071\n      184.6057\n      184.6056\n      210.2015\n    \n    \n      260\n      64110.0\n      Torre Le Nocelle\n      1004.158412\n      43.42\n      43.42\n      17.52\n      17.52\n      17.52\n      -25.90\n      175.8839\n      175.8839\n      175.8840\n      436.0116\n      436.0185\n    \n    \n      190\n      63090.0\n      Santa Maria la Carità\n      397.883761\n      24.44\n      24.44\n      0.29\n      0.29\n      0.29\n      -24.15\n      1.1544\n      1.1544\n      1.1544\n      97.2554\n      97.2552\n    \n    \n      76\n      61088.0\n      Sessa Aurunca\n      16218.704457\n      25.28\n      25.35\n      2.23\n      2.56\n      2.56\n      -22.79\n      415.3546\n      415.3546\n      362.1214\n      4112.0036\n      4099.7632\n    \n    \n      166\n      63025.0\n      Castello di Cisterna\n      392.135970\n      44.25\n      44.25\n      21.85\n      21.85\n      21.85\n      -22.40\n      85.6953\n      85.6953\n      85.6953\n      173.5036\n      173.5048\n    \n    \n      232\n      64059.0\n      Montemiletto\n      2163.480616\n      34.90\n      33.95\n      14.70\n      14.70\n      14.70\n      -19.25\n      318.1006\n      318.1006\n      318.1007\n      734.5263\n      755.1347\n    \n    \n      163\n      63017.0\n      Casalnuovo di Napoli\n      783.538578\n      44.85\n      41.66\n      41.66\n      27.45\n      27.45\n      -14.21\n      215.1126\n      215.1126\n      326.3900\n      326.3901\n      351.4509\n    \n  \n\n\n\n\n\n\nCode\n\n# Superfici in avanzamento\nincrease_arable_lands_area = focus_arable_lands_df.iloc[-10:]\nincrease_arable_lands_area.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nincrease_arable_lands_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      84\n      61098.0\n      Villa di Briano\n      854.692612\n      3.91\n      3.91\n      3.91\n      74.03\n      74.03\n      70.12\n      632.7436\n      632.7436\n      33.4422\n      33.4424\n      33.4453\n    \n    \n      32\n      61037.0\n      Frignano\n      985.795577\n      0.00\n      0.00\n      0.00\n      69.03\n      69.03\n      69.03\n      680.5149\n      680.5149\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      17\n      61020.0\n      Casaluce\n      955.842829\n      0.70\n      0.70\n      0.70\n      60.53\n      60.53\n      59.83\n      578.6141\n      578.6141\n      6.7225\n      6.7226\n      6.7222\n    \n    \n      13\n      61016.0\n      Carinaro\n      631.593670\n      13.06\n      9.15\n      9.15\n      41.13\n      41.13\n      31.98\n      259.7728\n      259.7728\n      57.8113\n      57.8112\n      82.5094\n    \n    \n      130\n      62049.0\n      Paupisi\n      683.272709\n      0.00\n      0.00\n      0.00\n      23.31\n      23.31\n      23.31\n      159.2668\n      159.2668\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      143\n      62062.0\n      San Lorenzo Maggiore\n      1629.550368\n      0.93\n      0.93\n      0.93\n      18.00\n      18.00\n      17.07\n      293.3587\n      293.3587\n      15.1138\n      15.1136\n      15.1112\n    \n    \n      134\n      62053.0\n      Ponte\n      1791.529818\n      18.98\n      18.98\n      18.11\n      35.86\n      35.86\n      16.88\n      642.4110\n      642.4110\n      324.5012\n      339.9875\n      339.9830\n    \n    \n      217\n      64037.0\n      Greci\n      3026.329172\n      33.15\n      34.35\n      50.04\n      50.02\n      50.02\n      15.67\n      1513.7004\n      1513.7004\n      1514.3325\n      1039.4665\n      1003.1417\n    \n    \n      36\n      61043.0\n      Gricignano di Aversa\n      997.757144\n      27.33\n      19.84\n      19.70\n      35.43\n      35.43\n      15.59\n      353.4710\n      353.4710\n      196.5586\n      197.9250\n      272.6607\n    \n    \n      63\n      61074.0\n      San Cipriano d'Aversa\n      619.009752\n      44.14\n      44.14\n      43.49\n      56.38\n      56.38\n      12.24\n      348.9748\n      348.9748\n      269.2010\n      273.2419\n      273.2415\n    \n  \n\n\n\n\n\n\nCode\narable_lands_df = pd.concat([reduction_arable_lands_area, increase_arable_lands_area])\narable_lands_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\narable_lands_df = arable_lands_df[['comune', 'Perc.Diff. | 2018-2000']]\narable_lands_df['Perc.Diff. | 2018-2000'] = arable_lands_df['Perc.Diff. | 2018-2000']\narable_lands_df.set_index('comune', inplace=True)\n\nfig_arable_lands = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig_arable_lands = GridSpec(nrows=1, ncols=1, figure=fig_arable_lands, hspace=0.35)\nax_arable_lands = fig_arable_lands.add_subplot(sub_fig_arable_lands[0, 0])\narable_lands_df.plot.bar(ax=ax_arable_lands, rot=0)\n\nax_arable_lands.yaxis.set_label_text('%')\nax_arable_lands.set_xlabel('')\nax_arable_lands.grid(color='lightgrey', linestyle='dashdot')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2d5ed0fd0>\n\n\n\n\n\nTra i Comuni con maggior aumento della aree articifiali abbiamo visto che c’è Volla che è tra i Comuni con maggior decremento delle aree agricole. Poco sopra ho fatto una riflessione sul perchè della redistribuzione del livello 1 della CLC. Due indizi non fanno una prova, ma tre?\n\n\n2.3.4 Aree bruciate\n\n\nCode\n\n# Dati 1990\nburnt_surface_1990 = focus_1990_group[focus_1990_group['label3'].isin(['Burnt areas'])]\nburnt_surface_1990_group = pd.DataFrame(burnt_surface_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\nburnt_surface_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nburnt_surface_2000 = focus_2000_group[focus_2000_group['label3'].isin(['Burnt areas'])]\nburnt_surface_2000_group = pd.DataFrame(burnt_surface_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\nburnt_surface_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nburnt_surface_2006 = focus_2006_group[focus_2006_group['label3'].isin(['Burnt areas'])]\nburnt_surface_2006_group = pd.DataFrame(burnt_surface_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\nburnt_surface_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nburnt_surface_2012 = focus_2012_group[focus_2012_group['label3'].isin(['Burnt areas'])]\nburnt_surface_2012_group = pd.DataFrame(burnt_surface_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\nburnt_surface_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nburnt_surface_2018 = focus_2018_group[focus_2018_group['label3'].isin(['Burnt areas'])]\nburnt_surface_2018_group = pd.DataFrame(burnt_surface_2018.groupby(['pro_com', 'comune', 'sup_com_ha'])['surface_ha_2018'].sum())\nburnt_surface_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_arable_lands = [burnt_surface_2018_group, burnt_surface_2012_group, burnt_surface_2006_group, burnt_surface_2000_group, burnt_surface_1990_group]\nfocus_burnt_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_arable_lands)\nfocus_burnt_df = focus_burnt_df[focus_burnt_df['sup_com_ha'] > 0]\nfocus_burnt_df.fillna(0, inplace=True)\nfocus_burnt_df.insert(loc=3, column='perc_1990', value=round(focus_burnt_df.surface_ha_1990 / focus_burnt_df.sup_com_ha, 4) * 100)\nfocus_burnt_df.insert(loc=4, column='perc_2000', value=round(focus_burnt_df.surface_ha_2000 / focus_burnt_df.sup_com_ha, 4) * 100)\nfocus_burnt_df.insert(loc=5, column='perc_2006', value=round(focus_burnt_df.surface_ha_2006 / focus_burnt_df.sup_com_ha, 4) * 100)\nfocus_burnt_df.insert(loc=6, column='perc_2012', value=round(focus_burnt_df.surface_ha_2012 / focus_burnt_df.sup_com_ha, 4) * 100)\nfocus_burnt_df.insert(loc=7, column='perc_2018', value=round(focus_burnt_df.surface_ha_2018 / focus_burnt_df.sup_com_ha, 4) * 100)\nfocus_burnt_df.insert(loc=8, column='Perc.Diff. | 2018-2000', value=(focus_burnt_df.perc_2018 - focus_burnt_df.perc_2000))\nfocus_burnt_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nfocus_burnt_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      20\n      63082.0\n      Terzigno\n      2346.480829\n      0.0\n      0.00\n      0.00\n      0.00\n      18.50\n      18.50\n      434.1155\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      16\n      63064.0\n      Ercolano\n      1989.359843\n      0.0\n      0.00\n      0.00\n      8.49\n      17.54\n      17.54\n      348.9169\n      168.9727\n      0.0000\n      0.0000\n      0.0\n    \n    \n      10\n      63009.0\n      Boscotrecase\n      753.047593\n      0.0\n      0.00\n      0.00\n      0.00\n      16.95\n      16.95\n      127.6552\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      22\n      63091.0\n      Trecase\n      621.312671\n      0.0\n      0.00\n      0.00\n      0.00\n      13.75\n      13.75\n      85.4539\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      13\n      63051.0\n      Ottaviano\n      2002.268341\n      0.0\n      0.00\n      0.00\n      0.88\n      12.06\n      12.06\n      241.4028\n      17.6023\n      0.0000\n      0.0000\n      0.0\n    \n    \n      50\n      65142.0\n      Siano\n      856.918877\n      0.0\n      0.00\n      0.00\n      0.00\n      10.24\n      10.24\n      87.7539\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      24\n      64076.0\n      Quadrelle\n      693.114011\n      0.0\n      0.00\n      0.00\n      0.00\n      9.65\n      9.65\n      66.9010\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      21\n      63084.0\n      Torre del Greco\n      3066.110669\n      0.0\n      0.00\n      0.00\n      1.58\n      9.19\n      9.19\n      281.8574\n      48.5022\n      0.0000\n      0.0000\n      0.0\n    \n    \n      11\n      63041.0\n      Marano di Napoli\n      1565.253641\n      0.0\n      0.00\n      0.00\n      9.11\n      9.11\n      9.11\n      142.5412\n      142.5412\n      0.0000\n      0.0000\n      0.0\n    \n    \n      45\n      65108.0\n      Roccapiemonte\n      531.325342\n      0.0\n      3.85\n      0.00\n      0.00\n      10.68\n      6.83\n      56.7487\n      0.0000\n      0.0000\n      20.4508\n      0.0\n    \n    \n      41\n      65067.0\n      Mercato San Severino\n      3033.314668\n      0.0\n      3.72\n      0.00\n      0.00\n      9.55\n      5.83\n      289.6134\n      0.0000\n      0.0000\n      112.7573\n      0.0\n    \n    \n      36\n      65047.0\n      Corbara\n      673.181063\n      0.0\n      0.00\n      0.00\n      0.00\n      5.43\n      5.43\n      36.5565\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      27\n      64100.0\n      Sirignano\n      618.669347\n      0.0\n      0.00\n      0.00\n      0.00\n      5.42\n      5.42\n      33.5478\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      33\n      65020.0\n      Calvanico\n      1490.919524\n      0.0\n      0.00\n      0.00\n      0.00\n      4.50\n      4.50\n      67.0813\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      1\n      61024.0\n      Castel di Sasso\n      2032.307571\n      0.0\n      0.00\n      0.00\n      0.00\n      3.73\n      3.73\n      75.8659\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      29\n      64121.0\n      Montoro\n      4014.094054\n      0.0\n      0.10\n      0.00\n      0.00\n      3.73\n      3.63\n      149.7874\n      0.0000\n      0.0000\n      4.0627\n      0.0\n    \n    \n      30\n      65013.0\n      Baronissi\n      1792.982916\n      0.0\n      0.00\n      0.00\n      0.00\n      3.61\n      3.61\n      64.6775\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      17\n      63065.0\n      Roccarainola\n      2833.151640\n      0.0\n      0.00\n      0.00\n      0.00\n      3.55\n      3.55\n      100.4408\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      9\n      62028.0\n      Durazzano\n      1290.490693\n      0.0\n      0.00\n      0.00\n      3.36\n      3.36\n      3.36\n      43.3596\n      43.3596\n      0.0000\n      0.0000\n      0.0\n    \n    \n      8\n      62009.0\n      Bonea\n      1146.261236\n      0.0\n      0.00\n      0.00\n      0.00\n      3.09\n      3.09\n      35.4456\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      44\n      65079.0\n      Nocera Superiore\n      1466.245166\n      0.0\n      0.00\n      0.00\n      0.00\n      3.00\n      3.00\n      44.0193\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      48\n      65131.0\n      Santomenna\n      891.925366\n      0.0\n      0.00\n      0.00\n      2.94\n      2.94\n      2.94\n      26.1979\n      26.1980\n      0.0000\n      0.0000\n      0.0\n    \n    \n      4\n      61051.0\n      Mignano Monte Lungo\n      5309.523303\n      0.0\n      0.00\n      0.00\n      0.00\n      2.72\n      2.72\n      144.4552\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      51\n      65151.0\n      Tramonti\n      2482.596555\n      0.0\n      0.00\n      0.00\n      2.59\n      2.59\n      2.59\n      64.2754\n      64.2754\n      0.0000\n      0.0000\n      0.0\n    \n    \n      14\n      63060.0\n      Pozzuoli\n      4343.389600\n      0.0\n      0.00\n      0.00\n      2.38\n      2.38\n      2.38\n      103.1784\n      103.1784\n      0.0000\n      0.0000\n      0.0\n    \n    \n      49\n      65135.0\n      Sarno\n      4000.061759\n      0.0\n      0.00\n      0.00\n      0.00\n      2.15\n      2.15\n      85.9694\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      40\n      65060.0\n      Laureana Cilento\n      1374.420460\n      0.0\n      0.00\n      0.00\n      0.00\n      1.98\n      1.98\n      27.2732\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      6\n      61075.0\n      San Felice a Cancello\n      2717.900285\n      0.0\n      0.00\n      0.00\n      0.00\n      1.98\n      1.98\n      53.7304\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      25\n      64077.0\n      Quindici\n      2390.824174\n      0.0\n      0.00\n      0.00\n      0.00\n      1.90\n      1.90\n      45.4393\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      42\n      65069.0\n      Moio della Civitella\n      1718.872945\n      0.0\n      0.00\n      0.00\n      0.00\n      1.58\n      1.58\n      27.1520\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      23\n      63092.0\n      Massa di Somma\n      304.205206\n      0.0\n      0.00\n      0.00\n      0.00\n      1.51\n      1.51\n      4.6046\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      46\n      65124.0\n      San Mauro la Bruca\n      1905.442534\n      0.0\n      0.00\n      0.00\n      0.00\n      1.34\n      1.34\n      25.6184\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      28\n      64101.0\n      Solofra\n      2221.354782\n      0.0\n      0.00\n      0.00\n      0.00\n      1.30\n      1.30\n      28.9118\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      43\n      65078.0\n      Nocera Inferiore\n      2094.467250\n      0.0\n      0.00\n      0.00\n      0.00\n      1.24\n      1.24\n      26.0176\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      15\n      63063.0\n      Quarto\n      1415.896056\n      0.0\n      0.00\n      0.00\n      1.17\n      1.17\n      1.17\n      16.5525\n      16.5525\n      0.0000\n      0.0000\n      0.0\n    \n    \n      18\n      63068.0\n      San Giuseppe Vesuviano\n      1417.126283\n      0.0\n      0.00\n      0.00\n      0.00\n      1.04\n      1.04\n      14.7355\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      32\n      65019.0\n      Caggiano\n      3542.966709\n      0.0\n      0.00\n      0.00\n      0.93\n      0.93\n      0.93\n      32.9540\n      32.9540\n      0.0000\n      0.0000\n      0.0\n    \n    \n      34\n      65034.0\n      Castel San Giorgio\n      1358.506777\n      0.0\n      0.00\n      0.00\n      0.00\n      0.75\n      0.75\n      10.1730\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      0\n      61022.0\n      Caserta\n      5406.845910\n      0.0\n      0.00\n      0.00\n      0.67\n      0.67\n      0.67\n      36.0326\n      36.0326\n      0.0000\n      0.0000\n      0.0\n    \n    \n      12\n      63049.0\n      Napoli\n      11894.407425\n      0.0\n      0.00\n      0.00\n      0.53\n      0.53\n      0.53\n      63.0803\n      63.0803\n      0.0000\n      0.0000\n      0.0\n    \n    \n      5\n      61052.0\n      Mondragone\n      5572.569052\n      0.0\n      0.00\n      2.74\n      0.00\n      0.52\n      0.52\n      29.0151\n      0.0000\n      152.8844\n      0.0000\n      0.0\n    \n    \n      39\n      65055.0\n      Giffoni Sei Casali\n      3507.503961\n      0.0\n      0.00\n      0.00\n      0.00\n      0.22\n      0.22\n      7.7114\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      31\n      65016.0\n      Bracigliano\n      1440.868176\n      0.0\n      0.26\n      0.00\n      0.00\n      0.47\n      0.21\n      6.7033\n      0.0000\n      0.0000\n      3.7261\n      0.0\n    \n    \n      19\n      63079.0\n      Somma Vesuviana\n      3066.640742\n      0.0\n      0.00\n      0.00\n      0.11\n      0.11\n      0.11\n      3.3491\n      3.3491\n      0.0000\n      0.0000\n      0.0\n    \n    \n      3\n      61045.0\n      Liberi\n      1758.913730\n      0.0\n      0.00\n      0.00\n      0.00\n      0.10\n      0.10\n      1.7792\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      2\n      61026.0\n      Castel Morrone\n      2534.392208\n      0.0\n      0.00\n      0.00\n      0.10\n      0.10\n      0.10\n      2.6154\n      2.6154\n      0.0000\n      0.0000\n      0.0\n    \n    \n      26\n      64099.0\n      Serino\n      5249.939474\n      0.0\n      0.00\n      0.00\n      0.00\n      0.04\n      0.04\n      1.9971\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      38\n      65054.0\n      Futani\n      1485.058368\n      0.0\n      0.00\n      0.00\n      0.00\n      0.02\n      0.02\n      0.3298\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      7\n      61079.0\n      San Pietro Infine\n      1371.735131\n      0.0\n      0.00\n      0.00\n      0.00\n      0.01\n      0.01\n      0.1720\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      47\n      65130.0\n      Sant'Egidio del Monte Albino\n      724.511924\n      0.0\n      0.00\n      0.00\n      0.00\n      0.00\n      0.00\n      0.0259\n      0.0000\n      0.0000\n      0.0000\n      0.0\n    \n    \n      35\n      65037.0\n      Cava de' Tirreni\n      3653.112071\n      0.0\n      1.55\n      0.00\n      0.04\n      1.48\n      -0.07\n      54.0169\n      1.6314\n      0.0000\n      56.7053\n      0.0\n    \n    \n      37\n      65052.0\n      Fisciano\n      3168.742849\n      0.0\n      4.15\n      0.00\n      0.00\n      1.43\n      -2.72\n      45.1761\n      0.0000\n      0.0000\n      131.4723\n      0.0\n    \n  \n\n\n\n\nIn questa analisi ci sono in 6 delle prime 10 posizioni alcuni dei Comuni interessati dall’incendio del 2017.\n\n\n2.3.5 Aree adibite a discarica\n\n\nCode\n\n# Dati 1990\ndump_surface_1990 = focus_1990_group[focus_1990_group['label3'].isin(['Dump sites'])]\ndump_surface_1990_group = pd.DataFrame(dump_surface_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\ndump_surface_1990_group.reset_index(inplace=True)\n\n# Dati 2000\ndump_surface_2000 = focus_2000_group[focus_2000_group['label3'].isin(['Dump sites'])]\ndump_surface_2000_group = pd.DataFrame(dump_surface_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\ndump_surface_2000_group.reset_index(inplace=True)\n\n# Dati 2006\ndump_surface_2006 = focus_2006_group[focus_2006_group['label3'].isin(['Dump sites'])]\ndump_surface_2006_group = pd.DataFrame(dump_surface_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\ndump_surface_2006_group.reset_index(inplace=True)\n\n# Dati 2012\ndump_surface_2012 = focus_2012_group[focus_2012_group['label3'].isin(['Dump sites'])]\ndump_surface_2012_group = pd.DataFrame(dump_surface_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\ndump_surface_2012_group.reset_index(inplace=True)\n\n# Dati 2018\ndump_surface_2018 = focus_2018_group[focus_2018_group['label3'].isin(['Dump sites'])]\ndump_surface_2018_group = pd.DataFrame(dump_surface_2018.groupby(['pro_com', 'comune', 'sup_com_ha'])['surface_ha_2018'].sum())\ndump_surface_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_arable_lands = [dump_surface_2018_group, dump_surface_2012_group, dump_surface_2006_group, dump_surface_2000_group, dump_surface_1990_group]\nfocus_dump_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_arable_lands)\nfocus_dump_df = focus_dump_df[focus_dump_df['sup_com_ha'] > 0]\nfocus_dump_df.fillna(0, inplace=True)\nfocus_dump_df.insert(loc=3, column='perc_1990', value=round(focus_dump_df.surface_ha_1990 / focus_dump_df.sup_com_ha, 4) * 100)\nfocus_dump_df.insert(loc=4, column='perc_2000', value=round(focus_dump_df.surface_ha_2000 / focus_dump_df.sup_com_ha, 4) * 100)\nfocus_dump_df.insert(loc=5, column='perc_2006', value=round(focus_dump_df.surface_ha_2006 / focus_dump_df.sup_com_ha, 4) * 100)\nfocus_dump_df.insert(loc=6, column='perc_2012', value=round(focus_dump_df.surface_ha_2012 / focus_dump_df.sup_com_ha, 4) * 100)\nfocus_dump_df.insert(loc=7, column='perc_2018', value=round(focus_dump_df.surface_ha_2018 / focus_dump_df.sup_com_ha, 4) * 100)\nfocus_dump_df.insert(loc=8, column='Perc.Diff. | 2018-2000', value=(focus_dump_df.perc_2018 - focus_dump_df.perc_2000))\nfocus_dump_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nfocus_dump_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      4\n      63034.0\n      Giugliano in Campania\n      9463.207795\n      0.01\n      0.01\n      0.16\n      1.89\n      1.89\n      1.88\n      179.2958\n      179.2958\n      14.7856\n      0.9317\n      0.9314\n    \n    \n      1\n      61085.0\n      San Tammaro\n      3696.678415\n      0.00\n      0.00\n      0.00\n      2.09\n      1.63\n      1.63\n      60.2521\n      77.3722\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      3\n      63011.0\n      Caivano\n      2722.117368\n      1.34\n      0.00\n      1.32\n      1.32\n      1.32\n      1.32\n      35.9863\n      35.9863\n      35.9863\n      0.0000\n      36.5076\n    \n    \n      2\n      61099.0\n      Villa Literno\n      6182.490260\n      0.00\n      0.00\n      1.15\n      1.19\n      1.19\n      1.19\n      73.7065\n      73.7065\n      70.9893\n      0.0000\n      0.0000\n    \n    \n      0\n      61084.0\n      Santa Maria la Fossa\n      2972.966831\n      0.00\n      0.00\n      0.00\n      1.56\n      1.07\n      1.07\n      31.7251\n      46.3154\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      5\n      64005.0\n      Ariano Irpino\n      18673.653095\n      0.00\n      0.00\n      0.14\n      0.14\n      0.14\n      0.14\n      25.9872\n      25.9872\n      25.9872\n      0.0000\n      0.0000\n    \n  \n\n\n\n\nQui abbiamo le più grandi discariche campane, cresciute con la crisi dei rifiuti di inizio anni 2000.\n\n\n2.3.6 Aree verdi urbane\n\n\nCode\n# Dati 1990\ngreen_urban_surface_1990 = focus_1990_group[focus_1990_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_1990_group = pd.DataFrame(green_urban_surface_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\ngreen_urban_surface_1990_group.reset_index(inplace=True)\n\n# Dati 2000\ngreen_urban_surface_2000 = focus_2000_group[focus_2000_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_2000_group = pd.DataFrame(green_urban_surface_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\ngreen_urban_surface_2000_group.reset_index(inplace=True)\n\n# Dati 2006\ngreen_urban_surface_2006 = focus_2006_group[focus_2006_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_2006_group = pd.DataFrame(green_urban_surface_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\ngreen_urban_surface_2006_group.reset_index(inplace=True)\n\n# Dati 2012\ngreen_urban_surface_2012 = focus_2012_group[focus_2012_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_2012_group = pd.DataFrame(green_urban_surface_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\ngreen_urban_surface_2012_group.reset_index(inplace=True)\n\n# Dati 2018\ngreen_urban_surface_2018 = focus_2018_group[focus_2018_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_2018_group = pd.DataFrame(green_urban_surface_2018.groupby(['pro_com', 'comune', 'sup_com_ha'])['surface_ha_2018'].sum())\ngreen_urban_surface_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_green_urban = [green_urban_surface_2018_group, green_urban_surface_2012_group, green_urban_surface_2006_group, green_urban_surface_2000_group, green_urban_surface_1990_group]\nfocus_green_urban_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_green_urban)\nfocus_green_urban_df = focus_green_urban_df[focus_green_urban_df['sup_com_ha'] > 0]\nfocus_green_urban_df.fillna(0, inplace=True)\nfocus_green_urban_df.insert(loc=3, column='perc_1990', value=round(focus_green_urban_df.surface_ha_1990 / focus_green_urban_df.sup_com_ha, 4) * 100)\nfocus_green_urban_df.insert(loc=4, column='perc_2000', value=round(focus_green_urban_df.surface_ha_2000 / focus_green_urban_df.sup_com_ha, 4) * 100)\nfocus_green_urban_df.insert(loc=5, column='perc_2006', value=round(focus_green_urban_df.surface_ha_2006 / focus_green_urban_df.sup_com_ha, 4) * 100)\nfocus_green_urban_df.insert(loc=6, column='perc_2012', value=round(focus_green_urban_df.surface_ha_2012 / focus_green_urban_df.sup_com_ha, 4) * 100)\nfocus_green_urban_df.insert(loc=7, column='perc_2018', value=round(focus_green_urban_df.surface_ha_2018 / focus_green_urban_df.sup_com_ha, 4) * 100)\nfocus_green_urban_df.insert(loc=8, column='Perc.Diff. | 2018-2000', value=(focus_green_urban_df.perc_2018 - focus_green_urban_df.perc_2000))\nfocus_green_urban_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nfocus_green_urban_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      3\n      62062.0\n      San Lorenzo Maggiore\n      1629.550368\n      0.00\n      0.00\n      0.00\n      0.00\n      11.89\n      11.89\n      193.6792\n      0.0000\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      2\n      62037.0\n      Guardia Sanframondi\n      2109.748292\n      0.00\n      0.00\n      0.00\n      0.00\n      9.63\n      9.63\n      203.2666\n      0.0000\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      8\n      65078.0\n      Nocera Inferiore\n      2094.467250\n      0.00\n      0.00\n      1.91\n      1.91\n      1.91\n      1.91\n      39.9739\n      39.9739\n      39.9740\n      0.0000\n      0.0000\n    \n    \n      6\n      63060.0\n      Pozzuoli\n      4343.389600\n      0.96\n      0.61\n      0.68\n      0.68\n      0.68\n      0.07\n      29.4516\n      29.4516\n      29.4517\n      26.6666\n      41.7480\n    \n    \n      0\n      61018.0\n      Casagiove\n      635.694991\n      0.79\n      0.79\n      0.79\n      0.79\n      0.79\n      0.00\n      5.0499\n      5.0499\n      5.0499\n      5.0499\n      5.0496\n    \n    \n      1\n      61022.0\n      Caserta\n      5406.845910\n      2.50\n      2.50\n      2.50\n      2.50\n      2.50\n      0.00\n      135.0386\n      135.0386\n      135.0386\n      135.0386\n      135.0388\n    \n    \n      5\n      63059.0\n      Portici\n      460.130721\n      0.00\n      12.99\n      12.99\n      12.99\n      12.99\n      0.00\n      59.7546\n      59.7546\n      59.7546\n      59.7546\n      0.0000\n    \n    \n      7\n      63064.0\n      Ercolano\n      1989.359843\n      0.00\n      0.21\n      0.21\n      0.21\n      0.21\n      0.00\n      4.2403\n      4.2403\n      4.2403\n      4.2404\n      0.0000\n    \n    \n      4\n      63049.0\n      Napoli\n      11894.407425\n      3.15\n      4.44\n      4.47\n      4.26\n      4.26\n      -0.18\n      506.6039\n      506.6039\n      531.7766\n      527.6737\n      374.2016"
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#grafici-1",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#grafici-1",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "3.2 Grafici",
    "text": "3.2 Grafici\nMi limiterò a commentare solo la analisi a scala nazionale perchè quelle a scala comunale hanno risultati che, sebbene intuibili dal punto di vista delle variazioni, hanno una valenza territoriale molto forte(come lo è stato per la Campania) e non conoscendo tutti quei territori preferisco lasciare a chi è del posto le considerazioni del caso.\n\n3.2.1 Grafici per il livello 1\n\n\nCode\nlvl1_naz = [clc1990_label1, clc2000_label1, clc2006_label1, clc2012_label1, clc2018_label1]\nlvl1_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['CORINE Land Cover - level 1'], how='outer'), lvl1_naz)\nlvl1_naz_df.insert(loc=6, column='Surf.Diff. | 2018-1990', value=(lvl1_naz_df.surface_ha_2018 - lvl1_naz_df.surface_ha_1990))\nlvl1_naz_df.fillna(0, inplace=True)\nlvl1_naz_df.set_index('CORINE Land Cover - level 1', inplace=True)\nlvl1_naz_df.rename(columns={'surface_ha_1990': '1990', 'surface_ha_2000': '2000', 'surface_ha_2006': '2006', 'surface_ha_2012': '2012', 'surface_ha_2018': '2018'}, inplace=True)\nlvl1_naz_df\n\n\n\n\n\n\n  \n    \n      \n      1990\n      2000\n      2006\n      2012\n      2018\n      Surf.Diff. | 2018-1990\n    \n    \n      CORINE Land Cover - level 1\n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Agricultural areas\n      1.582623e+07\n      1.580692e+07\n      1.578178e+07\n      1.569692e+07\n      1.568826e+07\n      -137975.0803\n    \n    \n      Artificial surfaces\n      1.347486e+06\n      1.443652e+06\n      1.562164e+06\n      1.646988e+06\n      1.655775e+06\n      308288.5459\n    \n    \n      Forest and semi natural areas\n      1.263937e+07\n      1.256172e+07\n      1.246520e+07\n      1.246121e+07\n      1.245564e+07\n      -183733.2104\n    \n    \n      Water bodies\n      3.122569e+05\n      3.152274e+05\n      3.145802e+05\n      3.228559e+05\n      3.226620e+05\n      10405.1059\n    \n    \n      Wetlands\n      6.897894e+04\n      6.780469e+04\n      7.179663e+04\n      6.758186e+04\n      6.796058e+04\n      -1018.3605\n    \n  \n\n\n\n\n\n\nCode\nfig1_naz = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig_naz = GridSpec(nrows=1, ncols=1, figure=fig1_naz, hspace=0.35)\nax_naz = fig1_naz.add_subplot(sub_fig_naz[0, 0])\nlvl1_naz_df.plot.bar(ax=ax_naz, rot=0)\n\nax_naz.yaxis.set_label_text('ha')\nax_naz.set_xlabel('')\n\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2d08eedc0>\n\n\n\n\n\nIn questo livello di CLC si nota una certa somiglianza con ciò che abbiamo visto per la Campania: aree artificiali in aumento, aree forestate ed agricole in regressione.\n\n\n3.2.2 Grafici per il livello 2\n\n\nCode\nlvl2_naz = [clc1990_label2, clc2000_label2, clc2006_label2, clc2012_label2, clc2018_label2]\nlvl2_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['CORINE Land Cover - level 2'], how='outer'), lvl2_naz)\nlvl2_naz_df.insert(loc=6, column='Surf.Diff. | 2000-1990', value=(lvl2_naz_df.surface_ha_2000 - lvl2_naz_df.surface_ha_1990))\nlvl2_naz_df.insert(loc=7, column='Surf.Diff. | 2006-2000', value=(lvl2_naz_df.surface_ha_2006 - lvl2_naz_df.surface_ha_2000))\nlvl2_naz_df.insert(loc=8, column='Surf.Diff. | 2012-2006', value=(lvl2_naz_df.surface_ha_2012 - lvl2_naz_df.surface_ha_2006))\nlvl2_naz_df.insert(loc=9, column='Surf.Diff. | 2018-2012', value=(lvl2_naz_df.surface_ha_2018 - lvl2_naz_df.surface_ha_2012))\nlvl2_naz_df.insert(loc=9, column='Surf.Diff. | 2018-1990', value=(lvl2_naz_df.surface_ha_2018 - lvl2_naz_df.surface_ha_1990))\nlvl2_naz_df.fillna(0, inplace=True)\nlvl2_naz_df.set_index('CORINE Land Cover - level 2', inplace=True)\nlvl2_naz_df = lvl2_naz_df[['Surf.Diff. | 2000-1990', 'Surf.Diff. | 2006-2000', 'Surf.Diff. | 2012-2006', 'Surf.Diff. | 2018-2012', 'Surf.Diff. | 2018-1990']]\nlvl2_naz_df\n\n\n\n\n\n\n  \n    \n      \n      Surf.Diff. | 2000-1990\n      Surf.Diff. | 2006-2000\n      Surf.Diff. | 2012-2006\n      Surf.Diff. | 2018-2012\n      Surf.Diff. | 2018-1990\n    \n    \n      CORINE Land Cover - level 2\n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Arable land\n      55207.0658\n      -10271.7226\n      -90231.5817\n      -12360.8275\n      -57657.0660\n    \n    \n      Artificial, non-agricultural vegetated areas\n      5554.0023\n      4316.9704\n      4861.1250\n      662.4738\n      15394.5715\n    \n    \n      Forests\n      42767.2886\n      86747.2016\n      -16412.5022\n      -6762.5701\n      106339.4179\n    \n    \n      Heterogeneous agricultural areas\n      3141.8711\n      -80525.4734\n      48412.0084\n      -629.6565\n      -29601.2504\n    \n    \n      Industrial, commercial and transport units\n      34135.2946\n      44503.3245\n      38255.6049\n      6654.8030\n      123549.0270\n    \n    \n      Inland waters\n      683.7863\n      1188.3191\n      3352.2153\n      -24.4133\n      5199.9074\n    \n    \n      Inland wetlands\n      1132.9251\n      1989.9128\n      227.6485\n      252.6951\n      3603.1815\n    \n    \n      Marine waters\n      2286.6599\n      -1835.4393\n      4923.4371\n      -169.4592\n      5205.1985\n    \n    \n      Maritime wetlands\n      -2307.1754\n      2002.0212\n      -4442.4099\n      126.0221\n      -4621.5420\n    \n    \n      Mine, dump and construction sites\n      4408.4545\n      733.9772\n      1327.1069\n      -373.1135\n      6096.4251\n    \n    \n      Open spaces with little or no vegetation\n      -114342.2191\n      -78796.3505\n      650778.9658\n      24555.2063\n      482195.6025\n    \n    \n      Pastures\n      -28097.0989\n      2041.0694\n      -15847.9600\n      -97.1172\n      -42001.1067\n    \n    \n      Permanent crops\n      -49565.7883\n      63620.5499\n      -27194.6323\n      4424.2135\n      -8715.6572\n    \n    \n      Scrub and/or herbaceous vegetation associations\n      -6080.8338\n      -104468.5696\n      -638349.3736\n      -23369.4538\n      -772268.2308\n    \n    \n      Urban fabric\n      52068.0313\n      68957.2822\n      40380.6911\n      1842.5177\n      163248.5223\n    \n  \n\n\n\n\n\n\nCode\nfig2_naz = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig_naz = GridSpec(nrows=1, ncols=1, figure=fig2_naz, hspace=0.35)\nax_naz = fig2_naz.add_subplot(sub_fig_naz[0, 0])\nlvl2_naz_df.plot.bar(ax=ax_naz, rot=0)\n\nax_naz.yaxis.set_label_text('ha')\nax_naz.set_xlabel('')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2cdb88ee0>\n\n\n\n\n\nAnche qui c’è una certa somiglianza con ciò che accade in Campania.\n\n\n3.2.3 Grafici per il livello 3\n\n\nCode\nlvl3_naz = [clc1990_label3, clc2000_label3, clc2006_label3, clc2012_label3, clc2018_label3]\nlvl3_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['CORINE Land Cover - level 3'], how='outer'), lvl3_naz)\nlvl3_naz_df.insert(loc=6, column='Surf.Diff. | 2000-1990', value=(lvl3_naz_df.surface_ha_2000 - lvl3_naz_df.surface_ha_1990))\nlvl3_naz_df.insert(loc=7, column='Surf.Diff. | 2006-2000', value=(lvl3_naz_df.surface_ha_2006 - lvl3_naz_df.surface_ha_2000))\nlvl3_naz_df.insert(loc=8, column='Surf.Diff. | 2012-2006', value=(lvl3_naz_df.surface_ha_2012 - lvl3_naz_df.surface_ha_2006))\nlvl3_naz_df.insert(loc=9, column='Surf.Diff. | 2018-2012', value=(lvl3_naz_df.surface_ha_2018 - lvl3_naz_df.surface_ha_2012))\nlvl3_naz_df.insert(loc=9, column='Surf.Diff. | 2018-1990', value=(lvl3_naz_df.surface_ha_2018 - lvl3_naz_df.surface_ha_1990))\nlvl3_naz_df.set_index('CORINE Land Cover - level 3', inplace=True)\nlvl3_naz_df.fillna(0, inplace=True)\nlvl3_naz_df\n\n\n\n\n\n\n  \n    \n      \n      surface_ha_1990\n      surface_ha_2000\n      surface_ha_2006\n      surface_ha_2012\n      surface_ha_2018\n      Surf.Diff. | 2000-1990\n      Surf.Diff. | 2006-2000\n      Surf.Diff. | 2012-2006\n      Surf.Diff. | 2018-1990\n      Surf.Diff. | 2018-2012\n    \n    \n      CORINE Land Cover - level 3\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Agro-forestry areas\n      1.875953e+05\n      1.752959e+05\n      1.703568e+05\n      1.690878e+05\n      1.688554e+05\n      -12299.3238\n      -4939.1076\n      -1269.0034\n      -18739.8517\n      -232.4169\n    \n    \n      Airports\n      2.061481e+04\n      2.141885e+04\n      2.264239e+04\n      2.283700e+04\n      2.288896e+04\n      804.0433\n      1223.5421\n      194.6092\n      2274.1471\n      51.9525\n    \n    \n      Annual crops associated with permanent crops\n      3.948806e+05\n      3.827196e+05\n      2.056113e+05\n      2.313810e+05\n      2.311865e+05\n      -12160.9920\n      -177108.3339\n      25769.7259\n      -163694.1511\n      -194.5511\n    \n    \n      Bare rocks\n      4.823748e+05\n      4.475284e+05\n      4.351080e+05\n      4.347627e+05\n      4.348511e+05\n      -34846.4100\n      -12420.4185\n      -345.3238\n      -47523.7192\n      88.4331\n    \n    \n      Beaches, dunes, sands\n      8.237502e+04\n      7.823843e+04\n      7.584526e+04\n      8.212965e+04\n      8.230547e+04\n      -4136.5882\n      -2393.1717\n      6284.3971\n      -69.5490\n      175.8138\n    \n    \n      Broad-leaved forest\n      5.477418e+06\n      5.490370e+06\n      5.558573e+06\n      5.681647e+06\n      5.674656e+06\n      12952.5900\n      68202.4264\n      123074.4047\n      197238.3262\n      -6991.0949\n    \n    \n      Burnt areas\n      3.688807e+03\n      7.726265e+03\n      3.048895e+03\n      1.040139e+04\n      2.990311e+04\n      4037.4575\n      -4677.3703\n      7352.4912\n      26214.3071\n      19501.7287\n    \n    \n      Coastal lagoons\n      9.441910e+04\n      9.670576e+04\n      9.487032e+04\n      9.993340e+04\n      9.976394e+04\n      2286.6592\n      -1835.4391\n      5063.0745\n      5344.8354\n      -169.4592\n    \n    \n      Complex cultivation patterns\n      2.208152e+06\n      2.171692e+06\n      2.202763e+06\n      2.204137e+06\n      2.198169e+06\n      -36460.6309\n      31070.7372\n      1374.0283\n      -9983.7268\n      -5967.8614\n    \n    \n      Coniferous forest\n      1.322878e+06\n      1.289463e+06\n      1.298869e+06\n      1.290058e+06\n      1.290082e+06\n      -33414.6622\n      9406.4133\n      -8811.0217\n      -32795.3931\n      23.8775\n    \n    \n      Construction sites\n      6.608806e+03\n      5.547377e+03\n      5.315068e+03\n      4.014755e+03\n      3.311441e+03\n      -1061.4296\n      -232.3081\n      -1300.3139\n      -3297.3650\n      -703.3134\n    \n    \n      Continuous urban fabric\n      1.465191e+05\n      1.436331e+05\n      1.408018e+05\n      1.588690e+05\n      1.589181e+05\n      -2886.0313\n      -2831.2332\n      18067.1411\n      12399.0267\n      49.1501\n    \n    \n      Discontinuous urban fabric\n      8.850498e+05\n      9.400039e+05\n      1.011792e+06\n      1.034106e+06\n      1.035899e+06\n      54954.0626\n      71788.5154\n      22313.5500\n      150849.4956\n      1793.3676\n    \n    \n      Dump sites\n      1.813232e+03\n      1.799607e+03\n      2.339274e+03\n      4.358176e+03\n      4.343699e+03\n      -13.6242\n      539.6663\n      2018.9020\n      2530.4679\n      -14.4762\n    \n    \n      Estuaries\n      2.468468e+02\n      2.468475e+02\n      2.468473e+02\n      1.072099e+02\n      1.072099e+02\n      0.0007\n      -0.0002\n      -139.6374\n      -139.6369\n      0.0000\n    \n    \n      Fruit trees and berry plantations\n      3.995981e+05\n      4.020846e+05\n      4.244182e+05\n      3.778050e+05\n      3.775497e+05\n      2486.5267\n      22333.5844\n      -46613.1517\n      -22048.3769\n      -255.3363\n    \n    \n      Glaciers and perpetual snow\n      5.296383e+04\n      4.158192e+04\n      3.930079e+04\n      3.905328e+04\n      3.879693e+04\n      -11381.9118\n      -2281.1240\n      -247.5108\n      -14166.9013\n      -256.3547\n    \n    \n      Green urban areas\n      1.029782e+04\n      1.003812e+04\n      1.107030e+04\n      1.095570e+04\n      1.134447e+04\n      -259.6952\n      1032.1803\n      -114.6074\n      1046.6534\n      388.7757\n    \n    \n      Industrial or commercial units\n      1.935121e+05\n      2.272337e+05\n      2.679521e+05\n      3.023072e+05\n      3.069798e+05\n      33721.5546\n      40718.4407\n      34355.0673\n      113467.6588\n      4672.5962\n    \n    \n      Inland marshes\n      1.581604e+04\n      1.662644e+04\n      1.856711e+04\n      1.879475e+04\n      1.904745e+04\n      810.4000\n      1940.6703\n      227.6486\n      3231.4140\n      252.6951\n    \n    \n      Land principally occupied by agriculture, with significant areas of natural vegetation\n      1.988074e+06\n      2.052137e+06\n      2.122588e+06\n      2.145125e+06\n      2.150890e+06\n      64062.8178\n      70451.2309\n      22537.2576\n      162816.4792\n      5765.1729\n    \n    \n      Mineral extraction sites\n      4.311295e+04\n      4.859646e+04\n      4.902308e+04\n      4.963160e+04\n      4.997628e+04\n      5483.5083\n      426.6190\n      608.5188\n      6863.3222\n      344.6761\n    \n    \n      Mixed forest\n      1.031295e+06\n      1.094524e+06\n      1.103663e+06\n      9.729868e+05\n      9.731915e+05\n      63229.3608\n      9138.3619\n      -130675.8852\n      -58103.5152\n      204.6473\n    \n    \n      Moors and heathland\n      2.759264e+05\n      1.444961e+05\n      1.486737e+05\n      1.640305e+05\n      1.640305e+05\n      -131430.3790\n      4177.6625\n      15356.7528\n      -111895.9638\n      -0.0001\n    \n    \n      Natural grasslands\n      1.452501e+06\n      1.471513e+06\n      1.384153e+06\n      7.696045e+05\n      7.621346e+05\n      19011.7396\n      -87360.1247\n      -614548.1465\n      -690366.4484\n      -7469.9168\n    \n    \n      Non-irrigated arable land\n      8.075700e+06\n      8.119901e+06\n      8.102169e+06\n      7.985138e+06\n      7.970837e+06\n      44200.6553\n      -17731.6848\n      -117031.0990\n      -104863.2290\n      -14301.1005\n    \n    \n      Olive groves\n      1.263777e+06\n      1.218749e+06\n      1.211951e+06\n      1.190108e+06\n      1.189869e+06\n      -45028.7668\n      -6797.4286\n      -21842.8690\n      -73908.7495\n      -239.6851\n    \n    \n      Pastures\n      4.560942e+05\n      4.279971e+05\n      4.300382e+05\n      4.141902e+05\n      4.140931e+05\n      -28097.0989\n      2041.0694\n      -15847.9600\n      -42001.1067\n      -97.1172\n    \n    \n      Peat bogs\n      3.790290e+01\n      3.604280e+02\n      4.096705e+02\n      4.096704e+02\n      4.096704e+02\n      322.5251\n      49.2425\n      -0.0001\n      371.7675\n      0.0000\n    \n    \n      Permanently irrigated land\n      4.081855e+04\n      4.092019e+04\n      4.131372e+04\n      6.817000e+04\n      6.996687e+04\n      101.6408\n      393.5360\n      26856.2729\n      29148.3233\n      1796.8736\n    \n    \n      Port areas\n      9.735064e+03\n      1.054597e+04\n      1.073864e+04\n      1.059175e+04\n      1.070018e+04\n      810.9039\n      192.6727\n      -146.8916\n      965.1133\n      108.4283\n    \n    \n      Rice fields\n      2.760486e+05\n      2.869534e+05\n      2.940198e+05\n      2.939631e+05\n      2.941065e+05\n      10904.7697\n      7066.4262\n      -56.7556\n      18057.8397\n      143.3994\n    \n    \n      Road and rail networks and associated land\n      1.253256e+04\n      1.133135e+04\n      1.370002e+04\n      1.755284e+04\n      1.937467e+04\n      -1201.2072\n      2368.6690\n      3852.8200\n      6842.1078\n      1821.8260\n    \n    \n      Salines\n      1.000881e+04\n      9.634204e+03\n      9.372738e+03\n      9.278927e+03\n      9.278927e+03\n      -374.6057\n      -261.4668\n      -93.8107\n      -729.8832\n      0.0000\n    \n    \n      Salt marshes\n      4.311619e+04\n      4.118362e+04\n      4.344711e+04\n      3.909851e+04\n      3.922454e+04\n      -1932.5697\n      2263.4880\n      -4348.5992\n      -3891.6588\n      126.0221\n    \n    \n      Sclerophyllous vegetation\n      9.609517e+05\n      1.006894e+06\n      1.015687e+06\n      1.014778e+06\n      1.002021e+06\n      45941.8202\n      8793.0178\n      -908.2755\n      41069.1211\n      -12757.4414\n    \n    \n      Sparsely vegetated areas\n      4.846612e+05\n      4.166465e+05\n      3.596222e+05\n      9.973571e+05\n      1.002403e+06\n      -68014.7666\n      -57024.2660\n      637734.9121\n      517741.4649\n      5045.5854\n    \n    \n      Sport and leisure facilities\n      1.768997e+04\n      2.350367e+04\n      2.678846e+04\n      3.176419e+04\n      3.203789e+04\n      5813.6975\n      3284.7901\n      4975.7324\n      14347.9181\n      273.6981\n    \n    \n      Transitional woodland-shrub\n      1.012338e+06\n      1.072734e+06\n      1.042655e+06\n      1.004405e+06\n      1.001263e+06\n      60395.9854\n      -30079.1252\n      -38249.7044\n      -11074.9397\n      -3142.0955\n    \n    \n      Vineyards\n      5.354933e+05\n      5.284697e+05\n      5.765541e+05\n      6.178155e+05\n      6.227348e+05\n      -7023.5482\n      48084.3941\n      41261.3884\n      87241.4692\n      4919.2349\n    \n    \n      Water bodies\n      1.681098e+05\n      1.698191e+05\n      1.727610e+05\n      1.755170e+05\n      1.755253e+05\n      1709.2964\n      2941.8555\n      2756.0595\n      7415.4779\n      8.2665\n    \n    \n      Water courses\n      4.948117e+04\n      4.845566e+04\n      4.670212e+04\n      4.729828e+04\n      4.726560e+04\n      -1025.5101\n      -1753.5364\n      596.1558\n      -2215.5705\n      -32.6798\n    \n  \n\n\n\n\n\n\nCode\nfig3_naz = plt.figure(figsize=(20, 10), dpi=100)\nsub_fig_naz = GridSpec(nrows=1, ncols=1, figure=fig3_naz, hspace=0.35)\nax_naz = fig3_naz.add_subplot(sub_fig_naz[0, 0])\nlvl3_df['Surf.Diff. | 2018-1990'].plot.bar(ax=ax_naz, rot=0)\n\nax_naz.yaxis.set_label_text('ha')\nax_naz.set_xlabel('')\n\nplt.xticks(rotation = 90)\nplt.legend(loc='best')\n\n\n<matplotlib.legend.Legend at 0x7fe2d2f7ddc0>\n\n\n\n\n\nPurtroppo il “trend campano” è visibile anche qui. Il fatto è che ciò che accade a scala nazionale si ripete a scala regionale e scommetto anche provinciale in un po’ tutto il territorio italiano."
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#focus-sui-comuni-1",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#focus-sui-comuni-1",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "3.3 Focus sui Comuni",
    "text": "3.3 Focus sui Comuni\n\n\nCode\n# Dati 1990\nfocus_1990_naz = clc1990[['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3', 'surface_ha_1990']]\nfocus_1990_naz.set_index('label3', inplace=True)\nfocus_naz_1990_group = pd.DataFrame(focus_1990_naz.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3'])['surface_ha_1990'].sum())\nfocus_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nfocus_2000_naz = clc2000[['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3', 'surface_ha_2000']]\nfocus_2000_naz.set_index('label3', inplace=True)\nfocus_naz_2000_group = pd.DataFrame(focus_2000_naz.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3'])['surface_ha_2000'].sum())\nfocus_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nfocus_2006_naz = clc2006[['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3', 'surface_ha_2006']]\nfocus_2006_naz.set_index('label3', inplace=True)\nfocus_naz_2006_group = pd.DataFrame(focus_2006_naz.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3'])['surface_ha_2006'].sum())\nfocus_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nfocus_2012_naz = clc2012[['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3', 'surface_ha_2012']]\nfocus_2012_naz.set_index('label3', inplace=True)\nfocus_naz_2012_group = pd.DataFrame(focus_2012_naz.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3'])['surface_ha_2012'].sum())\nfocus_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nfocus_2018_naz = clc2018[['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3', 'surface_ha_2018']]\nfocus_2018_naz.set_index('label3', inplace=True)\nfocus_naz_2018_group = pd.DataFrame(focus_2018_naz.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha', 'label3'])['surface_ha_2018'].sum())\nfocus_naz_2018_group.reset_index(inplace=True)\n\n\n\n\nCode\nfocus_naz_2018_group\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      label3\n      surface_ha_2018\n    \n  \n  \n    \n      0\n      1001.0\n      Agliè\n      Torino\n      Piemonte\n      1314.622087\n      Broad-leaved forest\n      218.6224\n    \n    \n      1\n      1001.0\n      Agliè\n      Torino\n      Piemonte\n      1314.622087\n      Discontinuous urban fabric\n      64.7110\n    \n    \n      2\n      1001.0\n      Agliè\n      Torino\n      Piemonte\n      1314.622087\n      Green urban areas\n      51.8549\n    \n    \n      3\n      1001.0\n      Agliè\n      Torino\n      Piemonte\n      1314.622087\n      Industrial or commercial units\n      25.4731\n    \n    \n      4\n      1001.0\n      Agliè\n      Torino\n      Piemonte\n      1314.622087\n      Land principally occupied by agriculture, with...\n      24.4334\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      64052\n      111107.0\n      Villaspeciosa\n      Sud Sardegna\n      Sardegna\n      2719.371313\n      Industrial or commercial units\n      25.7592\n    \n    \n      64053\n      111107.0\n      Villaspeciosa\n      Sud Sardegna\n      Sardegna\n      2719.371313\n      Land principally occupied by agriculture, with...\n      216.6219\n    \n    \n      64054\n      111107.0\n      Villaspeciosa\n      Sud Sardegna\n      Sardegna\n      2719.371313\n      Non-irrigated arable land\n      1675.3119\n    \n    \n      64055\n      111107.0\n      Villaspeciosa\n      Sud Sardegna\n      Sardegna\n      2719.371313\n      Sclerophyllous vegetation\n      44.4901\n    \n    \n      64056\n      111107.0\n      Villaspeciosa\n      Sud Sardegna\n      Sardegna\n      2719.371313\n      Water bodies\n      176.2525\n    \n  \n\n64057 rows × 7 columns\n\n\n\n\n3.3.1 Aree artificiali\nI gruppi 1.1 ed 1.2 della CLC\n\n\nCode\n# Dati 1990\nartificial_surface_naz_1990 = focus_naz_1990_group[focus_naz_1990_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_naz_1990_group = pd.DataFrame(artificial_surface_naz_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\nartificial_surface_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nartificial_surface_naz_2000 = focus_naz_2000_group[focus_naz_2000_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_naz_2000_group = pd.DataFrame(artificial_surface_naz_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\nartificial_surface_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nartificial_surface_naz_2006 = focus_naz_2006_group[focus_naz_2006_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_naz_2006_group = pd.DataFrame(artificial_surface_naz_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\nartificial_surface_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nartificial_surface_naz_2012 = focus_naz_2012_group[focus_naz_2012_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_naz_2012_group = pd.DataFrame(artificial_surface_naz_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\nartificial_surface_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nartificial_surface_naz_2018 = focus_naz_2018_group[focus_naz_2018_group['label3'].isin(['Continuous urban fabric', 'Discontinuous urban fabric', 'Industrial or commercial units', 'Road and rail networks and associated land', 'Port areas', 'Airports'])]\nartificial_surface_naz_2018_group = pd.DataFrame(artificial_surface_naz_2018.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha'])['surface_ha_2018'].sum())\nartificial_surface_naz_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_artificial_naz = [artificial_surface_naz_2018_group, artificial_surface_naz_2012_group, artificial_surface_naz_2006_group, artificial_surface_naz_2000_group, artificial_surface_naz_1990_group]\nfocus_artificial_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_artificial_naz)\nfocus_artificial_naz_df = focus_artificial_naz_df[focus_artificial_naz_df['sup_com_ha'] > 0]\nfocus_artificial_naz_df.fillna(0, inplace=True)\nfocus_artificial_naz_df.insert(loc=5, column='perc_1990', value=round(focus_artificial_naz_df.surface_ha_1990 / focus_artificial_naz_df.sup_com_ha, 4) * 100)\nfocus_artificial_naz_df.insert(loc=6, column='perc_2000', value=round(focus_artificial_naz_df.surface_ha_2000 / focus_artificial_naz_df.sup_com_ha, 4) * 100)\nfocus_artificial_naz_df.insert(loc=7, column='perc_2006', value=round(focus_artificial_naz_df.surface_ha_2006 / focus_artificial_naz_df.sup_com_ha, 4) * 100)\nfocus_artificial_naz_df.insert(loc=8, column='perc_2012', value=round(focus_artificial_naz_df.surface_ha_2012 / focus_artificial_naz_df.sup_com_ha, 4) * 100)\nfocus_artificial_naz_df.insert(loc=9, column='perc_2018', value=round(focus_artificial_naz_df.surface_ha_2018 / focus_artificial_naz_df.sup_com_ha, 4) * 100)\nfocus_artificial_naz_df.insert(loc=10, column='Perc.Diff. | 2018-2000', value=(focus_artificial_naz_df.perc_2018 - focus_artificial_naz_df.perc_2000))\nfocus_artificial_naz_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nfocus_artificial_naz_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      899\n      12023.0\n      Brunello\n      Varese\n      Lombardia\n      161.998833\n      60.01\n      60.01\n      44.49\n      44.49\n      44.49\n      -15.52\n      72.0654\n      72.0654\n      72.0655\n      97.2179\n      97.2181\n    \n    \n      4298\n      63036.0\n      Grumo Nevano\n      Napoli\n      Campania\n      287.688759\n      47.45\n      64.93\n      64.93\n      51.31\n      51.31\n      -13.62\n      147.6065\n      147.6065\n      186.8019\n      186.8019\n      136.5066\n    \n    \n      882\n      12006.0\n      Azzate\n      Varese\n      Lombardia\n      450.621469\n      46.75\n      46.75\n      38.01\n      38.01\n      38.01\n      -8.74\n      171.2779\n      171.2779\n      171.2779\n      210.6471\n      210.6469\n    \n    \n      953\n      12080.0\n      Gornate Olona\n      Varese\n      Lombardia\n      469.573308\n      31.05\n      31.05\n      22.32\n      22.32\n      22.32\n      -8.73\n      104.8177\n      104.8177\n      104.8177\n      145.8012\n      145.8012\n    \n    \n      4329\n      63067.0\n      San Giorgio a Cremano\n      Napoli\n      Campania\n      415.383936\n      60.96\n      76.57\n      68.51\n      68.51\n      68.51\n      -8.06\n      284.5767\n      284.5767\n      284.5768\n      318.0615\n      253.2174\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      372\n      3114.0\n      Paruzzaro\n      Novara\n      Piemonte\n      522.716138\n      13.89\n      11.57\n      23.24\n      35.11\n      35.11\n      23.54\n      183.5155\n      183.5155\n      121.4790\n      60.5013\n      72.6050\n    \n    \n      5506\n      80097.0\n      San Ferdinando\n      Reggio di Calabria\n      Calabria\n      1419.798819\n      16.31\n      15.22\n      40.20\n      40.20\n      40.20\n      24.98\n      570.7536\n      570.7536\n      570.7535\n      216.1294\n      231.5077\n    \n    \n      257\n      2009.0\n      Balocco\n      Vercelli\n      Piemonte\n      1680.794846\n      10.41\n      0.00\n      2.97\n      28.22\n      28.22\n      28.22\n      474.3195\n      474.3195\n      49.8811\n      0.0000\n      175.0071\n    \n    \n      336\n      3043.0\n      Castelletto sopra Ticino\n      Novara\n      Piemonte\n      1464.109249\n      22.01\n      20.80\n      23.45\n      50.63\n      50.63\n      29.83\n      741.2521\n      741.2521\n      343.3539\n      304.5441\n      322.2282\n    \n    \n      4477\n      65011.0\n      Atrani\n      Salerno\n      Campania\n      12.061182\n      0.00\n      0.00\n      52.01\n      52.01\n      52.01\n      52.01\n      6.2730\n      6.2730\n      6.2730\n      0.0000\n      0.0000\n    \n  \n\n6773 rows × 16 columns\n\n\n\n\n\nCode\n# Superfici in arretramento\nnaz_reduction_artificial_area = focus_artificial_naz_df.iloc[0:10]\nnaz_reduction_artificial_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      899\n      12023.0\n      Brunello\n      Varese\n      Lombardia\n      161.998833\n      60.01\n      60.01\n      44.49\n      44.49\n      44.49\n      -15.52\n      72.0654\n      72.0654\n      72.0655\n      97.2179\n      97.2181\n    \n    \n      4298\n      63036.0\n      Grumo Nevano\n      Napoli\n      Campania\n      287.688759\n      47.45\n      64.93\n      64.93\n      51.31\n      51.31\n      -13.62\n      147.6065\n      147.6065\n      186.8019\n      186.8019\n      136.5066\n    \n    \n      882\n      12006.0\n      Azzate\n      Varese\n      Lombardia\n      450.621469\n      46.75\n      46.75\n      38.01\n      38.01\n      38.01\n      -8.74\n      171.2779\n      171.2779\n      171.2779\n      210.6471\n      210.6469\n    \n    \n      953\n      12080.0\n      Gornate Olona\n      Varese\n      Lombardia\n      469.573308\n      31.05\n      31.05\n      22.32\n      22.32\n      22.32\n      -8.73\n      104.8177\n      104.8177\n      104.8177\n      145.8012\n      145.8012\n    \n    \n      4329\n      63067.0\n      San Giorgio a Cremano\n      Napoli\n      Campania\n      415.383936\n      60.96\n      76.57\n      68.51\n      68.51\n      68.51\n      -8.06\n      284.5767\n      284.5767\n      284.5768\n      318.0615\n      253.2174\n    \n    \n      5710\n      83108.0\n      Torrenova\n      Messina\n      Sicilia\n      1292.677225\n      22.03\n      22.62\n      15.29\n      14.94\n      14.94\n      -7.68\n      193.1105\n      193.1105\n      197.6093\n      292.4331\n      284.7380\n    \n    \n      5708\n      83106.0\n      Terme Vigliatore\n      Messina\n      Sicilia\n      1322.797657\n      25.43\n      25.81\n      19.42\n      18.33\n      18.33\n      -7.48\n      242.5046\n      242.5046\n      256.9306\n      341.4543\n      336.4462\n    \n    \n      801\n      9049.0\n      Pietra Ligure\n      Savona\n      Liguria\n      987.811402\n      34.90\n      34.90\n      34.90\n      27.46\n      27.46\n      -7.44\n      271.2950\n      271.2950\n      344.7029\n      344.7031\n      344.7031\n    \n    \n      1049\n      13058.0\n      Castelmarte\n      Como\n      Lombardia\n      197.225522\n      47.17\n      47.17\n      39.83\n      39.83\n      39.83\n      -7.34\n      78.5500\n      78.5500\n      78.5500\n      93.0399\n      93.0399\n    \n    \n      4294\n      63032.0\n      Frattamaggiore\n      Napoli\n      Campania\n      538.816178\n      58.54\n      71.14\n      72.46\n      63.97\n      63.97\n      -7.17\n      344.6705\n      344.6705\n      390.4469\n      383.2980\n      315.4185\n    \n  \n\n\n\n\n\n\nCode\n# Superfici in avanzamento\nnaz_increase_artificial_area = focus_artificial_naz_df.iloc[-10:]\nnaz_increase_artificial_area.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nnaz_increase_artificial_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      4477\n      65011.0\n      Atrani\n      Salerno\n      Campania\n      12.061182\n      0.00\n      0.00\n      52.01\n      52.01\n      52.01\n      52.01\n      6.2730\n      6.2730\n      6.2730\n      0.0000\n      0.0000\n    \n    \n      336\n      3043.0\n      Castelletto sopra Ticino\n      Novara\n      Piemonte\n      1464.109249\n      22.01\n      20.80\n      23.45\n      50.63\n      50.63\n      29.83\n      741.2521\n      741.2521\n      343.3539\n      304.5441\n      322.2282\n    \n    \n      257\n      2009.0\n      Balocco\n      Vercelli\n      Piemonte\n      1680.794846\n      10.41\n      0.00\n      2.97\n      28.22\n      28.22\n      28.22\n      474.3195\n      474.3195\n      49.8811\n      0.0000\n      175.0071\n    \n    \n      5506\n      80097.0\n      San Ferdinando\n      Reggio di Calabria\n      Calabria\n      1419.798819\n      16.31\n      15.22\n      40.20\n      40.20\n      40.20\n      24.98\n      570.7536\n      570.7536\n      570.7535\n      216.1294\n      231.5077\n    \n    \n      372\n      3114.0\n      Paruzzaro\n      Novara\n      Piemonte\n      522.716138\n      13.89\n      11.57\n      23.24\n      35.11\n      35.11\n      23.54\n      183.5155\n      183.5155\n      121.4790\n      60.5013\n      72.6050\n    \n    \n      5705\n      83103.0\n      Valdina\n      Messina\n      Sicilia\n      260.160806\n      16.64\n      16.64\n      35.93\n      39.55\n      39.55\n      22.91\n      102.8957\n      102.8957\n      93.4653\n      43.3003\n      43.3026\n    \n    \n      371\n      3112.0\n      Orta San Giulio\n      Novara\n      Piemonte\n      664.998756\n      0.00\n      0.00\n      0.00\n      22.62\n      22.62\n      22.62\n      150.3928\n      150.3928\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      4287\n      63025.0\n      Castello di Cisterna\n      Napoli\n      Campania\n      392.135970\n      21.89\n      46.04\n      68.31\n      68.31\n      68.31\n      22.27\n      267.8514\n      267.8514\n      267.8514\n      180.5292\n      85.8311\n    \n    \n      6271\n      96083.0\n      Zumaglia\n      Biella\n      Piemonte\n      261.365071\n      14.82\n      4.43\n      4.43\n      26.59\n      26.59\n      22.16\n      69.5047\n      69.5047\n      11.5807\n      11.5807\n      38.7374\n    \n    \n      3499\n      46013.0\n      Forte dei Marmi\n      Lucca\n      Toscana\n      918.715130\n      56.53\n      59.08\n      63.30\n      80.45\n      80.45\n      21.37\n      739.1208\n      739.1208\n      581.5429\n      542.7534\n      519.3559\n    \n  \n\n\n\n\n\n\n3.3.2 Aree forestate\nIl gruppo 3.1 della CLC\n\n\nCode\n# Dati 1990\nforest_surface_naz_1990 = focus_naz_1990_group[focus_naz_1990_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_naz_1990_group = pd.DataFrame(forest_surface_naz_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\nforest_surface_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nforest_surface_naz_2000 = focus_naz_2000_group[focus_naz_2000_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_naz_2000_group = pd.DataFrame(forest_surface_naz_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\nforest_surface_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nforest_surface_naz_2006 = focus_naz_2006_group[focus_naz_2006_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_naz_2006_group = pd.DataFrame(forest_surface_naz_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\nforest_surface_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nforest_surface_naz_2012 = focus_naz_2012_group[focus_naz_2012_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_naz_2012_group = pd.DataFrame(forest_surface_naz_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\nforest_surface_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nforest_surface_naz_2018 = focus_naz_2018_group[focus_naz_2018_group['label3'].isin(['Broad-leaved forest', 'Coniferous forest', 'Mixed forest'])]\nforest_surface_naz_2018_group = pd.DataFrame(forest_surface_naz_2018.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha'])['surface_ha_2018'].sum())\nforest_surface_naz_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_forest_naz = [forest_surface_naz_2018_group, forest_surface_naz_2012_group, forest_surface_naz_2006_group, forest_surface_naz_2000_group, forest_surface_naz_1990_group]\nfocus_forest_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_forest_naz)\nfocus_forest_naz_df = focus_forest_naz_df[focus_forest_naz_df['sup_com_ha'] > 0]\nfocus_forest_naz_df.fillna(0, inplace=True)\nfocus_forest_naz_df.insert(loc=5, column='perc_1990', value=round(focus_forest_naz_df.surface_ha_1990 / focus_forest_naz_df.sup_com_ha, 4) * 100)\nfocus_forest_naz_df.insert(loc=6, column='perc_2000', value=round(focus_forest_naz_df.surface_ha_2000 / focus_forest_naz_df.sup_com_ha, 4) * 100)\nfocus_forest_naz_df.insert(loc=7, column='perc_2006', value=round(focus_forest_naz_df.surface_ha_2006 / focus_forest_naz_df.sup_com_ha, 4) * 100)\nfocus_forest_naz_df.insert(loc=8, column='perc_2012', value=round(focus_forest_naz_df.surface_ha_2012 / focus_forest_naz_df.sup_com_ha, 4) * 100)\nfocus_forest_naz_df.insert(loc=9, column='perc_2018', value=round(focus_forest_naz_df.surface_ha_2018 / focus_forest_naz_df.sup_com_ha, 4) * 100)\nfocus_forest_naz_df.insert(loc=10, column='Perc.Diff. | 2018-2000', value=(focus_forest_naz_df.perc_2018 - focus_forest_naz_df.perc_2000))\nfocus_forest_naz_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nfocus_forest_naz_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      4010\n      62073.0\n      Solopaca\n      Benevento\n      Campania\n      3112.664003\n      43.63\n      43.63\n      43.46\n      11.69\n      11.69\n      -31.94\n      363.9901\n      363.9901\n      1352.7210\n      1358.0359\n      1358.0275\n    \n    \n      2005\n      18162.0\n      Travacò Siccomario\n      Pavia\n      Lombardia\n      1704.486441\n      35.67\n      34.72\n      8.46\n      6.86\n      5.13\n      -29.59\n      87.4269\n      116.9231\n      144.1941\n      591.7315\n      607.9471\n    \n    \n      2066\n      20022.0\n      Dosolo\n      Mantova\n      Lombardia\n      2553.627074\n      36.66\n      33.26\n      15.80\n      28.04\n      5.45\n      -27.81\n      139.2560\n      716.0698\n      403.4684\n      849.4448\n      936.1148\n    \n    \n      5387\n      83054.0\n      Monforte San Giorgio\n      Messina\n      Sicilia\n      3225.987912\n      20.15\n      38.03\n      11.27\n      11.27\n      11.27\n      -26.76\n      363.6191\n      363.6191\n      363.6193\n      1226.7195\n      650.1504\n    \n    \n      4014\n      62077.0\n      Vitulano\n      Benevento\n      Campania\n      3599.050416\n      50.86\n      50.81\n      50.81\n      26.82\n      26.82\n      -23.99\n      965.1276\n      965.1276\n      1828.5273\n      1828.5272\n      1830.3353\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      6035\n      97078.0\n      Suello\n      Lecco\n      Lombardia\n      262.901636\n      3.74\n      3.74\n      30.07\n      30.07\n      30.07\n      26.33\n      79.0515\n      79.0515\n      79.0515\n      9.8363\n      9.8363\n    \n    \n      4727\n      71047.0\n      San Marco in Lamis\n      Foggia\n      Puglia\n      23419.726063\n      12.66\n      12.66\n      12.30\n      39.01\n      39.01\n      26.35\n      9136.7031\n      9136.7031\n      2879.7020\n      2965.3694\n      2965.3412\n    \n    \n      5343\n      83002.0\n      Alì\n      Messina\n      Sicilia\n      1593.861487\n      11.13\n      11.13\n      42.21\n      42.20\n      42.20\n      31.07\n      672.5921\n      672.5921\n      672.7852\n      177.3506\n      177.3474\n    \n    \n      4645\n      70041.0\n      Montagano\n      Campobasso\n      Molise\n      2662.359533\n      12.81\n      13.18\n      49.30\n      49.17\n      49.17\n      35.99\n      1309.1148\n      1309.1148\n      1312.6691\n      350.7878\n      341.0156\n    \n    \n      5378\n      83042.0\n      Longi\n      Messina\n      Sicilia\n      4210.989035\n      31.58\n      31.58\n      65.31\n      68.51\n      68.51\n      36.93\n      2885.0294\n      2885.0294\n      2750.1191\n      1329.8307\n      1329.8237\n    \n  \n\n6400 rows × 16 columns\n\n\n\n\n\nCode\n# Superfici in arretramento\nnaz_reduction_forest_area = focus_forest_naz_df.iloc[0:10]\nnaz_reduction_forest_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      4010\n      62073.0\n      Solopaca\n      Benevento\n      Campania\n      3112.664003\n      43.63\n      43.63\n      43.46\n      11.69\n      11.69\n      -31.94\n      363.9901\n      363.9901\n      1352.7210\n      1358.0359\n      1358.0275\n    \n    \n      2005\n      18162.0\n      Travacò Siccomario\n      Pavia\n      Lombardia\n      1704.486441\n      35.67\n      34.72\n      8.46\n      6.86\n      5.13\n      -29.59\n      87.4269\n      116.9231\n      144.1941\n      591.7315\n      607.9471\n    \n    \n      2066\n      20022.0\n      Dosolo\n      Mantova\n      Lombardia\n      2553.627074\n      36.66\n      33.26\n      15.80\n      28.04\n      5.45\n      -27.81\n      139.2560\n      716.0698\n      403.4684\n      849.4448\n      936.1148\n    \n    \n      5387\n      83054.0\n      Monforte San Giorgio\n      Messina\n      Sicilia\n      3225.987912\n      20.15\n      38.03\n      11.27\n      11.27\n      11.27\n      -26.76\n      363.6191\n      363.6191\n      363.6193\n      1226.7195\n      650.1504\n    \n    \n      4014\n      62077.0\n      Vitulano\n      Benevento\n      Campania\n      3599.050416\n      50.86\n      50.81\n      50.81\n      26.82\n      26.82\n      -23.99\n      965.1276\n      965.1276\n      1828.5273\n      1828.5272\n      1830.3353\n    \n    \n      1354\n      13059.0\n      Castelnuovo Bozzente\n      Como\n      Lombardia\n      362.195167\n      74.76\n      74.76\n      51.14\n      51.14\n      51.14\n      -23.62\n      185.2128\n      185.2128\n      185.2127\n      270.7783\n      270.7781\n    \n    \n      1975\n      18114.0\n      Pieve Porto Morone\n      Pavia\n      Lombardia\n      1639.626801\n      23.53\n      23.53\n      24.21\n      20.04\n      0.00\n      -23.53\n      0.0002\n      328.5814\n      396.9912\n      385.7940\n      385.7940\n    \n    \n      1788\n      17027.0\n      Braone\n      Brescia\n      Lombardia\n      1335.673792\n      61.74\n      61.74\n      61.69\n      39.25\n      39.25\n      -22.49\n      524.1978\n      524.1978\n      823.9188\n      824.5857\n      824.5859\n    \n    \n      5410\n      83080.0\n      San Pier Niceto\n      Messina\n      Sicilia\n      3667.976954\n      27.71\n      38.63\n      16.27\n      16.27\n      16.27\n      -22.36\n      596.7868\n      596.7868\n      596.7872\n      1416.8175\n      1016.4019\n    \n    \n      1321\n      13009.0\n      Anzano del Parco\n      Como\n      Lombardia\n      324.503555\n      29.46\n      29.46\n      7.69\n      7.69\n      7.69\n      -21.77\n      24.9485\n      24.9485\n      24.9485\n      95.6024\n      95.6025\n    \n  \n\n\n\n\n\n\nCode\n# Superfici in avanzamento\nnaz_increase_forest_area = focus_forest_naz_df.iloc[-10:]\nnaz_increase_forest_area.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nnaz_increase_forest_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      5378\n      83042.0\n      Longi\n      Messina\n      Sicilia\n      4210.989035\n      31.58\n      31.58\n      65.31\n      68.51\n      68.51\n      36.93\n      2885.0294\n      2885.0294\n      2750.1191\n      1329.8307\n      1329.8237\n    \n    \n      4645\n      70041.0\n      Montagano\n      Campobasso\n      Molise\n      2662.359533\n      12.81\n      13.18\n      49.30\n      49.17\n      49.17\n      35.99\n      1309.1148\n      1309.1148\n      1312.6691\n      350.7878\n      341.0156\n    \n    \n      5343\n      83002.0\n      Alì\n      Messina\n      Sicilia\n      1593.861487\n      11.13\n      11.13\n      42.21\n      42.20\n      42.20\n      31.07\n      672.5921\n      672.5921\n      672.7852\n      177.3506\n      177.3474\n    \n    \n      4727\n      71047.0\n      San Marco in Lamis\n      Foggia\n      Puglia\n      23419.726063\n      12.66\n      12.66\n      12.30\n      39.01\n      39.01\n      26.35\n      9136.7031\n      9136.7031\n      2879.7020\n      2965.3694\n      2965.3412\n    \n    \n      6035\n      97078.0\n      Suello\n      Lecco\n      Lombardia\n      262.901636\n      3.74\n      3.74\n      30.07\n      30.07\n      30.07\n      26.33\n      79.0515\n      79.0515\n      79.0515\n      9.8363\n      9.8363\n    \n    \n      5383\n      83050.0\n      Militello Rosmarino\n      Messina\n      Sicilia\n      2953.560321\n      30.59\n      30.80\n      55.18\n      56.89\n      56.89\n      26.09\n      1680.4067\n      1680.4067\n      1629.8563\n      909.6290\n      903.4505\n    \n    \n      1946\n      18071.0\n      Gerenzago\n      Pavia\n      Lombardia\n      541.125193\n      0.00\n      0.00\n      25.77\n      25.77\n      25.77\n      25.77\n      139.4217\n      139.4217\n      139.4217\n      0.0000\n      0.0000\n    \n    \n      5606\n      90044.0\n      Nughedu San Nicolò\n      Sassari\n      Sardegna\n      6789.378997\n      14.32\n      15.66\n      39.48\n      40.42\n      40.42\n      24.76\n      2744.1430\n      2744.1430\n      2680.5068\n      1062.9248\n      972.5207\n    \n    \n      5390\n      83057.0\n      Montalbano Elicona\n      Messina\n      Sicilia\n      6780.082531\n      52.78\n      30.74\n      53.69\n      53.50\n      55.09\n      24.35\n      3734.9590\n      3627.4330\n      3639.9593\n      2084.5071\n      3578.2554\n    \n    \n      5391\n      83058.0\n      Motta Camastra\n      Messina\n      Sicilia\n      2530.898840\n      36.11\n      36.11\n      54.05\n      59.70\n      59.70\n      23.59\n      1510.8548\n      1510.8548\n      1367.8344\n      913.8916\n      913.8926\n    \n  \n\n\n\n\n\n\n3.3.3 Aree agricole\nIl gruppo 2.1 della CLC\n\n\nCode\n# Dati 1990\narable_lands_surface_naz_1990 = focus_naz_1990_group[focus_naz_1990_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_naz_1990_group = pd.DataFrame(arable_lands_surface_naz_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\narable_lands_surface_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\narable_lands_surface_naz_2000 = focus_naz_2000_group[focus_naz_2000_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_naz_2000_group = pd.DataFrame(arable_lands_surface_naz_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\narable_lands_surface_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\narable_lands_surface_naz_2006 = focus_naz_2006_group[focus_naz_2006_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_naz_2006_group = pd.DataFrame(arable_lands_surface_naz_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\narable_lands_surface_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\narable_lands_surface_naz_2012 = focus_naz_2012_group[focus_naz_2012_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_naz_2012_group = pd.DataFrame(arable_lands_surface_naz_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\narable_lands_surface_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\narable_lands_surface_naz_2018 = focus_naz_2018_group[focus_naz_2018_group['label3'].isin(['Non-irrigated arable land', 'Permanently irrigated land'])]\narable_lands_surface_naz_2018_group = pd.DataFrame(arable_lands_surface_naz_2018.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha'])['surface_ha_2018'].sum())\narable_lands_surface_naz_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_arable_lands_naz = [arable_lands_surface_naz_2018_group, arable_lands_surface_naz_2012_group, arable_lands_surface_naz_2006_group, arable_lands_surface_naz_2000_group, arable_lands_surface_naz_1990_group]\nfocus_arable_lands_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_arable_lands_naz)\nfocus_arable_lands_naz_df = focus_arable_lands_naz_df[focus_arable_lands_naz_df['sup_com_ha'] > 0]\nfocus_arable_lands_naz_df.fillna(0, inplace=True)\nfocus_arable_lands_naz_df.insert(loc=5, column='perc_1990', value=round(focus_arable_lands_naz_df.surface_ha_1990 / focus_arable_lands_naz_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_naz_df.insert(loc=6, column='perc_2000', value=round(focus_arable_lands_naz_df.surface_ha_2000 / focus_arable_lands_naz_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_naz_df.insert(loc=7, column='perc_2006', value=round(focus_arable_lands_naz_df.surface_ha_2006 / focus_arable_lands_naz_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_naz_df.insert(loc=8, column='perc_2012', value=round(focus_arable_lands_naz_df.surface_ha_2012 / focus_arable_lands_naz_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_naz_df.insert(loc=9, column='perc_2018', value=round(focus_arable_lands_naz_df.surface_ha_2018 / focus_arable_lands_naz_df.sup_com_ha, 4) * 100)\nfocus_arable_lands_naz_df.insert(loc=10, column='Perc.Diff. | 2018-2000', value=(focus_arable_lands_naz_df.perc_2018 - focus_arable_lands_naz_df.perc_2000))\nfocus_arable_lands_naz_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=True, inplace=True)\nfocus_arable_lands_naz_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      1903\n      28080.0\n      Santa Giustina in Colle\n      Padova\n      Veneto\n      1796.754897\n      89.86\n      92.50\n      91.92\n      12.83\n      12.83\n      -79.67\n      230.5114\n      230.5115\n      1651.6402\n      1661.9126\n      1614.5434\n    \n    \n      1861\n      28036.0\n      Curtarolo\n      Padova\n      Veneto\n      1472.896746\n      89.61\n      84.87\n      83.69\n      9.24\n      9.24\n      -75.63\n      136.0505\n      136.0505\n      1232.6876\n      1250.0597\n      1319.9213\n    \n    \n      1626\n      24026.0\n      Cassola\n      Vicenza\n      Veneto\n      1273.950878\n      70.93\n      69.20\n      66.58\n      11.82\n      11.13\n      -58.07\n      141.8257\n      150.5180\n      848.1867\n      881.6361\n      903.5994\n    \n    \n      3451\n      64072.0\n      Pietradefusi\n      Avellino\n      Campania\n      924.149874\n      77.90\n      77.90\n      20.16\n      20.16\n      20.16\n      -57.74\n      186.3344\n      186.3344\n      186.3345\n      719.9375\n      719.9308\n    \n    \n      3442\n      64056.0\n      Montefusco\n      Avellino\n      Campania\n      823.823558\n      59.13\n      59.13\n      2.01\n      2.01\n      2.01\n      -57.12\n      16.5238\n      16.5238\n      16.5238\n      487.1327\n      487.1269\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      3880\n      70046.0\n      Montenero di Bisaccia\n      Campobasso\n      Molise\n      9331.252115\n      27.05\n      26.67\n      70.13\n      70.13\n      70.13\n      43.46\n      6544.4633\n      6544.4633\n      6544.4634\n      2488.5836\n      2524.0691\n    \n    \n      3230\n      61020.0\n      Casaluce\n      Caserta\n      Campania\n      955.842829\n      0.70\n      0.70\n      0.70\n      60.53\n      60.53\n      59.83\n      578.6141\n      578.6141\n      6.7225\n      6.7226\n      6.7222\n    \n    \n      3903\n      70069.0\n      San Martino in Pensilis\n      Campobasso\n      Molise\n      10065.202788\n      23.10\n      23.10\n      83.46\n      83.46\n      83.46\n      60.36\n      8400.8974\n      8400.8974\n      8400.8973\n      2324.9437\n      2324.9034\n    \n    \n      3245\n      61037.0\n      Frignano\n      Caserta\n      Campania\n      985.795577\n      0.00\n      0.00\n      0.00\n      69.03\n      69.03\n      69.03\n      680.5149\n      680.5149\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      3297\n      61098.0\n      Villa di Briano\n      Caserta\n      Campania\n      854.692612\n      3.91\n      3.91\n      3.91\n      74.03\n      74.03\n      70.12\n      632.7436\n      632.7436\n      33.4422\n      33.4424\n      33.4453\n    \n  \n\n5585 rows × 16 columns\n\n\n\n\n\nCode\n# Superfici in arretramento\nnaz_reduction_arable_lands_area = focus_arable_lands_naz_df.iloc[0:10]\nnaz_reduction_arable_lands_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      1903\n      28080.0\n      Santa Giustina in Colle\n      Padova\n      Veneto\n      1796.754897\n      89.86\n      92.50\n      91.92\n      12.83\n      12.83\n      -79.67\n      230.5114\n      230.5115\n      1651.6402\n      1661.9126\n      1614.5434\n    \n    \n      1861\n      28036.0\n      Curtarolo\n      Padova\n      Veneto\n      1472.896746\n      89.61\n      84.87\n      83.69\n      9.24\n      9.24\n      -75.63\n      136.0505\n      136.0505\n      1232.6876\n      1250.0597\n      1319.9213\n    \n    \n      1626\n      24026.0\n      Cassola\n      Vicenza\n      Veneto\n      1273.950878\n      70.93\n      69.20\n      66.58\n      11.82\n      11.13\n      -58.07\n      141.8257\n      150.5180\n      848.1867\n      881.6361\n      903.5994\n    \n    \n      3451\n      64072.0\n      Pietradefusi\n      Avellino\n      Campania\n      924.149874\n      77.90\n      77.90\n      20.16\n      20.16\n      20.16\n      -57.74\n      186.3344\n      186.3344\n      186.3345\n      719.9375\n      719.9308\n    \n    \n      3442\n      64056.0\n      Montefusco\n      Avellino\n      Campania\n      823.823558\n      59.13\n      59.13\n      2.01\n      2.01\n      2.01\n      -57.12\n      16.5238\n      16.5238\n      16.5238\n      487.1327\n      487.1269\n    \n    \n      1923\n      28101.0\n      Villa del Conte\n      Padova\n      Veneto\n      1734.840442\n      96.57\n      96.39\n      92.42\n      39.87\n      39.87\n      -56.52\n      691.7159\n      691.7159\n      1603.3313\n      1672.1357\n      1675.4122\n    \n    \n      2545\n      44036.0\n      Montefiore dell'Aso\n      Ascoli Piceno\n      Marche\n      2820.740109\n      31.58\n      52.36\n      51.94\n      1.96\n      1.96\n      -50.40\n      55.4167\n      55.4167\n      1465.2004\n      1477.0519\n      890.6685\n    \n    \n      1847\n      28020.0\n      Campo San Martino\n      Padova\n      Veneto\n      1315.986365\n      89.89\n      89.56\n      87.50\n      39.25\n      39.25\n      -50.31\n      516.4652\n      516.4652\n      1151.4484\n      1178.6033\n      1182.9783\n    \n    \n      4097\n      75041.0\n      Martignano\n      Lecce\n      Puglia\n      649.212863\n      55.63\n      55.62\n      7.23\n      7.23\n      7.23\n      -48.39\n      46.9307\n      46.9307\n      46.9307\n      361.0667\n      361.1841\n    \n    \n      4147\n      75094.0\n      Zollino\n      Lecce\n      Puglia\n      995.447907\n      73.07\n      73.07\n      25.56\n      25.56\n      25.56\n      -47.51\n      254.4702\n      254.4702\n      254.4701\n      727.3750\n      727.3907\n    \n  \n\n\n\n\n\n\nCode\n# Superfici in avanzamento\nnaz_increase_arable_lands_area = focus_arable_lands_naz_df.iloc[-10:]\nnaz_increase_arable_lands_area.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nnaz_increase_arable_lands_area\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      3297\n      61098.0\n      Villa di Briano\n      Caserta\n      Campania\n      854.692612\n      3.91\n      3.91\n      3.91\n      74.03\n      74.03\n      70.12\n      632.7436\n      632.7436\n      33.4422\n      33.4424\n      33.4453\n    \n    \n      3245\n      61037.0\n      Frignano\n      Caserta\n      Campania\n      985.795577\n      0.00\n      0.00\n      0.00\n      69.03\n      69.03\n      69.03\n      680.5149\n      680.5149\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      3903\n      70069.0\n      San Martino in Pensilis\n      Campobasso\n      Molise\n      10065.202788\n      23.10\n      23.10\n      83.46\n      83.46\n      83.46\n      60.36\n      8400.8974\n      8400.8974\n      8400.8973\n      2324.9437\n      2324.9034\n    \n    \n      3230\n      61020.0\n      Casaluce\n      Caserta\n      Campania\n      955.842829\n      0.70\n      0.70\n      0.70\n      60.53\n      60.53\n      59.83\n      578.6141\n      578.6141\n      6.7225\n      6.7226\n      6.7222\n    \n    \n      3880\n      70046.0\n      Montenero di Bisaccia\n      Campobasso\n      Molise\n      9331.252115\n      27.05\n      26.67\n      70.13\n      70.13\n      70.13\n      43.46\n      6544.4633\n      6544.4633\n      6544.4634\n      2488.5836\n      2524.0691\n    \n    \n      3912\n      70078.0\n      Termoli\n      Campobasso\n      Molise\n      5563.450730\n      16.95\n      16.76\n      57.90\n      59.83\n      59.83\n      43.07\n      3328.3420\n      3328.3420\n      3221.2335\n      932.5081\n      942.8076\n    \n    \n      5205\n      97072.0\n      Rogeno\n      Lecco\n      Lombardia\n      482.482168\n      0.70\n      0.70\n      42.34\n      42.34\n      42.34\n      41.64\n      204.2863\n      204.2863\n      204.2863\n      3.3881\n      3.3881\n    \n    \n      4668\n      83090.0\n      San Teodoro\n      Messina\n      Sicilia\n      1397.402292\n      29.16\n      29.16\n      67.97\n      67.97\n      67.97\n      38.81\n      949.7711\n      949.7711\n      949.7711\n      407.4871\n      407.4882\n    \n    \n      3889\n      70055.0\n      Portocannone\n      Campobasso\n      Molise\n      1311.357120\n      19.86\n      19.86\n      57.15\n      57.15\n      57.15\n      37.29\n      749.4987\n      749.4987\n      749.4987\n      260.4368\n      260.4467\n    \n    \n      3931\n      71014.0\n      Casalvecchio di Puglia\n      Foggia\n      Puglia\n      3193.205814\n      45.71\n      48.78\n      48.78\n      84.11\n      84.11\n      35.33\n      2685.9620\n      2685.9620\n      1557.6443\n      1557.6441\n      1459.5313\n    \n  \n\n\n\n\n\n\n3.3.4 Aree bruciate\n\n\nCode\n# Dati 1990\nburnt_surface_naz_1990 = focus_naz_1990_group[focus_naz_1990_group['label3'].isin(['Burnt areas'])]\nburnt_surface_naz_1990_group = pd.DataFrame(burnt_surface_naz_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\nburnt_surface_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\nburnt_surface_naz_2000 = focus_naz_2000_group[focus_naz_2000_group['label3'].isin(['Burnt areas'])]\nburnt_surface_naz_2000_group = pd.DataFrame(burnt_surface_naz_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\nburnt_surface_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\nburnt_surface_naz_2006 = focus_naz_2006_group[focus_naz_2006_group['label3'].isin(['Burnt areas'])]\nburnt_surface_naz_2006_group = pd.DataFrame(burnt_surface_naz_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\nburnt_surface_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\nburnt_surface_naz_2012 = focus_naz_2012_group[focus_naz_2012_group['label3'].isin(['Burnt areas'])]\nburnt_surface_naz_2012_group = pd.DataFrame(burnt_surface_naz_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\nburnt_surface_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\nburnt_surface_naz_2018 = focus_naz_2018_group[focus_naz_2018_group['label3'].isin(['Burnt areas'])]\nburnt_surface_naz_2018_group = pd.DataFrame(burnt_surface_naz_2018.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha'])['surface_ha_2018'].sum())\nburnt_surface_naz_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_burnt_naz = [burnt_surface_naz_2018_group, burnt_surface_naz_2012_group, burnt_surface_naz_2006_group, burnt_surface_naz_2000_group, burnt_surface_naz_1990_group]\nfocus_burnt_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_burnt_naz)\nfocus_burnt_naz_df = focus_burnt_naz_df[focus_burnt_naz_df['sup_com_ha'] > 0]\nfocus_burnt_naz_df.fillna(0, inplace=True)\nfocus_burnt_naz_df.insert(loc=5, column='perc_1990', value=round(focus_burnt_naz_df.surface_ha_1990 / focus_burnt_naz_df.sup_com_ha, 4) * 100)\nfocus_burnt_naz_df.insert(loc=6, column='perc_2000', value=round(focus_burnt_naz_df.surface_ha_2000 / focus_burnt_naz_df.sup_com_ha, 4) * 100)\nfocus_burnt_naz_df.insert(loc=7, column='perc_2006', value=round(focus_burnt_naz_df.surface_ha_2006 / focus_burnt_naz_df.sup_com_ha, 4) * 100)\nfocus_burnt_naz_df.insert(loc=8, column='perc_2012', value=round(focus_burnt_naz_df.surface_ha_2012 / focus_burnt_naz_df.sup_com_ha, 4) * 100)\nfocus_burnt_naz_df.insert(loc=9, column='perc_2018', value=round(focus_burnt_naz_df.surface_ha_2018 / focus_burnt_naz_df.sup_com_ha, 4) * 100)\nfocus_burnt_naz_df.insert(loc=10, column='Perc.Diff. | 2018-2000', value=(focus_burnt_naz_df.perc_2018 - focus_burnt_naz_df.perc_2000))\nfocus_burnt_naz_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nfocus_burnt_naz_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      114\n      81020.0\n      San Vito Lo Capo\n      Trapani\n      Sicilia\n      6011.867192\n      0.00\n      0.00\n      0.0\n      0.00\n      42.65\n      42.65\n      2564.0387\n      0.0000\n      0.0\n      0.0000\n      0.0000\n    \n    \n      141\n      83063.0\n      Oliveri\n      Messina\n      Sicilia\n      1043.475159\n      0.00\n      0.00\n      0.0\n      0.00\n      36.58\n      36.58\n      381.7231\n      0.0000\n      0.0\n      0.0000\n      0.0000\n    \n    \n      49\n      63082.0\n      Terzigno\n      Napoli\n      Campania\n      2346.480829\n      0.00\n      0.00\n      0.0\n      0.00\n      18.50\n      18.50\n      434.1155\n      0.0000\n      0.0\n      0.0000\n      0.0000\n    \n    \n      45\n      63064.0\n      Ercolano\n      Napoli\n      Campania\n      1989.359843\n      0.00\n      0.00\n      0.0\n      8.49\n      17.54\n      17.54\n      348.9169\n      168.9727\n      0.0\n      0.0000\n      0.0000\n    \n    \n      223\n      111046.0\n      Nurallao\n      Sud Sardegna\n      Sardegna\n      3476.167353\n      0.00\n      0.00\n      0.0\n      0.00\n      17.40\n      17.40\n      604.7035\n      0.0000\n      0.0\n      0.0000\n      0.0000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      140\n      83061.0\n      Nizza di Sicilia\n      Messina\n      Sicilia\n      1341.538156\n      0.00\n      1.97\n      0.0\n      0.00\n      0.02\n      -1.95\n      0.3277\n      0.0000\n      0.0\n      26.3822\n      0.0000\n    \n    \n      203\n      100003.0\n      Montemurlo\n      Prato\n      Toscana\n      3077.584750\n      0.00\n      3.78\n      0.0\n      1.64\n      1.64\n      -2.14\n      50.4463\n      50.4463\n      0.0\n      116.4644\n      0.0000\n    \n    \n      66\n      65052.0\n      Fisciano\n      Salerno\n      Campania\n      3168.742849\n      0.00\n      4.15\n      0.0\n      0.00\n      1.43\n      -2.72\n      45.1761\n      0.0000\n      0.0\n      131.4723\n      0.0000\n    \n    \n      4\n      10059.0\n      Sestri Levante\n      Genova\n      Liguria\n      3361.625421\n      12.95\n      9.23\n      0.0\n      0.00\n      3.04\n      -6.19\n      102.1619\n      0.0000\n      0.0\n      310.3360\n      435.4819\n    \n    \n      134\n      83045.0\n      Mandanici\n      Messina\n      Sicilia\n      1185.361172\n      0.00\n      27.54\n      0.0\n      0.00\n      5.16\n      -22.38\n      61.1878\n      0.0000\n      0.0\n      326.4113\n      0.0000\n    \n  \n\n235 rows × 16 columns\n\n\n\n\n\n3.3.5 Aree adibite a discarica\n\n\nCode\n# Dati 1990\ndump_surface_naz_1990 = focus_naz_1990_group[focus_naz_1990_group['label3'].isin(['Dump sites'])]\ndump_surface_naz_1990_group = pd.DataFrame(dump_surface_naz_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\ndump_surface_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\ndump_surface_naz_2000 = focus_naz_2000_group[focus_naz_2000_group['label3'].isin(['Dump sites'])]\ndump_surface_naz_2000_group = pd.DataFrame(dump_surface_naz_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\ndump_surface_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\ndump_surface_naz_2006 = focus_naz_2006_group[focus_naz_2006_group['label3'].isin(['Dump sites'])]\ndump_surface_naz_2006_group = pd.DataFrame(dump_surface_naz_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\ndump_surface_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\ndump_surface_naz_2012 = focus_naz_2012_group[focus_naz_2012_group['label3'].isin(['Dump sites'])]\ndump_surface_naz_2012_group = pd.DataFrame(dump_surface_naz_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\ndump_surface_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\ndump_surface_naz_2018 = focus_naz_2018_group[focus_naz_2018_group['label3'].isin(['Dump sites'])]\ndump_surface_naz_2018_group = pd.DataFrame(dump_surface_naz_2018.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha'])['surface_ha_2018'].sum())\ndump_surface_naz_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_dump_naz = [dump_surface_naz_2018_group, dump_surface_naz_2012_group, dump_surface_naz_2006_group, dump_surface_naz_2000_group, dump_surface_naz_1990_group]\nfocus_dump_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_dump_naz)\nfocus_dump_naz_df = focus_dump_naz_df[focus_dump_naz_df['sup_com_ha'] > 0]\nfocus_dump_naz_df.fillna(0, inplace=True)\nfocus_dump_naz_df.insert(loc=5, column='perc_1990', value=round(focus_dump_naz_df.surface_ha_1990 / focus_dump_naz_df.sup_com_ha, 4) * 100)\nfocus_dump_naz_df.insert(loc=6, column='perc_2000', value=round(focus_dump_naz_df.surface_ha_2000 / focus_dump_naz_df.sup_com_ha, 4) * 100)\nfocus_dump_naz_df.insert(loc=7, column='perc_2006', value=round(focus_dump_naz_df.surface_ha_2006 / focus_dump_naz_df.sup_com_ha, 4) * 100)\nfocus_dump_naz_df.insert(loc=8, column='perc_2012', value=round(focus_dump_naz_df.surface_ha_2012 / focus_dump_naz_df.sup_com_ha, 4) * 100)\nfocus_dump_naz_df.insert(loc=9, column='perc_2018', value=round(focus_dump_naz_df.surface_ha_2018 / focus_dump_naz_df.sup_com_ha, 4) * 100)\nfocus_dump_naz_df.insert(loc=10, column='Perc.Diff. | 2018-2000', value=(focus_dump_naz_df.perc_2018 - focus_dump_naz_df.perc_2000))\nfocus_dump_naz_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nfocus_dump_naz_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      2\n      1273.0\n      Torrazza Piemonte\n      Torino\n      Piemonte\n      982.382979\n      0.0\n      0.00\n      0.00\n      6.72\n      7.64\n      7.64\n      75.0599\n      66.0309\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      13\n      20034.0\n      Medole\n      Mantova\n      Lombardia\n      2572.857637\n      0.0\n      0.00\n      0.00\n      6.66\n      6.66\n      6.66\n      171.3837\n      171.3837\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      82\n      87030.0\n      Motta Sant'Anastasia\n      Catania\n      Sicilia\n      3569.989125\n      0.0\n      0.00\n      1.62\n      2.16\n      2.16\n      2.16\n      77.0713\n      77.0713\n      57.8396\n      0.0000\n      0.0000\n    \n    \n      25\n      34041.0\n      Torrile\n      Parma\n      Emilia-Romagna\n      3714.699293\n      0.0\n      0.00\n      0.00\n      2.10\n      2.10\n      2.10\n      77.8524\n      77.8524\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      52\n      57027.0\n      Fara in Sabina\n      Rieti\n      Lazio\n      5496.235909\n      0.0\n      0.00\n      0.00\n      1.98\n      1.98\n      1.98\n      108.5511\n      108.5511\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      16\n      26010.0\n      Casier\n      Treviso\n      Veneto\n      1342.173767\n      0.0\n      1.25\n      1.25\n      1.25\n      1.25\n      0.00\n      16.8000\n      16.8000\n      16.8000\n      16.8000\n      0.0000\n    \n    \n      35\n      37032.0\n      Imola\n      Bologna\n      Emilia-Romagna\n      20502.134650\n      0.0\n      0.18\n      0.18\n      0.18\n      0.18\n      0.00\n      37.1468\n      37.1468\n      37.1468\n      37.1468\n      0.0000\n    \n    \n      36\n      38006.0\n      Comacchio\n      Ferrara\n      Emilia-Romagna\n      28374.611068\n      0.1\n      0.10\n      0.10\n      0.10\n      0.10\n      0.00\n      28.5891\n      28.5891\n      28.5891\n      28.5898\n      28.5892\n    \n    \n      20\n      27042.0\n      Venezia\n      Venezia\n      Veneto\n      41589.266300\n      0.0\n      0.09\n      0.09\n      0.09\n      0.09\n      0.00\n      36.2536\n      36.2536\n      36.2536\n      36.2536\n      0.0000\n    \n    \n      80\n      85007.0\n      Gela\n      Caltanissetta\n      Sicilia\n      27921.954881\n      0.0\n      0.17\n      0.24\n      0.11\n      0.11\n      -0.06\n      29.9715\n      29.9715\n      65.9464\n      47.9113\n      0.0000\n    \n  \n\n94 rows × 16 columns\n\n\n\n\n\nCode\n# Dati 1990\ngreen_urban_surface_surface_naz_1990 = focus_naz_1990_group[focus_naz_1990_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_surface_naz_1990_group = pd.DataFrame(green_urban_surface_surface_naz_1990.groupby(['pro_com'])['surface_ha_1990'].sum())\ngreen_urban_surface_surface_naz_1990_group.reset_index(inplace=True)\n\n# Dati 2000\ngreen_urban_surface_surface_naz_2000 = focus_naz_2000_group[focus_naz_2000_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_surface_naz_2000_group = pd.DataFrame(green_urban_surface_surface_naz_2000.groupby(['pro_com'])['surface_ha_2000'].sum())\ngreen_urban_surface_surface_naz_2000_group.reset_index(inplace=True)\n\n# Dati 2006\ngreen_urban_surface_surface_naz_2006 = focus_naz_2006_group[focus_naz_2006_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_surface_naz_2006_group = pd.DataFrame(green_urban_surface_surface_naz_2006.groupby(['pro_com'])['surface_ha_2006'].sum())\ngreen_urban_surface_surface_naz_2006_group.reset_index(inplace=True)\n\n# Dati 2012\ngreen_urban_surface_surface_naz_2012 = focus_naz_2012_group[focus_naz_2012_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_surface_naz_2012_group = pd.DataFrame(green_urban_surface_surface_naz_2012.groupby(['pro_com'])['surface_ha_2012'].sum())\ngreen_urban_surface_surface_naz_2012_group.reset_index(inplace=True)\n\n# Dati 2018\ngreen_urban_surface_surface_naz_2018 = focus_naz_2018_group[focus_naz_2018_group['label3'].isin(['Green urban areas'])]\ngreen_urban_surface_surface_naz_2018_group = pd.DataFrame(green_urban_surface_surface_naz_2018.groupby(['pro_com', 'comune', 'provincia', 'regione', 'sup_com_ha'])['surface_ha_2018'].sum())\ngreen_urban_surface_surface_naz_2018_group.reset_index(inplace=True)\n\n# Dati aggregati\nfocus_green_urban_surface_naz = [green_urban_surface_surface_naz_2018_group, green_urban_surface_surface_naz_2012_group, green_urban_surface_surface_naz_2006_group, green_urban_surface_surface_naz_2000_group, green_urban_surface_surface_naz_1990_group]\nfocus_green_urban_surface_naz_df = reduce(lambda  left,right: pd.merge(left,right,on=['pro_com'], how='outer'), focus_green_urban_surface_naz)\nfocus_green_urban_surface_naz_df = focus_green_urban_surface_naz_df[focus_green_urban_surface_naz_df['sup_com_ha'] > 0]\nfocus_green_urban_surface_naz_df.fillna(0, inplace=True)\nfocus_green_urban_surface_naz_df.insert(loc=5, column='perc_1990', value=round(focus_green_urban_surface_naz_df.surface_ha_1990 / focus_green_urban_surface_naz_df.sup_com_ha, 4) * 100)\nfocus_green_urban_surface_naz_df.insert(loc=6, column='perc_2000', value=round(focus_green_urban_surface_naz_df.surface_ha_2000 / focus_green_urban_surface_naz_df.sup_com_ha, 4) * 100)\nfocus_green_urban_surface_naz_df.insert(loc=7, column='perc_2006', value=round(focus_green_urban_surface_naz_df.surface_ha_2006 / focus_green_urban_surface_naz_df.sup_com_ha, 4) * 100)\nfocus_green_urban_surface_naz_df.insert(loc=8, column='perc_2012', value=round(focus_green_urban_surface_naz_df.surface_ha_2012 / focus_green_urban_surface_naz_df.sup_com_ha, 4) * 100)\nfocus_green_urban_surface_naz_df.insert(loc=9, column='perc_2018', value=round(focus_green_urban_surface_naz_df.surface_ha_2018 / focus_green_urban_surface_naz_df.sup_com_ha, 4) * 100)\nfocus_green_urban_surface_naz_df.insert(loc=10, column='Perc.Diff. | 2018-2000', value=(focus_green_urban_surface_naz_df.perc_2018 - focus_green_urban_surface_naz_df.perc_2000))\nfocus_green_urban_surface_naz_df.sort_values(by=['Perc.Diff. | 2018-2000'], ascending=False, inplace=True)\nfocus_green_urban_surface_naz_df\n\n\n\n\n\n\n  \n    \n      \n      pro_com\n      comune\n      provincia\n      regione\n      sup_com_ha\n      perc_1990\n      perc_2000\n      perc_2006\n      perc_2012\n      perc_2018\n      Perc.Diff. | 2018-2000\n      surface_ha_2018\n      surface_ha_2012\n      surface_ha_2006\n      surface_ha_2000\n      surface_ha_1990\n    \n  \n  \n    \n      19\n      15032.0\n      Bresso\n      Milano\n      Lombardia\n      338.236565\n      0.00\n      0.00\n      10.09\n      19.93\n      19.93\n      19.93\n      67.4045\n      67.4045\n      34.1411\n      0.0000\n      0.0000\n    \n    \n      127\n      108046.0\n      Vedano al Lambro\n      Monza e della Brianza\n      Lombardia\n      197.928997\n      0.00\n      0.00\n      19.70\n      19.70\n      19.70\n      19.70\n      38.9824\n      38.9824\n      38.9825\n      0.0000\n      0.0000\n    \n    \n      125\n      108033.0\n      Monza\n      Monza e della Brianza\n      Lombardia\n      3308.665453\n      1.07\n      1.07\n      13.58\n      13.58\n      13.58\n      12.51\n      449.4274\n      449.4274\n      449.4274\n      35.4254\n      35.4254\n    \n    \n      95\n      62062.0\n      San Lorenzo Maggiore\n      Benevento\n      Campania\n      1629.550368\n      0.00\n      0.00\n      0.00\n      0.00\n      11.89\n      11.89\n      193.6792\n      0.0000\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      20\n      15077.0\n      Cinisello Balsamo\n      Milano\n      Lombardia\n      1272.408112\n      0.00\n      0.00\n      0.00\n      9.68\n      9.68\n      9.68\n      123.1662\n      123.1662\n      0.0000\n      0.0000\n      0.0000\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2\n      1090.0\n      Collegno\n      Torino\n      Piemonte\n      1809.931733\n      3.36\n      3.22\n      3.48\n      2.76\n      2.76\n      -0.46\n      50.0311\n      50.0311\n      62.9144\n      58.3309\n      60.8457\n    \n    \n      50\n      30027.0\n      Codroipo\n      Udine\n      Friuli Venezia Giulia\n      7520.098015\n      1.09\n      1.09\n      0.40\n      0.40\n      0.40\n      -0.69\n      30.4123\n      30.4123\n      30.4123\n      81.8193\n      81.8197\n    \n    \n      126\n      108040.0\n      Seveso\n      Monza e della Brianza\n      Lombardia\n      740.240733\n      0.00\n      8.95\n      8.23\n      8.23\n      8.23\n      -0.72\n      60.8857\n      60.8857\n      60.8857\n      66.2372\n      0.0000\n    \n    \n      82\n      48017.0\n      Firenze\n      Firenze\n      Toscana\n      10231.561540\n      3.25\n      3.09\n      2.44\n      2.14\n      2.14\n      -0.95\n      218.9329\n      218.9329\n      249.9431\n      315.8389\n      332.8009\n    \n    \n      70\n      42002.0\n      Ancona\n      Ancona\n      Marche\n      12486.826920\n      1.71\n      1.70\n      0.74\n      0.74\n      0.74\n      -0.96\n      92.4984\n      92.4984\n      92.1039\n      211.9722\n      213.0332\n    \n  \n\n130 rows × 16 columns"
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#newsletter",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#newsletter",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "Newsletter",
    "text": "Newsletter\nSe vuoi ricevere aggiornamenti sui prossimi articoli iscriviti alla newsletter!"
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#telegram",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#telegram",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "Telegram",
    "text": "Telegram\nSegui il canale Telegram CaffèGIS - I GIS a supporto dei processi evolutivi territoriali per ricevere aggiornamenti su iniziative ed informazioni a tema GIS."
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#offrimi-una-birra",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#offrimi-una-birra",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "Offrimi una birra!",
    "text": "Offrimi una birra!\nSe trovi interessanti i miei articoli offrimi una birra!\nAlla prossima!"
  },
  {
    "objectID": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html",
    "href": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html",
    "title": "Trovare la linea meno lunga in una lista di linee",
    "section": "",
    "text": "Mettiamo il caso che abbiamo una lista di linee: come troviamo quella meno lunga?"
  },
  {
    "objectID": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#newsletter",
    "href": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#newsletter",
    "title": "Trovare la linea meno lunga in una lista di linee",
    "section": "Newsletter",
    "text": "Newsletter\nSe vuoi ricevere aggiornamenti sui prossimi articoli iscriviti alla newsletter!"
  },
  {
    "objectID": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#telegram",
    "href": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#telegram",
    "title": "Trovare la linea meno lunga in una lista di linee",
    "section": "Telegram",
    "text": "Telegram\nSegui il canale Telegram CaffèGIS - I GIS a supporto dei processi evolutivi territoriali per ricevere aggiornamenti su iniziative ed informazioni a tema GIS."
  },
  {
    "objectID": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#offrimi-una-birra",
    "href": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#offrimi-una-birra",
    "title": "Trovare la linea meno lunga in una lista di linee",
    "section": "Offrimi una birra!",
    "text": "Offrimi una birra!\nSe trovi interessanti i miei articoli offrimi una birra!\nAlla prossima!"
  },
  {
    "objectID": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#prima-di-iniziare",
    "href": "posts/analisi-della-copertura-del-suolo-in-italia/2022-08-26-analisi-della-copertura-del-suolo-in-italia.html#prima-di-iniziare",
    "title": "Analisi della copertura del suolo in Italia dal 1990 al 2018 usando la CORINE Land Cover",
    "section": "Prima di iniziare",
    "text": "Prima di iniziare\n\nLibrerie\nPer raggiungere l’obiettivo userò le librerie che seguono:\n\n\nCode\nimport pathlib\nimport geopandas as gpd\nimport pandas as pd\nfrom functools import reduce\nimport matplotlib.pyplot as plt\nfrom matplotlib.gridspec import GridSpec\n\nimport warnings\nwarnings.filterwarnings('ignore')\nwarnings.simplefilter('ignore')\n\n\n\n\nFonti dati\nHo rielaborato i dati CORINE Land Cover dal 1990 al 2018 inserendoli in un unico GeoPackage che è possibile scaricare da qui. I dati sono stati processati preventivamente usando PostGIS in modo da associare ai poligoni della CLC anche quelli dei Comuni italiani al 2022 dell’ISTAT. E’ stato indispensabile questo passaggio preventivo perchè ho dovuto correggere gli errori topologici sui dati ISTAT e, al momento, trovo molto più comodo correggere gli errori topologici tramite SQL piuttosto che con Python.\n\n\nCode\nmain_folder = pathlib.Path('/home/max/Desktop/clc')\ndataset = main_folder.joinpath('clcitalia.gpkg')"
  },
  {
    "objectID": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#prima-di-iniziare",
    "href": "posts/analisi-di-visibilita/2022-04-07-analisi-di-visibilita.html#prima-di-iniziare",
    "title": "Analisi di visibilità",
    "section": "Prima di iniziare",
    "text": "Prima di iniziare\n\nLibrerie\nPer raggiungere l’obiettivo userò le librerie che seguono:\n\n\nCode\nimport pathlib\nimport geopandas as gpd\nimport rioxarray as rxr\nimport rasterio as rio\nfrom rasterio.plot import show\nimport matplotlib.pyplot as plt\nfrom xrspatial import hillshade, viewshed\nfrom xarray.plot import imshow\n\n\n\n\nFonti dati\nCome DEM ho usato un ritaglio del progetto DEM20 di ISPRA su cui ho posizionato con QGIS undici punti; nell’articolo del blog uso l’undicesimo, qui proverò ad usarli tutti.\n\n\nCode\nsample_data = pathlib.Path.cwd().parent.joinpath('sample_data/viewshed')\ndem = sample_data.joinpath('ispra_dtm_20.tif')\npoints = sample_data.joinpath('poi.shp')"
  },
  {
    "objectID": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#prima-di-iniziare",
    "href": "posts/trovare-la-linea-meno-lunga-in-una-lista/2022-11-20-linea-meno-lunga-in-una-lista.html#prima-di-iniziare",
    "title": "Trovare la linea meno lunga in una lista di linee",
    "section": "Prima di iniziare",
    "text": "Prima di iniziare\n\nLibrerie\nPer raggiungere l’obiettivo userò shapely, matplotlib e random; queste ultime due le ho usate solo per motivi di rappresentazione grafica dei dati.\n\n\nCode\nfrom shapely import wkt\nfrom matplotlib import pyplot as plt\nimport random\n\n\n\n\nFonti dati\nUserò in questo piccolo esercizio quattro linee, ma dobbiamo immaginarci di essere di fronte alla generica situazione in cui abbiamo una lista di N linee e non possiamo di certo metterci a misurarle tutte.\n\n\nCode\nline_0 = wkt.loads('LINESTRING (461179.6655721677 4507148.788223281, 461217.56786209624 4507181.537033379, 461236.3280996226 4507194.537878151, 461241.7247760045 4507197.640095252, 461258.8379542616 4507210.660701941, 461261.9432857035 4507219.791508417, 461270.90091201715 4507254.590010401, 461271.56385885156 4507303.918307676, 461273.67536588735 4507318.460376316, 461286.2322009634 4507358.346460313, 461302.55653224624 4507403.197152592, 461365.2492823085 4507485.060388609, 461480.4983426857 4507548.512415529, 461580.7367309019 4507618.493483591)')\nline_1 = wkt.loads('LINESTRING (461179.6655721677 4507148.788223281, 461217.56786209624 4507181.537033379, 461236.3280996226 4507194.537878151, 461241.7247760045 4507197.640095252, 461258.8379542616 4507210.660701941, 461261.9432857035 4507219.791508417, 461270.90091201715 4507254.590010401, 461271.56385885156 4507303.918307676, 461273.67536588735 4507318.460376316, 461286.2322009634 4507358.346460313, 461302.55653224624 4507403.197152592)')\nline_2 = wkt.loads('LINESTRING (461179.6655721677 4507148.788223281, 461217.56786209624 4507181.537033379, 461236.3280996226 4507194.537878151, 461241.7247760045 4507197.640095252, 461258.8379542616 4507210.660701941, 461261.9432857035 4507219.791508417, 461270.90091201715 4507254.590010401, 461271.56385885156 4507303.918307676, 461273.67536588735 4507318.460376316, 461286.2322009634 4507358.346460313, 461302.55653224624 4507403.197152592, 461365.2492823085 4507485.060388609)')\nline_3 = wkt.loads('LINESTRING (461179.6655721677 4507148.788223281, 461217.56786209624 4507181.537033379, 461236.3280996226 4507194.537878151, 461241.7247760045 4507197.640095252, 461258.8379542616 4507210.660701941, 461261.9432857035 4507219.791508417, 461270.90091201715 4507254.590010401, 461271.56385885156 4507303.918307676, 461273.67536588735 4507318.460376316, 461286.2322009634 4507358.346460313, 461302.55653224624 4507403.197152592, 461365.2492823085 4507485.060388609, 461480.4983426857 4507548.512415529)')\n\nline_list = [line_0, line_1, line_2, line_3]\n\nfig, ax = plt.subplots(figsize=(10, 10))\n\nfor position in range(len(line_list)):\n    distance = position * 5\n    color = f'{\"%06x\" % random.randint(0, 0xFFFFFF)}'\n    plt.plot(*line_list[position].parallel_offset(distance=distance).xy, label=f'Line {position}', color=f'#{color}')\n\n    plt.legend()\n\n\n\n\n\nNB: ho usato parallel_offset solo per motivi grafici. Le linee che ho usato in questo esercizio sono pezzi di una unica linea più lunga che rappresentati sarebbero andati in sovrapposizione nel grafico rendendo impossibile la loro visualizzazione."
  },
  {
    "objectID": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#prima-di-iniziare",
    "href": "posts/verificare-il-potenziale-fotovoltaico-di-un-tetto/2022-05-22-verificare-il-potenziale-fotovoltaico-di-un-tetto.html#prima-di-iniziare",
    "title": "Verificare il potenziale fotovoltaico di un tetto",
    "section": "Prima di iniziare",
    "text": "Prima di iniziare\n\nLibrerie\nPer raggiungere l’obiettivo userò le librerie che seguono:\n\n\nCode\nimport pathlib\nimport geopandas as gpd\nimport rioxarray as rxr\nimport contextily as cx\nimport matplotlib.pyplot as plt\nfrom xrspatial.aspect import aspect\nfrom xrspatial.slope import slope\n\n\n\n\nFonti dati\n\n\nCode\nsample_data = pathlib.Path.cwd().parent.joinpath('sample_data/photovoltaic_potential_analysis')\ndsm = sample_data.joinpath('dsm.tif')\nbuildings = sample_data.joinpath('buildings_footprint.shp')"
  },
  {
    "objectID": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#prima-di-iniziare",
    "href": "posts/da-point-a-pointz/2022-03-31-da-point-a-pointz.html#prima-di-iniziare",
    "title": "Da Point a PointZ",
    "section": "Prima di iniziare",
    "text": "Prima di iniziare\n\nLibrerie\nPer raggiungere l’obiettivo userò essenzialmente geopandas, shapely e rasterio. In verità tra gli import troverai anche pathlib e matplotlib ma non sono essenziali per la corretta riuscita del procedimento.\n\n\nCode\nimport pathlib\n\nimport pandas as pd\nimport geopandas as gpd\nimport rasterio as rio\nfrom rasterio.plot import show, show_hist\nimport matplotlib.pyplot as plt\nfrom shapely.geometry import Point\n\n\n\n\nFonti dati\nCome DEM ho usato un tile del progetto TIN Italy a sua volta ritagliato e su cui ho generato con QGIS quattro punti random.\n\n\nCode\nsample_data = pathlib.Path.cwd().parent.joinpath('sample_data/add_z')\ndem = sample_data.joinpath('clip_dem.tif')\npoints = sample_data.joinpath('points.shp')"
  }
]